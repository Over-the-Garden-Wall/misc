%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Seung_EDfig5.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Jinseop Kim
%%CreationDate: 2/10/14
%%BoundingBox: 0 0 450 752
%%HiResBoundingBox: 0 0 449.6818 751.6681
%%CropBox: 0 0 449.6818 751.6681
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmp:CreatorTool>Adobe Illustrator CC (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2014-02-10T21:35:12-05:00</xmp:CreateDate>
         <xmp:MetadataDate>2014-02-10T21:35:12-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-02-10T21:35:12-05:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>156</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7D5J1rz95h/xFpusifS6&#xA;RqNM1A2b2zxNK00bhRJ8DmP01IozdftHsqyXyloeq6RNeQX+qSakXCSqzhhQuz1PxtIRsAuxpQDv&#xA;irI8VdirsVQUNxetrV3bPGRYx21tJBLxIDSySTrKvLoeKxxmnavvirD/AMuvNWuaz5p86WGoziW1&#xA;0e/Fvp6BEThGXmFCVALbIPtZkZsYjGJHUKz3MdXYq8y886p5207z9bSaGt3NayWVpGtsttLcWksz&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>461.000000</stDim:w>
            <stDim:h>758.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>9.0d3e2</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>9.0d3e2</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ad8000de-ca10-4490-9866-d4c00346ef98</stEvt:instanceID>
                  <stEvt:when>2014-02-10T21:18:59-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:17f5c411-09dc-47ba-be90-0dc2a7f49c5c</stEvt:instanceID>
                  <stEvt:when>2014-02-10T21:35:12-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DocumentID>xmp.did:17f5c411-09dc-47ba-be90-0dc2a7f49c5c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:17f5c411-09dc-47ba-be90-0dc2a7f49c5c</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:ad8000de-ca10-4490-9866-d4c00346ef98</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ad8000de-ca10-4490-9866-d4c00346ef98</stRef:instanceID>
            <stRef:documentID>xmp.did:ad8000de-ca10-4490-9866-d4c00346ef98</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:ad8000de-ca10-4490-9866-d4c00346ef98</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -751.668 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 751.668 li
449.682 751.668 li
449.682 0 li
cp
clp
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
35.1858 206.461 mo
219.635 206.461 li
35.1858 206.461 mo
35.1858 7.1685 li
57.2908 206.461 mo
57.2908 204.438 li
211.123 206.461 mo
217.772 206.461 li
211.123 206.461 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.215686 .207843 .207843 rgb
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 50 /two putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UMJBEY+Helvetica /Helvetica findfont ct_VMDictPut/UMJBEY+Helvetica*1 [48{/.notdef}rp /zero /.notdef /two 205{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf48.7969 218.133 mo(20)[6.67383 0 ]xsh101.569 206.461 mo
101.569 204.438 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [48{/.notdef}rp /zero /.notdef /two /three 204{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf93.0781 218.133 mo(30)[6.67383 0 ]xsh145.815 206.461 mo
145.815 204.438 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [48{/.notdef}rp /zero /.notdef /two /three /four 203{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf137.328 218.133 mo(40)[6.67383 0 ]xsh190.096 206.461 mo
190.096 204.438 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [48{/.notdef}rp /zero /.notdef /two /three /four /five 202{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf181.609 218.133 mo(50)[6.67383 0 ]xsh35.1818 206.461 mo
37.1738 206.461 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf24.5156 210.469 mo(0)sh35.1818 181.519 mo
37.1738 181.519 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf24.5156 185.521 mo(5)sh35.1818 156.613 mo
37.1738 156.613 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [48{/.notdef}rp /zero /one /two /three /four /five 202{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.0234 160.615 mo(10)[6.67383 0 ]xsh35.1818 131.703 mo
37.1738 131.703 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.0234 135.709 mo(15)[6.67383 0 ]xsh35.1818 106.797 mo
37.1738 106.797 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.0234 110.797 mo(20)[6.67383 0 ]xsh35.1818 81.8904 mo
37.1738 81.8904 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.0234 85.8965 mo(25)[6.67383 0 ]xsh35.1818 56.9845 mo
37.1738 56.9845 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.0234 60.9746 mo(30)[6.67383 0 ]xsh35.1818 32.0745 mo
37.1738 32.0745 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.0234 36.0703 mo(35)[6.67383 0 ]xsh20.0234 11.1777 mo(40)[6.67383 0 ]xsh51.7558 196.472 mo
58.4038 196.472 li
58.4038 206.46 li
51.7558 206.46 li
51.7558 196.472 li
cp
.235294 .247059 .517647 rgb
ef
51.7558 196.472 mo
58.4038 196.472 li
58.4038 206.46 li
51.7558 206.46 li
51.7558 196.472 li
cp
.215686 .207843 .207843 rgb
@
58.4048 191.511 mo
65.0528 191.511 li
65.0528 206.46 li
58.4048 206.46 li
58.4048 191.511 li
cp
.235294 .247059 .517647 rgb
ef
58.4048 191.511 mo
65.0528 191.511 li
65.0528 206.46 li
58.4048 206.46 li
58.4048 191.511 li
cp
.215686 .207843 .207843 rgb
@
65.0528 176.558 mo
71.7008 176.558 li
71.7008 206.46 li
65.0528 206.46 li
65.0528 176.558 li
cp
.235294 .247059 .517647 rgb
ef
65.0528 176.558 mo
71.7008 176.558 li
71.7008 206.46 li
65.0528 206.46 li
65.0528 176.558 li
cp
.215686 .207843 .207843 rgb
@
71.7008 136.699 mo
78.3138 136.699 li
78.3138 206.462 li
71.7008 206.462 li
71.7008 136.699 li
cp
.235294 .247059 .517647 rgb
ef
71.7008 136.699 mo
78.3138 136.699 li
78.3138 206.462 li
71.7008 206.462 li
71.7008 136.699 li
cp
.215686 .207843 .207843 rgb
@
78.3188 151.652 mo
84.9638 151.652 li
84.9638 206.461 li
78.3188 206.461 li
78.3188 151.652 li
cp
.235294 .247059 .517647 rgb
ef
78.3188 151.652 mo
84.9638 151.652 li
84.9638 206.461 li
78.3188 206.461 li
78.3188 151.652 li
cp
.215686 .207843 .207843 rgb
@
84.9628 136.699 mo
91.6148 136.699 li
91.6148 206.462 li
84.9628 206.462 li
84.9628 136.699 li
cp
.235294 .247059 .517647 rgb
ef
84.9628 136.699 mo
91.6148 136.699 li
91.6148 206.462 li
84.9628 206.462 li
84.9628 136.699 li
cp
.215686 .207843 .207843 rgb
@
91.6148 111.794 mo
98.2278 111.794 li
98.2278 206.461 li
91.6148 206.461 li
91.6148 111.794 li
cp
.235294 .247059 .517647 rgb
ef
91.6148 111.794 mo
98.2278 111.794 li
98.2278 206.461 li
91.6148 206.461 li
91.6148 111.794 li
cp
.215686 .207843 .207843 rgb
@
98.2288 146.656 mo
104.877 146.656 li
104.877 206.461 li
98.2288 206.461 li
98.2288 146.656 li
cp
.235294 .247059 .517647 rgb
ef
98.2288 146.656 mo
104.877 146.656 li
104.877 206.461 li
98.2288 206.461 li
98.2288 146.656 li
cp
.215686 .207843 .207843 rgb
@
104.877 166.602 mo
111.525 166.602 li
111.525 206.46 li
104.877 206.46 li
104.877 166.602 li
cp
.235294 .247059 .517647 rgb
ef
104.877 166.602 mo
111.525 166.602 li
111.525 206.46 li
104.877 206.46 li
104.877 166.602 li
cp
.215686 .207843 .207843 rgb
@
111.526 181.519 mo
118.174 181.519 li
118.174 206.46 li
111.526 206.46 li
111.526 181.519 li
cp
.235294 .247059 .517647 rgb
ef
111.526 181.519 mo
118.174 181.519 li
118.174 206.46 li
111.526 206.46 li
111.526 181.519 li
cp
.215686 .207843 .207843 rgb
@
118.174 196.472 mo
124.791 196.472 li
124.791 206.46 li
118.174 206.46 li
118.174 196.472 li
cp
.235294 .247059 .517647 rgb
ef
118.174 196.472 mo
124.791 196.472 li
124.791 206.46 li
118.174 206.46 li
118.174 196.472 li
cp
.215686 .207843 .207843 rgb
@
124.791 206.461 mo
131.44 206.461 li
124.791 206.461 li
cp
.235294 .247059 .517647 rgb
f
124.791 206.461 mo
131.44 206.461 li
124.791 206.461 li
.215686 .207843 .207843 rgb
@
131.44 161.609 mo
138.088 161.609 li
138.088 206.461 li
131.44 206.461 li
131.44 161.609 li
cp
.235294 .247059 .517647 rgb
ef
131.44 161.609 mo
138.088 161.609 li
138.088 206.461 li
131.44 206.461 li
131.44 161.609 li
cp
.215686 .207843 .207843 rgb
@
138.088 101.8 mo
144.736 101.8 li
144.736 206.46 li
138.088 206.46 li
138.088 101.8 li
cp
.235294 .247059 .517647 rgb
ef
138.088 101.8 mo
144.736 101.8 li
144.736 206.46 li
138.088 206.46 li
138.088 101.8 li
cp
.215686 .207843 .207843 rgb
@
144.737 7.1685 mo
151.354 7.1685 li
151.354 206.461 li
144.737 206.461 li
144.737 7.1685 li
cp
.235294 .247059 .517647 rgb
ef
144.737 7.1685 mo
151.354 7.1685 li
151.354 206.461 li
144.737 206.461 li
144.737 7.1685 li
cp
.215686 .207843 .207843 rgb
@
151.35 101.8 mo
157.998 101.8 li
157.998 206.46 li
151.35 206.46 li
151.35 101.8 li
cp
.235294 .247059 .517647 rgb
ef
151.35 101.8 mo
157.998 101.8 li
157.998 206.46 li
151.35 206.46 li
151.35 101.8 li
cp
.215686 .207843 .207843 rgb
@
157.998 181.519 mo
164.65 181.519 li
164.65 206.46 li
157.998 206.46 li
157.998 181.519 li
cp
.235294 .247059 .517647 rgb
ef
157.998 181.519 mo
164.65 181.519 li
164.65 206.46 li
157.998 206.46 li
157.998 181.519 li
cp
.215686 .207843 .207843 rgb
@
164.651 196.472 mo
171.296 196.472 li
171.296 206.46 li
164.651 206.46 li
164.651 196.472 li
cp
.235294 .247059 .517647 rgb
ef
164.651 196.472 mo
171.296 196.472 li
171.296 206.46 li
164.651 206.46 li
164.651 196.472 li
cp
.215686 .207843 .207843 rgb
@
171.295 206.461 mo
177.912 206.461 li
171.295 206.461 li
cp
.235294 .247059 .517647 rgb
f
171.295 206.461 mo
177.912 206.461 li
171.295 206.461 li
.215686 .207843 .207843 rgb
@
177.912 206.461 mo
184.561 206.461 li
177.912 206.461 li
cp
.235294 .247059 .517647 rgb
f
177.912 206.461 mo
184.561 206.461 li
177.912 206.461 li
.215686 .207843 .207843 rgb
@
184.561 206.461 mo
191.209 206.461 li
184.561 206.461 li
cp
.235294 .247059 .517647 rgb
f
184.561 206.461 mo
191.209 206.461 li
184.561 206.461 li
.215686 .207843 .207843 rgb
@
191.209 206.461 mo
197.826 206.461 li
191.209 206.461 li
cp
.235294 .247059 .517647 rgb
f
191.209 206.461 mo
197.826 206.461 li
191.209 206.461 li
.215686 .207843 .207843 rgb
@
197.826 201.464 mo
204.474 201.464 li
204.474 206.46 li
197.826 206.46 li
197.826 201.464 li
cp
.235294 .247059 .517647 rgb
ef
197.826 201.464 mo
204.474 201.464 li
204.474 206.46 li
197.826 206.46 li
197.826 201.464 li
cp
.215686 .207843 .207843 rgb
@
204.475 206.461 mo
211.123 206.461 li
204.475 206.461 li
cp
.235294 .247059 .517647 rgb
f
204.475 206.461 mo
211.123 206.461 li
204.475 206.461 li
.215686 .207843 .207843 rgb
@
211.123 206.461 mo
217.772 206.461 li
211.123 206.461 li
cp
.235294 .247059 .517647 rgb
f
.215686 .207843 .207843 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-/B <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-/C <1C60D8A8C9B6079F6D8209747A86332E73924F1B07F271169856A53C915771D7C530ADE68D8CA49F0A6B3478F9E8176949771F40D91B68E1A88C72CE81CC0A91B3CFB642960E7EB2127A1637D49961A11F5DD40622F39379CDAB7E5B349DF832E4955008C5E3208AB258B012A237635179513D820ACF76E0A17ED392C351599687E8E7D0> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 47 /slash putdup 66 /B putdup 67 /C putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [47{/.notdef}rp /slash /zero /one /two /three /four /five 12{/.notdef}rp /B /C 188{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf70.7891 71.5762 mo(BC1/2)sh165.789 71.5762 mo(BC3/4)sh2 lw
0 lj
4 ml
[12 12 ] 0 dsh
127.635 8.2735 mo
127.635 206.875 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/percent <1C60D8A8C9B59F85E959DC9E62959B5B049387399C5A88EDF2D5DFBD776DAFCB889B62AC98B872299D239B948311090C1C069798A7F20A8D7BE29B8C384DB55F663943C1B42044C054991C856F3C3AA085C2B4902C8215DC2701EFD5FA664B5C9C44640813B5AC440B37B70CE58EFC65A9AFC0BCC84F3CDC68795E4995966F74639212F5372957A607AD4B6B94BBB7C36A3A6EF325381FE12C0468B5DD1F216D01C174551A50AC78A5328CDA24DAC0484DFF3993D32A7CA064F169906996AA1E2F6A555998F55A1AFCE2776BEE589EC3162F968A180A5713C4537EF11B8529CE22F8373BC7632472323D1F8491B48E948870255C9E830736EE70F30EE309DFBBB8294CCC2BB5ECB81667BEB60155> |-/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-/I <1C60D8A8C9B854D0EE4B20327A907C36187261> |-/L <1C60D8A8C9B7EF320B5E1B1901757FD427860A5A6931496E07> |-/P <1C60D8A8C9B64EDFE336D280AD0769103D1650D4946BC89E21A88DEC51613F3C79BEE823BD11DE4DA6DB5B89497F0D2976B3DEFC67AF28487C3BB530BC49F1D09A090BACE6D7137C10758B70768799060F36DCE81F308AA18889AF5053DE> |-/c <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/p <1C60D8A8C9B7EF322BA467487181334E955BE246DF5D0EF3A11E2BDC8B674F6546E88A741A6A22FD8101960B985F64CBBE95E02BBF21B77F9A8334BFBA9533492E7CA0F0DECFBF12D8467325B4174F987BBF353C73C5D70057F40D42361649961064C7B7F613D284310CB0B59908DA85F34298558C6B0DF453AED21873A379BC9BBE582E1040BDEC2230FBB52642> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 37 /percent putdup 40 /parenleft putdup 41 /parenright putdup 55 /seven putdup 73 /I putdup 76 /L putdup 80 /P putdup 99 /c putdup 100 /d putdup 101 /e putdup 104 /h putdup 105 /i putdup 108 /l putdup 110 /n putdup 112 /p putdup 114 /r putdup 116 /t putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /one /two /three /four /five /.notdef /seven 10{/.notdef}rp /B /C 5{/.notdef}rp /I 2{/.notdef}rp /L 3{/.notdef}rp /P 18{/.notdef}rp /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /.notdef /t 139{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf56.2891 232.225 mo(75th)sh82.9766 232.225 mo(percentile)sh138.328 232.225 mo(\(%)[3.99609 0 ]xsh156.322 232.225 mo(IPL)sh177.68 232.225 mo(depth\))sh.5 lw
1 lj
10 ml
[] 0 dsh
32.9118 470.574 mo
222.104 470.574 li
32.9118 470.574 mo
32.9118 271.281 li
32.9118 470.574 mo
32.9118 468.55 li
35.1818 7.1685 mo
37.1738 7.1685 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf26.5234 482.045 mo(10)[6.67383 0 ]xsh72.7368 470.574 mo
72.7368 468.55 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf66.3516 482.045 mo(15)[6.67383 0 ]xsh112.561 470.574 mo
112.561 468.55 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf106.172 482.045 mo(20)[6.67383 0 ]xsh152.42 470.574 mo
152.42 468.55 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf146.031 482.045 mo(25)[6.67383 0 ]xsh192.248 470.574 mo
192.248 468.55 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf185.854 482.045 mo(30)[6.67383 0 ]xsh32.9118 437.332 mo
34.9048 437.332 li
32.9118 470.574 mo
34.9048 470.574 li
222.104 470.574 mo
222.104 468.55 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf22.6406 441.342 mo(2)sh32.9118 404.121 mo
34.9048 404.121 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf22.6406 408.115 mo(4)sh32.9118 370.91 mo
34.9048 370.91 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /one /two /three /four /five /six /seven 10{/.notdef}rp /B /C 5{/.notdef}rp /I 2{/.notdef}rp /L 3{/.notdef}rp /P 18{/.notdef}rp /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /.notdef /t 139{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf22.6406 374.912 mo(6)sh32.9118 337.699 mo
34.9048 337.699 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B /C 5{/.notdef}rp /I 2{/.notdef}rp /L 3{/.notdef}rp /P 18{/.notdef}rp /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /.notdef /t 139{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf22.6406 341.701 mo(8)sh32.9118 304.492 mo
34.9048 304.492 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf18.1484 308.498 mo(10)[6.67383 0 ]xsh32.9118 271.281 mo
34.9048 271.281 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf18.1484 275.287 mo(12)[6.67383 0 ]xsh44.8618 453.937 mo
52.8268 453.937 li
52.8268 470.574 li
44.8618 470.574 li
44.8618 453.937 li
cp
.235294 .247059 .517647 rgb
ef
44.8618 453.937 mo
52.8268 453.937 li
52.8268 470.574 li
44.8618 470.574 li
44.8618 453.937 li
cp
.215686 .207843 .207843 rgb
@
52.8258 420.726 mo
60.7908 420.726 li
60.7908 470.574 li
52.8258 470.574 li
52.8258 420.726 li
cp
.235294 .247059 .517647 rgb
ef
52.8258 420.726 mo
60.7908 420.726 li
60.7908 470.574 li
52.8258 470.574 li
52.8258 420.726 li
cp
.215686 .207843 .207843 rgb
@
60.7908 470.574 mo
68.7558 470.574 li
60.7908 470.574 li
cp
.235294 .247059 .517647 rgb
f
60.7908 470.574 mo
68.7558 470.574 li
60.7908 470.574 li
.215686 .207843 .207843 rgb
@
68.7558 420.726 mo
76.7208 420.726 li
76.7208 470.574 li
68.7558 470.574 li
68.7558 420.726 li
cp
.235294 .247059 .517647 rgb
ef
68.7558 420.726 mo
76.7208 420.726 li
76.7208 470.574 li
68.7558 470.574 li
68.7558 420.726 li
cp
.215686 .207843 .207843 rgb
@
76.7208 420.726 mo
84.6858 420.726 li
84.6858 470.574 li
76.7208 470.574 li
76.7208 420.726 li
cp
.235294 .247059 .517647 rgb
ef
76.7208 420.726 mo
84.6858 420.726 li
84.6858 470.574 li
76.7208 470.574 li
76.7208 420.726 li
cp
.215686 .207843 .207843 rgb
@
84.6858 420.726 mo
92.6508 420.726 li
92.6508 470.574 li
84.6858 470.574 li
84.6858 420.726 li
cp
.235294 .247059 .517647 rgb
ef
84.6858 420.726 mo
92.6508 420.726 li
92.6508 470.574 li
84.6858 470.574 li
84.6858 420.726 li
cp
.215686 .207843 .207843 rgb
@
92.6508 404.121 mo
100.616 404.121 li
100.616 470.574 li
92.6508 470.574 li
92.6508 404.121 li
cp
.235294 .247059 .517647 rgb
ef
92.6508 404.121 mo
100.616 404.121 li
100.616 470.574 li
92.6508 470.574 li
92.6508 404.121 li
cp
.215686 .207843 .207843 rgb
@
100.615 370.91 mo
108.58 370.91 li
108.58 470.574 li
100.615 470.574 li
100.615 370.91 li
cp
.235294 .247059 .517647 rgb
ef
100.615 370.91 mo
108.58 370.91 li
108.58 470.574 li
100.615 470.574 li
100.615 370.91 li
cp
.215686 .207843 .207843 rgb
@
108.58 321.098 mo
116.545 321.098 li
116.545 470.574 li
108.58 470.574 li
108.58 321.098 li
cp
.235294 .247059 .517647 rgb
ef
108.58 321.098 mo
116.545 321.098 li
116.545 470.574 li
108.58 470.574 li
108.58 321.098 li
cp
.215686 .207843 .207843 rgb
@
116.545 337.703 mo
124.51 337.703 li
124.51 470.574 li
116.545 470.574 li
116.545 337.703 li
cp
.235294 .247059 .517647 rgb
ef
116.545 337.703 mo
124.51 337.703 li
124.51 470.574 li
116.545 470.574 li
116.545 337.703 li
cp
.215686 .207843 .207843 rgb
@
124.51 453.937 mo
132.51 453.937 li
132.51 470.574 li
124.51 470.574 li
124.51 453.937 li
cp
.235294 .247059 .517647 rgb
ef
124.51 453.937 mo
132.51 453.937 li
132.51 470.574 li
124.51 470.574 li
124.51 453.937 li
cp
.215686 .207843 .207843 rgb
@
132.51 420.726 mo
140.475 420.726 li
140.475 470.574 li
132.51 470.574 li
132.51 420.726 li
cp
.235294 .247059 .517647 rgb
ef
132.51 420.726 mo
140.475 420.726 li
140.475 470.574 li
132.51 470.574 li
132.51 420.726 li
cp
.215686 .207843 .207843 rgb
@
140.475 387.515 mo
148.44 387.515 li
148.44 470.574 li
140.475 470.574 li
140.475 387.515 li
cp
.235294 .247059 .517647 rgb
ef
140.475 387.515 mo
148.44 387.515 li
148.44 470.574 li
140.475 470.574 li
140.475 387.515 li
cp
.215686 .207843 .207843 rgb
@
148.44 337.703 mo
156.405 337.703 li
156.405 470.574 li
148.44 470.574 li
148.44 337.703 li
cp
.235294 .247059 .517647 rgb
ef
148.44 337.703 mo
156.405 337.703 li
156.405 470.574 li
148.44 470.574 li
148.44 337.703 li
cp
.215686 .207843 .207843 rgb
@
156.405 287.887 mo
164.37 287.887 li
164.37 470.574 li
156.405 470.574 li
156.405 287.887 li
cp
.235294 .247059 .517647 rgb
ef
156.405 287.887 mo
164.37 287.887 li
164.37 470.574 li
156.405 470.574 li
156.405 287.887 li
cp
.215686 .207843 .207843 rgb
@
164.369 304.492 mo
172.334 304.492 li
172.334 470.574 li
164.369 470.574 li
164.369 304.492 li
cp
.235294 .247059 .517647 rgb
ef
164.369 304.492 mo
172.334 304.492 li
172.334 470.574 li
164.369 470.574 li
164.369 304.492 li
cp
.215686 .207843 .207843 rgb
@
172.334 387.515 mo
180.299 387.515 li
180.299 470.574 li
172.334 470.574 li
172.334 387.515 li
cp
.235294 .247059 .517647 rgb
ef
172.334 387.515 mo
180.299 387.515 li
180.299 470.574 li
172.334 470.574 li
172.334 387.515 li
cp
.215686 .207843 .207843 rgb
@
180.299 354.304 mo
188.264 354.304 li
188.264 470.574 li
180.299 470.574 li
180.299 354.304 li
cp
.235294 .247059 .517647 rgb
ef
180.299 354.304 mo
188.264 354.304 li
188.264 470.574 li
180.299 470.574 li
180.299 354.304 li
cp
.215686 .207843 .207843 rgb
@
188.264 404.121 mo
196.229 404.121 li
196.229 470.574 li
188.264 470.574 li
188.264 404.121 li
cp
.235294 .247059 .517647 rgb
ef
188.264 404.121 mo
196.229 404.121 li
196.229 470.574 li
188.264 470.574 li
188.264 404.121 li
cp
.215686 .207843 .207843 rgb
@
196.229 420.726 mo
204.194 420.726 li
204.194 470.574 li
196.229 470.574 li
196.229 420.726 li
cp
.235294 .247059 .517647 rgb
ef
196.229 420.726 mo
204.194 420.726 li
204.194 470.574 li
196.229 470.574 li
196.229 420.726 li
cp
.215686 .207843 .207843 rgb
@
204.194 453.937 mo
212.159 453.937 li
212.159 470.574 li
204.194 470.574 li
204.194 453.937 li
cp
.235294 .247059 .517647 rgb
ef
204.194 453.937 mo
212.159 453.937 li
212.159 470.574 li
204.194 470.574 li
204.194 453.937 li
cp
.215686 .207843 .207843 rgb
@
212.158 470.574 mo
220.123 470.574 li
212.158 470.574 li
cp
.235294 .247059 .517647 rgb
f
212.158 470.574 mo
220.123 470.574 li
212.158 470.574 li
.215686 .207843 .207843 rgb
@
2 lw
0 lj
4 ml
[12 12 ] 0 dsh
127.862 271.441 mo
127.862 470.043 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/b <1C60D8A8C9B7EF3218D573119DA1C11A6AE733DE74B449EE28E952049DF20D24986476D6D2EEF32C9EA9D0ACD1DB597DCDAFEA016C8786CCA065DDF1EE5907C8756872FC8DF20AB863D540CF67DD1EF324B2790688B9E765FC9F6CEBC3C128AB52D1A4FF3B9BAF04627D17E8573C64B9FC053FD7156FF73E6BCD82B1A402A01ECDBBEC20265AC1F5281625> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 97 /a putdup 98 /b putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B /C 5{/.notdef}rp /I 2{/.notdef}rp /L 3{/.notdef}rp /P 16{/.notdef}rp /a /b /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /.notdef /t 139{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf57.6113 494.725 mo(10th)sh84.2988 494.725 mo(percentile)sh139.664 494.725 mo(\(%)[3.99609 0 ]xsh157.656 494.725 mo(IPL)sh179.008 494.725 mo(depth\))sh66.4609 303.842 mo(BC4)sh183.461 303.842 mo(BC3a/b)sh.5 lw
1 lj
10 ml
[] 0 dsh
433.553 207.074 mo
254.393 207.074 li
1 1 1 rgb
@
254.393 207.074 mo
433.553 207.074 li
254.393 207.074 mo
254.393 7.7814 li
265.428 207.074 mo
265.428 205.05 li
.215686 .207843 .207843 rgb
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf260.297 218.646 mo(5)sh320.78 207.074 mo
320.78 205.05 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf313.391 218.646 mo(10)[6.67383 0 ]xsh376.096 207.074 mo
376.096 205.05 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf368.703 218.646 mo(15)[6.67383 0 ]xsh431.447 207.074 mo
431.447 205.05 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf424.055 218.646 mo(20)[6.67383 0 ]xsh254.393 207.074 mo
256.385 207.074 li
@
UMJBEY+Helvetica*1 [10.8 0 0 -10.8 0 0 ]msf245.117 210.084 mo(0)sh254.393 187.128 mo
256.385 187.128 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.117 192.131 mo(2)sh254.393 167.214 mo
256.385 167.214 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.117 172.209 mo(4)sh254.393 147.269 mo
256.385 147.269 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.117 152.279 mo(6)sh254.393 127.355 mo
256.385 127.355 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.117 132.357 mo(8)sh254.393 107.41 mo
256.385 107.41 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf238.633 112.412 mo(10)[6.67383 0 ]xsh254.393 87.4965 mo
256.385 87.4965 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf238.633 92.4902 mo(12)[6.67383 0 ]xsh254.393 67.5504 mo
256.385 67.5504 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf238.633 72.5605 mo(14)[6.67383 0 ]xsh254.393 47.6404 mo
256.385 47.6404 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf238.633 52.6387 mo(16)[6.67383 0 ]xsh254.393 27.6915 mo
256.385 27.6915 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf238.633 32.6934 mo(18)[6.67383 0 ]xsh254.393 7.7814 mo
256.385 7.7814 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf238.633 12.7871 mo(20)[6.67383 0 ]xsh259.897 207.074 mo
270.963 207.074 li
259.897 207.074 li
cp
.235294 .247059 .517647 rgb
f
259.897 207.074 mo
270.963 207.074 li
259.897 207.074 li
.215686 .207843 .207843 rgb
@
270.963 177.171 mo
282.033 177.171 li
282.033 207.073 li
270.963 207.073 li
270.963 177.171 li
cp
.235294 .247059 .517647 rgb
ef
270.963 177.171 mo
282.033 177.171 li
282.033 207.073 li
270.963 207.073 li
270.963 177.171 li
cp
.215686 .207843 .207843 rgb
@
282.033 147.269 mo
293.103 147.269 li
293.103 207.074 li
282.033 207.074 li
282.033 147.269 li
cp
.235294 .247059 .517647 rgb
ef
282.033 147.269 mo
293.103 147.269 li
293.103 207.074 li
282.033 207.074 li
282.033 147.269 li
cp
.215686 .207843 .207843 rgb
@
293.104 137.313 mo
304.174 137.313 li
304.174 207.074 li
293.104 207.074 li
293.104 137.313 li
cp
.235294 .247059 .517647 rgb
ef
293.104 137.313 mo
304.174 137.313 li
304.174 207.074 li
293.104 207.074 li
293.104 137.313 li
cp
.215686 .207843 .207843 rgb
@
304.174 67.5504 mo
315.244 67.5504 li
315.244 207.073 li
304.174 207.073 li
304.174 67.5504 li
cp
.235294 .247059 .517647 rgb
ef
304.174 67.5504 mo
315.244 67.5504 li
315.244 207.073 li
304.174 207.073 li
304.174 67.5504 li
cp
.215686 .207843 .207843 rgb
@
315.244 127.355 mo
326.314 127.355 li
326.314 207.074 li
315.244 207.074 li
315.244 127.355 li
cp
.235294 .247059 .517647 rgb
ef
315.244 127.355 mo
326.314 127.355 li
326.314 207.074 li
315.244 207.074 li
315.244 127.355 li
cp
.215686 .207843 .207843 rgb
@
326.315 177.171 mo
337.385 177.171 li
337.385 207.073 li
326.315 207.073 li
326.315 177.171 li
cp
.235294 .247059 .517647 rgb
ef
326.315 177.171 mo
337.385 177.171 li
337.385 207.073 li
326.315 207.073 li
326.315 177.171 li
cp
.215686 .207843 .207843 rgb
@
337.385 127.355 mo
348.455 127.355 li
348.455 207.074 li
337.385 207.074 li
337.385 127.355 li
cp
.235294 .247059 .517647 rgb
ef
337.385 127.355 mo
348.455 127.355 li
348.455 207.074 li
337.385 207.074 li
337.385 127.355 li
cp
.215686 .207843 .207843 rgb
@
348.455 137.313 mo
359.49 137.313 li
359.49 207.074 li
348.455 207.074 li
348.455 137.313 li
cp
.235294 .247059 .517647 rgb
ef
348.455 137.313 mo
359.49 137.313 li
359.49 207.074 li
348.455 207.074 li
348.455 137.313 li
cp
.215686 .207843 .207843 rgb
@
359.49 167.214 mo
370.56 167.214 li
370.56 207.073 li
359.49 207.073 li
359.49 167.214 li
cp
.235294 .247059 .517647 rgb
ef
359.49 167.214 mo
370.56 167.214 li
370.56 207.073 li
359.49 207.073 li
359.49 167.214 li
cp
.215686 .207843 .207843 rgb
@
370.561 7.7814 mo
381.631 7.7814 li
381.631 207.074 li
370.561 207.074 li
370.561 7.7814 li
cp
.235294 .247059 .517647 rgb
ef
370.561 7.7814 mo
381.631 7.7814 li
381.631 207.074 li
370.561 207.074 li
370.561 7.7814 li
cp
.215686 .207843 .207843 rgb
@
381.631 117.367 mo
392.701 117.367 li
392.701 207.074 li
381.631 207.074 li
381.631 117.367 li
cp
.235294 .247059 .517647 rgb
ef
381.631 117.367 mo
392.701 117.367 li
392.701 207.074 li
381.631 207.074 li
381.631 117.367 li
cp
.215686 .207843 .207843 rgb
@
392.701 167.214 mo
403.771 167.214 li
403.771 207.073 li
392.701 207.073 li
392.701 167.214 li
cp
.235294 .247059 .517647 rgb
ef
392.701 167.214 mo
403.771 167.214 li
403.771 207.073 li
392.701 207.073 li
392.701 167.214 li
cp
.215686 .207843 .207843 rgb
@
403.772 167.214 mo
414.842 167.214 li
414.842 207.073 li
403.772 207.073 li
403.772 167.214 li
cp
.235294 .247059 .517647 rgb
ef
403.772 167.214 mo
414.842 167.214 li
414.842 207.073 li
403.772 207.073 li
403.772 167.214 li
cp
.215686 .207843 .207843 rgb
@
414.842 207.074 mo
425.912 207.074 li
414.842 207.074 li
cp
.235294 .247059 .517647 rgb
f
414.842 207.074 mo
425.912 207.074 li
414.842 207.074 li
.215686 .207843 .207843 rgb
@
425.912 207.074 mo
436.979 207.074 li
425.912 207.074 li
cp
.235294 .247059 .517647 rgb
f
425.912 207.074 mo
436.979 207.074 li
425.912 207.074 li
.215686 .207843 .207843 rgb
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C797F8B2BDB0639171EDAAB309BF7> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 45 /hyphen putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /zero /one /two /three /four /five /six /seven /eight 9{/.notdef}rp /B /C 5{/.notdef}rp /I 2{/.notdef}rp /L 3{/.notdef}rp /P 16{/.notdef}rp /a /b /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /.notdef /t 139{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf260.242 231.928 mo(75t)sh276.922 231.928 mo(h-)[10.0098 0 ]xsh294.258 231.928 mo(25th)sh320.945 231.928 mo(percentile)sh376.305 231.928 mo(\(%)[3.99609 0 ]xsh394.305 231.928 mo(IPL)sh415.656 231.928 mo(depth\))sh2 lw
0 lj
4 ml
[12 12 ] 0 dsh
331.186 7.9374 mo
331.186 206.539 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf390.586 48.1406 mo(BC2)sh274.789 48.1406 mo(BC1)sh.5 lw
1 lj
10 ml
[] 0 dsh
253.526 469.648 mo
442.717 469.648 li
253.526 469.648 mo
253.526 270.355 li
253.526 469.648 mo
253.526 467.625 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf249.398 481.123 mo(2)sh286.701 469.648 mo
286.701 467.625 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf282.57 481.123 mo(4)sh319.908 469.648 mo
319.908 467.625 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf315.781 481.123 mo(6)sh353.119 469.648 mo
353.119 467.625 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf348.992 481.123 mo(8)sh386.295 469.648 mo
386.295 467.625 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf379.906 481.123 mo(10)[6.67383 0 ]xsh419.506 469.648 mo
419.506 467.625 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf413.117 481.123 mo(12)[6.67383 0 ]xsh253.526 469.648 mo
255.514 469.648 li
362.717 469.648 mo
362.717 467.625 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 473.654 mo(0)sh253.526 447.477 mo
255.514 447.477 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 451.475 mo(1)sh253.526 425.335 mo
255.514 425.335 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 429.334 mo(2)sh253.526 403.195 mo
255.514 403.195 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 407.201 mo(3)sh253.526 381.055 mo
255.514 381.055 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 385.061 mo(4)sh253.526 358.914 mo
255.514 358.914 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 362.92 mo(5)sh253.526 336.773 mo
255.514 336.773 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 340.781 mo(6)sh253.526 314.636 mo
255.514 314.636 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 318.631 mo(7)sh253.526 292.496 mo
255.514 292.496 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 296.506 mo(8)sh253.526 270.355 mo
255.514 270.355 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7EF326B464DF43714564059769E71FFFC685FC18F48C77D53AC88FCBBC12F494C4F63EED0BC4E888DFF584BE7D2D816586B9A4264CD850BFF6D2740D48815051A0D66B2C6D52B7F71CA6A6822ACB78F611F031D0F31B29F8F7C82DE8795DAD0A78F20A0C158D57307DA2BB022E8173A55705FD29D68A57A980A4A8A50AA38F194766F67D892E4FFF95162BD634B3243B2EC97981B62535F84C02C407EE586AAFD00BF4926CA361322725073A4D1FB7F2047C32550A5DE15> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 57 /nine putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /zero /one /two /three /four /five /six /seven /eight /nine 8{/.notdef}rp /B /C 5{/.notdef}rp /I 2{/.notdef}rp /L 3{/.notdef}rp /P 16{/.notdef}rp /a /b /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef /r /.notdef /t 139{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf243.148 274.357 mo(9)sh258.08 447.472 mo
268.846 447.472 li
268.846 469.648 li
258.08 469.648 li
258.08 447.472 li
cp
.235294 .247059 .517647 rgb
ef
258.08 447.472 mo
268.846 447.472 li
268.846 469.648 li
258.08 469.648 li
258.08 447.472 li
cp
.215686 .207843 .207843 rgb
@
268.846 270.355 mo
279.647 270.355 li
279.647 469.648 li
268.846 469.648 li
268.846 270.355 li
cp
.235294 .247059 .517647 rgb
ef
268.846 270.355 mo
279.647 270.355 li
279.647 469.648 li
268.846 469.648 li
268.846 270.355 li
cp
.215686 .207843 .207843 rgb
@
279.647 270.355 mo
290.448 270.355 li
290.448 469.648 li
279.647 469.648 li
279.647 270.355 li
cp
.235294 .247059 .517647 rgb
ef
279.647 270.355 mo
290.448 270.355 li
290.448 469.648 li
279.647 469.648 li
279.647 270.355 li
cp
.215686 .207843 .207843 rgb
@
290.447 270.355 mo
301.248 270.355 li
301.248 469.648 li
290.447 469.648 li
290.447 270.355 li
cp
.235294 .247059 .517647 rgb
ef
290.447 270.355 mo
301.248 270.355 li
301.248 469.648 li
290.447 469.648 li
290.447 270.355 li
cp
.215686 .207843 .207843 rgb
@
301.244 336.773 mo
312.014 336.773 li
312.014 469.648 li
301.244 469.648 li
301.244 336.773 li
cp
.235294 .247059 .517647 rgb
ef
301.244 336.773 mo
312.014 336.773 li
312.014 469.648 li
301.244 469.648 li
301.244 336.773 li
cp
.215686 .207843 .207843 rgb
@
312.014 425.335 mo
322.811 425.335 li
322.811 469.647 li
312.014 469.647 li
312.014 425.335 li
cp
.235294 .247059 .517647 rgb
ef
312.014 425.335 mo
322.811 425.335 li
322.811 469.647 li
312.014 469.647 li
312.014 425.335 li
cp
.215686 .207843 .207843 rgb
@
322.811 403.195 mo
333.612 403.195 li
333.612 469.648 li
322.811 469.648 li
322.811 403.195 li
cp
.235294 .247059 .517647 rgb
ef
322.811 403.195 mo
333.612 403.195 li
333.612 469.648 li
322.811 469.648 li
322.811 403.195 li
cp
.215686 .207843 .207843 rgb
@
333.612 381.055 mo
344.378 381.055 li
344.378 469.648 li
333.612 469.648 li
333.612 381.055 li
cp
.235294 .247059 .517647 rgb
ef
333.612 381.055 mo
344.378 381.055 li
344.378 469.648 li
333.612 469.648 li
333.612 381.055 li
cp
.215686 .207843 .207843 rgb
@
344.377 314.636 mo
355.178 314.636 li
355.178 469.648 li
344.377 469.648 li
344.377 314.636 li
cp
.235294 .247059 .517647 rgb
ef
344.377 314.636 mo
355.178 314.636 li
355.178 469.648 li
344.377 469.648 li
344.377 314.636 li
cp
.215686 .207843 .207843 rgb
@
355.178 381.055 mo
365.979 381.055 li
365.979 469.648 li
355.178 469.648 li
355.178 381.055 li
cp
.235294 .247059 .517647 rgb
ef
355.178 381.055 mo
365.979 381.055 li
365.979 469.648 li
355.178 469.648 li
355.178 381.055 li
cp
.215686 .207843 .207843 rgb
@
365.979 403.195 mo
376.745 403.195 li
376.745 469.648 li
365.979 469.648 li
365.979 403.195 li
cp
.235294 .247059 .517647 rgb
ef
365.979 403.195 mo
376.745 403.195 li
376.745 469.648 li
365.979 469.648 li
365.979 403.195 li
cp
.215686 .207843 .207843 rgb
@
376.744 381.055 mo
387.545 381.055 li
387.545 469.648 li
376.744 469.648 li
376.744 381.055 li
cp
.235294 .247059 .517647 rgb
ef
376.744 381.055 mo
387.545 381.055 li
387.545 469.648 li
376.744 469.648 li
376.744 381.055 li
cp
.215686 .207843 .207843 rgb
@
387.545 425.335 mo
398.346 425.335 li
398.346 469.647 li
387.545 469.647 li
387.545 425.335 li
cp
.235294 .247059 .517647 rgb
ef
387.545 425.335 mo
398.346 425.335 li
398.346 469.647 li
387.545 469.647 li
387.545 425.335 li
cp
.215686 .207843 .207843 rgb
@
398.342 469.648 mo
409.112 469.648 li
398.342 469.648 li
cp
.235294 .247059 .517647 rgb
f
398.346 469.648 mo
409.112 469.648 li
398.346 469.648 li
.215686 .207843 .207843 rgb
@
409.112 469.648 mo
419.912 469.648 li
409.112 469.648 li
cp
.235294 .247059 .517647 rgb
f
409.112 469.648 mo
419.912 469.648 li
409.112 469.648 li
.215686 .207843 .207843 rgb
@
419.912 447.472 mo
430.709 447.472 li
430.709 469.648 li
419.912 469.648 li
419.912 447.472 li
cp
.235294 .247059 .517647 rgb
ef
419.912 447.472 mo
430.709 447.472 li
430.709 469.648 li
419.912 469.648 li
419.912 447.472 li
cp
.215686 .207843 .207843 rgb
@
340.713 469.648 mo
351.51 469.648 li
340.713 469.648 li
cp
.235294 .247059 .517647 rgb
f
430.713 469.648 mo
441.51 469.648 li
430.713 469.648 li
.215686 .207843 .207843 rgb
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B64EDFF4A769B0E349B0B8A8759517834132408F730D5925332B160EAFC678A283B12B9F41A37E5CF702EF2D2E718583BF> |-/m <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-/v <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-/x <1C60D8A8C9B7A73DB974843DC052273B2236A049EB6E5FE1C55CD985D3062CB5B3D8A046808C9F7D76A5170CE8699B434328F999D97554357E6BC34F0469> |-/mu <1C60D8A8C9B7FBE1C17CB70F9603039897BC7A53A62385A98C51696AFE99BB8643667C20FF42A28C219528D0B9AADC956D5470690FE22E2AFD8CB6133AE25101D7B68FAED2C859053134BF2EFC17AB7D8144A539932C14179950F4BE183E96AB59F2B881AC471E06969886F180AF506B51B986A5> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 65 /A putdup 109 /m putdup 111 /o putdup 117 /u putdup 118 /v putdup 120 /x putdup 181 /mu putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A /B /C 5{/.notdef}rp /I 2{/.notdef}rp /L 3{/.notdef}rp /P 16{/.notdef}rp /a /b /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u /v /.notdef /x 60{/.notdef}rp /mu 74{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf302.273 494.615 mo(Axonal)sh342.299 494.615 mo(volume)sh384.305 494.615 mo(\(\265)[3.99609 0 ]xsh395.633 494.615 mo(m)sh405.648 491.904 mo(3)sh412.313 494.615 mo(\))sh2 lw
0 lj
4 ml
[12 12 ] 0 dsh
317.119 270.515 mo
317.119 469.113 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf385.424 310.717 mo(BC3a)sh270.773 266.662 mo(BC3b)sh%ADOBeginSubsetFont: Helvetica-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-Bold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 97 /a putdup 101 /e putdef/FontBBox {-1018 -481 1437 1159} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B6079F6C9C5B6880C89408E8AD9743F80D45518E28653C59C8B376144C36> |-/a <1C60D8A8C9B7EF322BE880EA00DBE3D8876C5FB7647BA8CCC58F470AD954361B3D91651144567349F627F201CF4B889415AEB7207EF345F45727C83FD2AD41468A288BFAB1F1F8FCB791EF1AEC76E7D581984F9D9441BE677D94FB963C5BC5B27908DAD995ADB6FCD1CBF7C384901475354EB3A245D3307FEAFA4358FCD91A73A9A2D0B4DA6C6FAD93BFAD58639AD4966C9A8F5E818248BC94F832DB718423280F618BE3B1ED95509C1B2FEAFB5A791924A6F1D5665394FA5CC00C95995C34120BDD0AD5EC6C89EEA20ACD877A1340E12A0053EE1F5E0DCED83F6B965D6FD267E8BD205A0A960ED3D04B55781B> |-/e <1C60D8A8C9B7EF322BA45AA2EF7BD5EAECAF85AF93C215781DFD7DA13F94BB4115BE9214BE159174D684F62C2005A0180C6808F64A08B396F763189FED746BF18ED4EE6E66DDE691142C37E3D614F8DB7B75C14A9F846CCAD13261BA0F086A233499153D3DE84AE55E921B6458DA81ABE3A274371E0DC1724FB71E09D7A2DF5E64CCD5B0577B8A6829193E633FA6CD7C2838A9AF9E8E0D8892F0FE> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UMJBEZ+Helvetica-Bold /Helvetica-Bold findfont ct_VMDictPut/UMJBEZ+Helvetica-Bold*1 [97{/.notdef}rp /a 3{/.notdef}rp /e 154{/.notdef}rp]UMJBEZ+Helvetica-Bold nfUMJBEZ+Helvetica-Bold*1 [24 0 0 -24 0 0 ]msf0 20.6367 mo(a)sh3.99219 538.733 mo(e)shUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf22.6406 474.584 mo(0)sh.5 lw
1 lj
10 ml
[] 0 dsh
35.9868 537.039 mo
220.335 537.039 li
220.335 721.387 li
35.9868 721.387 li
35.9868 537.039 li
cp
1 1 1 rgb
@
210.061 721.386 mo
210.061 719.511 li
158.873 721.386 mo
158.873 719.511 li
107.647 721.386 mo
107.647 719.511 li
35.9868 721.386 mo
220.334 721.386 li
35.9868 721.386 mo
35.9868 537.039 li
56.4588 721.386 mo
56.4588 719.511 li
.215686 .207843 .207843 rgb
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf49.4688 733.021 mo(10)[6.67383 0 ]xsh100.664 733.021 mo(15)[6.67383 0 ]xsh151.883 733.021 mo(20)[6.67383 0 ]xsh203.086 733.021 mo(25)[6.67383 0 ]xsh35.9828 702.938 mo
37.8228 702.938 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.6953 707.279 mo(20)[6.67383 0 ]xsh35.9828 656.851 mo
37.8228 656.851 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.6953 661.193 mo(25)[6.67383 0 ]xsh35.9828 610.761 mo
37.8228 610.761 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.6953 615.1 mo(30)[6.67383 0 ]xsh35.9828 564.675 mo
37.8228 564.675 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf20.6953 569.014 mo(35)[6.67383 0 ]xsh119.237 669 mo
121.936 669 li
120.584 667.652 mo
120.584 670.351 li
119.647 668.062 mo
121.522 669.937 li
121.522 668.062 mo
119.647 669.937 li
139.635 630.039 mo
142.334 630.039 li
140.987 628.687 mo
140.987 631.386 li
140.045 629.102 mo
141.92 630.977 li
141.92 629.102 mo
140.045 630.977 li
106.295 664.574 mo
108.998 664.574 li
107.647 663.226 mo
107.647 665.925 li
106.709 663.636 mo
108.584 665.511 li
108.584 663.636 mo
106.709 665.511 li
124.823 662.027 mo
127.522 662.027 li
126.174 660.675 mo
126.174 663.375 li
125.237 661.085 mo
127.108 662.961 li
127.108 661.085 mo
125.237 662.961 li
98.4198 673.461 mo
101.123 673.461 li
99.7718 672.113 mo
99.7718 674.812 li
98.8338 672.527 mo
100.709 674.402 li
100.709 672.527 mo
98.8338 674.402 li
106.147 662.136 mo
108.846 662.136 li
107.498 660.789 mo
107.498 663.488 li
106.561 661.199 mo
108.436 663.074 li
108.436 661.199 mo
106.561 663.074 li
118.033 657.902 mo
120.737 657.902 li
119.385 656.55 mo
119.385 659.25 li
118.447 656.961 mo
120.323 658.835 li
120.323 656.961 mo
118.447 658.835 li
154.897 640.949 mo
157.596 640.949 li
156.248 639.602 mo
156.248 642.3 li
155.311 640.011 mo
157.186 641.886 li
157.186 640.011 mo
155.311 641.886 li
109.487 660.675 mo
112.186 660.675 li
110.834 659.324 mo
110.834 662.027 li
109.897 659.738 mo
111.772 661.613 li
111.772 659.738 mo
109.897 661.613 li
67.9708 693.601 mo
70.6698 693.601 li
69.3228 692.25 mo
69.3228 694.949 li
68.3848 692.664 mo
70.2598 694.539 li
70.2598 692.664 mo
68.3848 694.539 li
128.158 650.55 mo
130.862 650.55 li
129.51 649.199 mo
129.51 651.902 li
128.573 649.613 mo
130.447 651.488 li
130.447 649.613 mo
128.573 651.488 li
122.084 658.8 mo
124.783 658.8 li
123.436 657.449 mo
123.436 660.152 li
122.498 657.863 mo
124.373 659.738 li
124.373 657.863 mo
122.498 659.738 li
132.658 665.777 mo
135.362 665.777 li
134.01 664.425 mo
134.01 667.125 li
133.073 664.835 mo
134.947 666.711 li
134.947 664.835 mo
133.073 666.711 li
138.135 658.574 mo
140.834 658.574 li
139.483 657.226 mo
139.483 659.925 li
138.545 657.636 mo
140.424 659.511 li
140.424 657.636 mo
138.545 659.511 li
193.783 601.574 mo
196.483 601.574 li
195.135 600.222 mo
195.135 602.925 li
194.197 600.636 mo
196.073 602.511 li
196.073 600.636 mo
194.197 602.511 li
132.697 644.55 mo
135.397 644.55 li
134.045 643.199 mo
134.045 645.903 li
133.112 643.613 mo
134.983 645.488 li
134.983 643.613 mo
133.112 645.488 li
120.737 678.976 mo
123.436 678.976 li
122.084 677.625 mo
122.084 680.324 li
121.147 678.039 mo
123.022 679.914 li
123.022 678.039 mo
121.147 679.914 li
170.158 614.363 mo
172.858 614.363 li
171.51 613.011 mo
171.51 615.711 li
170.573 613.425 mo
172.447 615.3 li
172.447 613.425 mo
170.573 615.3 li
110.873 672.75 mo
113.573 672.75 li
112.221 671.402 mo
112.221 674.101 li
111.283 671.812 mo
113.158 673.687 li
113.158 671.812 mo
111.283 673.687 li
166.561 605.585 mo
169.26 605.585 li
167.908 604.238 mo
167.908 606.937 li
166.971 604.652 mo
168.846 606.527 li
168.846 604.652 mo
166.971 606.527 li
122.834 649.727 mo
125.533 649.727 li
124.186 648.375 mo
124.186 651.074 li
123.248 648.789 mo
125.123 650.664 li
125.123 648.789 mo
123.248 650.664 li
112.147 664.011 mo
114.846 664.011 li
113.498 662.664 mo
113.498 665.363 li
112.561 663.074 mo
114.436 664.949 li
114.436 663.074 mo
112.561 664.949 li
99.4358 674.585 mo
102.135 674.585 li
100.783 673.238 mo
100.783 675.937 li
99.8458 673.652 mo
101.721 675.527 li
101.721 673.652 mo
99.8458 675.527 li
131.385 630.488 mo
134.084 630.488 li
132.733 629.136 mo
132.733 631.835 li
131.795 629.55 mo
133.674 631.425 li
133.674 629.55 mo
131.795 631.425 li
133.295 642.039 mo
135.998 642.039 li
134.647 640.687 mo
134.647 643.386 li
133.709 641.102 mo
135.584 642.977 li
135.584 641.102 mo
133.709 642.977 li
209.311 584.585 mo
212.01 584.585 li
210.658 583.238 mo
210.658 585.937 li
209.721 583.652 mo
211.596 585.527 li
211.596 583.652 mo
209.721 585.527 li
97.9358 705.675 mo
100.635 705.675 li
99.2828 704.324 mo
99.2828 707.027 li
98.3458 704.738 mo
100.221 706.613 li
100.221 704.738 mo
98.3458 706.613 li
102.397 670.199 mo
105.096 670.199 li
103.748 668.851 mo
103.748 671.55 li
102.811 669.261 mo
104.686 671.136 li
104.686 669.261 mo
102.811 671.136 li
63.9198 702.488 mo
66.6228 702.488 li
65.2718 701.136 mo
65.2718 703.835 li
64.3338 701.55 mo
66.2088 703.425 li
66.2088 701.55 mo
64.3338 703.425 li
120.737 644.028 mo
123.436 644.028 li
122.084 642.675 mo
122.084 645.375 li
121.147 643.085 mo
123.022 644.961 li
123.022 643.085 mo
121.147 644.961 li
137.498 596.777 mo
140.197 596.777 li
138.846 595.425 mo
138.846 598.125 li
137.908 595.835 mo
139.783 597.711 li
139.783 595.835 mo
137.908 597.711 li
106.748 684.636 mo
109.447 684.636 li
108.096 683.289 mo
108.096 685.988 li
107.158 683.699 mo
109.033 685.574 li
109.033 683.699 mo
107.158 685.574 li
181.26 588.039 mo
183.959 588.039 li
182.612 586.687 mo
182.612 589.386 li
181.67 587.101 mo
183.545 588.972 li
183.545 587.101 mo
181.67 588.972 li
43.7088 699.335 mo
46.4078 699.335 li
45.0608 697.988 mo
45.0608 700.688 li
44.1228 698.402 mo
45.9978 700.277 li
45.9978 698.402 mo
44.1228 700.277 li
145.561 652.277 mo
148.26 652.277 li
146.908 650.925 mo
146.908 653.625 li
145.971 651.335 mo
147.846 653.211 li
147.846 651.335 mo
145.971 653.211 li
92.0448 685.988 mo
94.7478 685.988 li
93.3968 684.636 mo
93.3968 687.335 li
92.4588 685.05 mo
94.3338 686.925 li
94.3338 685.05 mo
92.4588 686.925 li
124.447 625.574 mo
127.147 625.574 li
125.799 624.227 mo
125.799 626.925 li
124.862 624.636 mo
126.737 626.511 li
126.737 624.636 mo
124.862 626.511 li
109.971 604.722 mo
112.67 604.722 li
111.323 603.375 mo
111.323 606.074 li
110.385 603.789 mo
112.26 605.664 li
112.26 603.789 mo
110.385 605.664 li
104.045 641.028 mo
106.748 641.028 li
105.397 639.675 mo
105.397 642.375 li
104.459 640.085 mo
106.334 641.961 li
106.334 640.085 mo
104.459 641.961 li
109.073 659.363 mo
111.772 659.363 li
110.42 658.011 mo
110.42 660.711 li
109.487 658.425 mo
111.362 660.3 li
111.362 658.425 mo
109.487 660.3 li
111.92 668.027 mo
114.623 668.027 li
113.272 666.675 mo
113.272 669.375 li
112.334 667.085 mo
114.209 668.961 li
114.209 667.085 mo
112.334 668.961 li
125.686 636.789 mo
128.385 636.789 li
127.033 635.437 mo
127.033 638.136 li
126.096 635.852 mo
127.971 637.727 li
127.971 635.852 mo
126.096 637.727 li
118.823 649.238 mo
121.522 649.238 li
120.17 647.886 mo
120.17 650.585 li
119.237 648.3 mo
121.112 650.175 li
121.112 648.3 mo
119.237 650.175 li
104.084 683.062 mo
106.783 683.062 li
105.436 681.711 mo
105.436 684.414 li
104.498 682.125 mo
106.373 684 li
106.373 682.125 mo
104.498 684 li
86.2718 683.136 mo
88.9708 683.136 li
87.6228 681.789 mo
87.6228 684.488 li
86.6858 682.199 mo
88.5608 684.074 li
88.5608 682.199 mo
86.6858 684.074 li
114.022 670.539 mo
116.721 670.539 li
115.373 669.187 mo
115.373 671.886 li
114.436 669.601 mo
116.311 671.476 li
116.311 669.601 mo
114.436 671.476 li
117.397 685.164 mo
120.096 685.164 li
118.748 683.812 mo
118.748 686.511 li
117.811 684.226 mo
119.686 686.101 li
119.686 684.226 mo
117.811 686.101 li
.156863 .552941 .309804 rgb
@
75.2828 656.664 mo
77.9828 656.664 li
76.6348 655.312 mo
76.6348 658.011 li
75.6968 655.726 mo
77.5728 657.601 li
77.5728 655.726 mo
75.6968 657.601 li
104.834 655.726 mo
107.533 655.726 li
106.186 654.375 mo
106.186 657.074 li
105.248 654.789 mo
107.123 656.664 li
107.123 654.789 mo
105.248 656.664 li
91.8968 619.839 mo
94.5958 619.839 li
93.2478 618.488 mo
93.2478 621.187 li
92.3108 618.898 mo
94.1858 620.773 li
94.1858 618.898 mo
92.3108 620.773 li
120.885 617.738 mo
123.584 617.738 li
122.233 616.386 mo
122.233 619.089 li
121.299 616.8 mo
123.174 618.675 li
123.174 616.8 mo
121.299 618.675 li
105.283 620.773 mo
107.983 620.773 li
106.635 619.425 mo
106.635 622.125 li
105.697 619.839 mo
107.573 621.714 li
107.573 619.839 mo
105.697 621.714 li
127.823 591.562 mo
130.522 591.562 li
129.174 590.214 mo
129.174 592.914 li
128.233 590.625 mo
130.108 592.5 li
130.108 590.625 mo
128.233 592.5 li
77.1968 665.398 mo
79.8968 665.398 li
78.5488 664.05 mo
78.5488 666.75 li
77.6078 664.464 mo
79.4828 666.339 li
79.4828 664.464 mo
77.6078 666.339 li
89.1968 623.511 mo
91.8968 623.511 li
90.5488 622.164 mo
90.5488 624.863 li
89.6078 622.578 mo
91.4828 624.449 li
91.4828 622.578 mo
89.6078 624.449 li
116.799 630.824 mo
119.498 630.824 li
118.147 629.472 mo
118.147 632.175 li
117.209 629.886 mo
119.084 631.761 li
119.084 629.886 mo
117.209 631.761 li
89.0098 629.289 mo
91.7088 629.289 li
90.3578 627.937 mo
90.3578 630.636 li
89.4238 628.347 mo
91.2988 630.227 li
91.2988 628.347 mo
89.4238 630.227 li
131.834 584.773 mo
134.537 584.773 li
133.186 583.425 mo
133.186 586.125 li
132.248 583.839 mo
134.123 585.714 li
134.123 583.839 mo
132.248 585.714 li
93.5838 635.511 mo
96.2828 635.511 li
94.9358 634.164 mo
94.9358 636.863 li
93.9978 634.574 mo
95.8728 636.449 li
95.8728 634.574 mo
93.9978 636.449 li
80.4978 625.953 mo
83.1968 625.953 li
81.8458 624.602 mo
81.8458 627.3 li
80.9078 625.011 mo
82.7828 626.886 li
82.7828 625.011 mo
80.9078 626.886 li
75.0608 682.089 mo
77.7598 682.089 li
76.4078 680.738 mo
76.4078 683.437 li
75.4708 681.148 mo
77.3458 683.023 li
77.3458 681.148 mo
75.4708 683.023 li
72.6228 624.828 mo
75.3228 624.828 li
73.9708 623.477 mo
73.9708 626.175 li
73.0328 623.886 mo
74.9078 625.761 li
74.9078 623.886 mo
73.0328 625.761 li
92.2328 626.55 mo
94.9358 626.55 li
93.5838 625.199 mo
93.5838 627.898 li
92.6468 625.613 mo
94.5218 627.488 li
94.5218 625.613 mo
92.6468 627.488 li
105.623 633.714 mo
108.323 633.714 li
106.971 632.363 mo
106.971 635.062 li
106.037 632.773 mo
107.912 634.648 li
107.912 632.773 mo
106.037 634.648 li
131.233 583.125 mo
133.936 583.125 li
132.584 581.773 mo
132.584 584.472 li
131.647 582.187 mo
133.522 584.062 li
133.522 582.187 mo
131.647 584.062 li
103.108 625.164 mo
105.811 625.164 li
104.459 623.812 mo
104.459 626.511 li
103.522 624.227 mo
105.397 626.097 li
105.397 624.227 mo
103.522 626.097 li
83.0838 663.562 mo
85.7828 663.562 li
84.4358 662.214 mo
84.4358 664.914 li
83.4978 662.625 mo
85.3728 664.5 li
85.3728 662.625 mo
83.4978 664.5 li
100.971 626.925 mo
103.674 626.925 li
102.323 625.574 mo
102.323 628.273 li
101.385 625.988 mo
103.26 627.863 li
103.26 625.988 mo
101.385 627.863 li
114.549 586.839 mo
117.248 586.839 li
115.897 585.488 mo
115.897 588.187 li
114.959 585.898 mo
116.834 587.773 li
116.834 585.898 mo
114.959 587.773 li
81.5838 632.699 mo
84.2828 632.699 li
82.9358 631.352 mo
82.9358 634.05 li
81.9978 631.761 mo
83.8728 633.636 li
83.8728 631.761 mo
81.9978 633.636 li
87.4358 594.636 mo
90.1348 594.636 li
88.7828 593.289 mo
88.7828 595.988 li
87.8458 593.699 mo
89.7208 595.578 li
89.7208 593.699 mo
87.8458 595.578 li
101.647 617.738 mo
104.346 617.738 li
102.998 616.39 mo
102.998 619.089 li
102.061 616.8 mo
103.936 618.675 li
103.936 616.8 mo
102.061 618.675 li
96.8848 619.539 mo
99.5838 619.539 li
98.2368 618.187 mo
98.2368 620.89 li
97.2948 618.601 mo
99.1698 620.472 li
99.1698 618.601 mo
97.2948 620.472 li
81.4358 636.675 mo
84.1348 636.675 li
82.7828 635.324 mo
82.7828 638.023 li
81.8458 635.738 mo
83.7208 637.613 li
83.7208 635.738 mo
81.8458 637.613 li
116.459 594.523 mo
119.158 594.523 li
117.811 593.175 mo
117.811 595.875 li
116.873 593.589 mo
118.748 595.464 li
118.748 593.589 mo
116.873 595.464 li
60.7718 630.824 mo
63.4708 630.824 li
62.1228 629.472 mo
62.1228 632.175 li
61.1858 629.886 mo
63.0608 631.761 li
63.0608 629.886 mo
61.1858 631.761 li
110.612 577.05 mo
113.311 577.05 li
111.959 575.699 mo
111.959 578.398 li
111.022 576.113 mo
112.897 577.988 li
112.897 576.113 mo
111.022 577.988 li
90.5448 616.125 mo
93.2478 616.125 li
91.8968 614.773 mo
91.8968 617.476 li
90.9588 615.187 mo
92.8338 617.062 li
92.8338 615.187 mo
90.9588 617.062 li
137.197 571.988 mo
139.897 571.988 li
138.545 570.636 mo
138.545 573.339 li
137.612 571.05 mo
139.483 572.925 li
139.483 571.05 mo
137.612 572.925 li
48.3968 695.101 mo
51.0958 695.101 li
49.7478 693.75 mo
49.7478 696.449 li
48.8108 694.164 mo
50.6858 696.039 li
50.6858 694.164 mo
48.8108 696.039 li
85.9708 643.648 mo
88.6698 643.648 li
87.3228 642.3 mo
87.3228 645 li
86.3848 642.714 mo
88.2598 644.589 li
88.2598 642.714 mo
86.3848 644.589 li
79.1468 614.773 mo
81.8458 614.773 li
80.4978 613.425 mo
80.4978 616.125 li
79.5608 613.839 mo
81.4358 615.714 li
81.4358 613.839 mo
79.5608 615.714 li
99.5098 618.113 mo
102.209 618.113 li
100.862 616.761 mo
100.862 619.464 li
99.9198 617.175 mo
101.795 619.05 li
101.795 617.175 mo
99.9198 619.05 li
109.596 610.05 mo
112.295 610.05 li
110.947 608.699 mo
110.947 611.398 li
110.01 609.113 mo
111.885 610.988 li
111.885 609.113 mo
110.01 610.988 li
85.2948 622.839 mo
87.9978 622.839 li
86.6468 621.488 mo
86.6468 624.187 li
85.7088 621.898 mo
87.5838 623.773 li
87.5838 621.898 mo
85.7088 623.773 li
138.545 575.55 mo
141.248 575.55 li
139.897 574.199 mo
139.897 576.898 li
138.959 574.613 mo
140.834 576.488 li
140.834 574.613 mo
138.959 576.488 li
99.8108 629.511 mo
102.51 629.511 li
101.158 628.164 mo
101.158 630.863 li
100.221 628.574 mo
102.096 630.449 li
102.096 628.574 mo
100.221 630.449 li
99.3618 628.765 mo
102.061 628.765 li
100.709 627.414 mo
100.709 630.113 li
99.7718 627.824 mo
101.647 629.699 li
101.647 627.824 mo
99.7718 629.699 li
117.17 633.863 mo
119.873 633.863 li
118.522 632.511 mo
118.522 635.214 li
117.584 632.925 mo
119.459 634.8 li
119.459 632.925 mo
117.584 634.8 li
92.5728 624.789 mo
95.2718 624.789 li
93.9198 623.437 mo
93.9198 626.136 li
92.9868 623.847 mo
94.8618 625.727 li
94.8618 623.847 mo
92.9868 625.727 li
140.045 577.949 mo
142.748 577.949 li
141.397 576.597 mo
141.397 579.3 li
140.459 577.011 mo
142.334 578.886 li
142.334 577.011 mo
140.459 578.886 li
83.4198 632.852 mo
86.1228 632.852 li
84.7718 631.5 mo
84.7718 634.199 li
83.8338 631.914 mo
85.7088 633.789 li
85.7088 631.914 mo
83.8338 633.789 li
71.1228 623.773 mo
73.8228 623.773 li
72.4708 622.425 mo
72.4708 625.125 li
71.5328 622.839 mo
73.4078 624.714 li
73.4078 622.839 mo
71.5328 624.714 li
160.596 587.363 mo
163.295 587.363 li
161.947 586.011 mo
161.947 588.714 li
161.01 586.425 mo
162.885 588.3 li
162.885 586.425 mo
161.01 588.3 li
98.6858 586.8 mo
101.385 586.8 li
100.033 585.449 mo
100.033 588.148 li
99.0958 585.863 mo
100.971 587.738 li
100.971 585.863 mo
99.0958 587.738 li
156.737 547.5 mo
159.436 547.5 li
158.084 546.148 mo
158.084 548.851 li
157.147 546.562 mo
159.022 548.437 li
159.022 546.562 mo
157.147 548.437 li
46.2208 660 mo
48.9198 660 li
47.5728 658.648 mo
47.5728 661.351 li
46.6348 659.062 mo
48.5098 660.937 li
48.5098 659.062 mo
46.6348 660.937 li
78.3228 632.136 mo
81.0218 632.136 li
79.6698 630.789 mo
79.6698 633.488 li
78.7368 631.199 mo
80.6118 633.074 li
80.6118 631.199 mo
78.7368 633.074 li
81.3968 630.449 mo
84.0958 630.449 li
82.7478 629.102 mo
82.7478 631.8 li
81.8108 629.511 mo
83.6858 631.386 li
83.6858 629.511 mo
81.8108 631.386 li
99.1348 590.214 mo
101.834 590.214 li
100.487 588.863 mo
100.487 591.562 li
99.5448 589.273 mo
101.42 591.148 li
101.42 589.273 mo
99.5448 591.148 li
105.471 635.55 mo
108.17 635.55 li
106.823 634.199 mo
106.823 636.898 li
105.885 634.613 mo
107.76 636.488 li
107.76 634.613 mo
105.885 636.488 li
127.26 591.675 mo
129.959 591.675 li
128.612 590.324 mo
128.612 593.023 li
127.67 590.738 mo
129.545 592.613 li
129.545 590.738 mo
127.67 592.613 li
106.373 610.914 mo
109.073 610.914 li
107.721 609.562 mo
107.721 612.261 li
106.783 609.976 mo
108.658 611.851 li
108.658 609.976 mo
106.783 611.851 li
70.0328 619.05 mo
72.7368 619.05 li
71.3848 617.699 mo
71.3848 620.398 li
70.4468 618.113 mo
72.3228 619.988 li
72.3228 618.113 mo
70.4468 619.988 li
108.436 609.976 mo
111.135 609.976 li
109.783 608.625 mo
109.783 611.324 li
108.846 609.039 mo
110.721 610.914 li
110.721 609.039 mo
108.846 610.914 li
106.823 610.914 mo
109.522 610.914 li
108.17 609.562 mo
108.17 612.261 li
107.237 609.976 mo
109.112 611.851 li
109.112 609.976 mo
107.237 611.851 li
137.533 601.386 mo
140.233 601.386 li
138.885 600.039 mo
138.885 602.738 li
137.947 600.449 mo
139.823 602.324 li
139.823 600.449 mo
137.947 602.324 li
88.4468 624.898 mo
91.1468 624.898 li
89.7948 623.55 mo
89.7948 626.25 li
88.8618 623.964 mo
90.7368 625.839 li
90.7368 623.964 mo
88.8618 625.839 li
53.9468 681.789 mo
56.6468 681.789 li
55.2948 680.437 mo
55.2948 683.136 li
54.3618 680.851 mo
56.2368 682.726 li
56.2368 680.851 mo
54.3618 682.726 li
79.6348 624.039 mo
82.3338 624.039 li
80.9868 622.687 mo
80.9868 625.39 li
80.0448 623.102 mo
81.9198 624.972 li
81.9198 623.102 mo
80.0448 624.972 li
96.7368 633.523 mo
99.4358 633.523 li
98.0838 632.175 mo
98.0838 634.875 li
97.1468 632.589 mo
99.0218 634.464 li
99.0218 632.589 mo
97.1468 634.464 li
79.7088 651.898 mo
82.4078 651.898 li
81.0608 650.55 mo
81.0608 653.25 li
80.1228 650.964 mo
81.9978 652.839 li
81.9978 650.964 mo
80.1228 652.839 li
92.3848 613.914 mo
95.0838 613.914 li
93.7368 612.562 mo
93.7368 615.265 li
92.7948 612.976 mo
94.6698 614.847 li
94.6698 612.976 mo
92.7948 614.847 li
120.584 592.687 mo
123.283 592.687 li
121.936 591.339 mo
121.936 594.039 li
120.998 591.75 mo
122.873 593.625 li
122.873 591.75 mo
120.998 593.625 li
87.8108 666.636 mo
90.5098 666.636 li
89.1578 665.289 mo
89.1578 667.988 li
88.2208 665.699 mo
90.0958 667.574 li
90.0958 665.699 mo
88.2208 667.574 li
94.3728 645.148 mo
97.0728 645.148 li
95.7208 643.8 mo
95.7208 646.5 li
94.7828 644.214 mo
96.6578 646.089 li
96.6578 644.214 mo
94.7828 646.089 li
120.737 644.023 mo
123.436 644.023 li
122.084 642.675 mo
122.084 645.375 li
121.147 643.089 mo
123.022 644.964 li
123.022 643.089 mo
121.147 644.964 li
102.846 614.511 mo
105.545 614.511 li
104.197 613.164 mo
104.197 615.863 li
103.26 613.574 mo
105.135 615.449 li
105.135 613.574 mo
103.26 615.449 li
55.4868 656.738 mo
58.1858 656.738 li
56.8338 655.386 mo
56.8338 658.089 li
55.8968 655.8 mo
57.7718 657.675 li
57.7718 655.8 mo
55.8968 657.675 li
73.6698 647.738 mo
76.3728 647.738 li
75.0218 646.386 mo
75.0218 649.089 li
74.0838 646.8 mo
75.9588 648.675 li
75.9588 646.8 mo
74.0838 648.675 li
134.533 614.511 mo
137.233 614.511 li
135.885 613.164 mo
135.885 615.863 li
134.947 613.574 mo
136.823 615.449 li
136.823 613.574 mo
134.947 615.449 li
.917647 .733333 .207843 rgb
@
134.588 630.472 mo
134.588 631.507 133.748 632.347 132.713 632.347 cv
131.678 632.347 130.838 631.507 130.838 630.472 cv
130.838 629.437 131.678 628.597 132.713 628.597 cv
133.748 628.597 134.588 629.437 134.588 630.472 cv
140.744 596.773 mo
140.744 597.808 139.905 598.648 138.869 598.648 cv
137.834 598.648 136.994 597.808 136.994 596.773 cv
136.994 595.738 137.834 594.898 138.869 594.898 cv
139.905 594.898 140.744 595.738 140.744 596.773 cv
46.9468 699.375 mo
46.9468 700.41 46.1078 701.25 45.0728 701.25 cv
44.0368 701.25 43.1968 700.41 43.1968 699.375 cv
43.1968 698.339 44.0368 697.5 45.0728 697.5 cv
46.1078 697.5 46.9468 698.339 46.9468 699.375 cv
127.678 625.609 mo
127.678 626.644 126.838 627.484 125.803 627.484 cv
124.768 627.484 123.928 626.644 123.928 625.609 cv
123.928 624.574 124.768 623.734 125.803 623.734 cv
126.838 623.734 127.678 624.574 127.678 625.609 cv
113.205 604.714 mo
113.205 605.75 112.365 606.589 111.33 606.589 cv
110.295 606.589 109.455 605.75 109.455 604.714 cv
109.455 603.679 110.295 602.839 111.33 602.839 cv
112.365 602.839 113.205 603.679 113.205 604.714 cv
107.264 641.054 mo
107.264 642.089 106.424 642.929 105.389 642.929 cv
104.354 642.929 103.514 642.089 103.514 641.054 cv
103.514 640.019 104.354 639.179 105.389 639.179 cv
106.424 639.179 107.264 640.019 107.264 641.054 cv
123.951 644.023 mo
123.951 645.058 123.112 645.898 122.076 645.898 cv
121.041 645.898 120.201 645.058 120.201 644.023 cv
120.201 642.988 121.041 642.148 122.076 642.148 cv
123.112 642.148 123.951 642.988 123.951 644.023 cv
108.022 655.742 mo
108.022 656.777 107.182 657.617 106.147 657.617 cv
105.112 657.617 104.272 656.777 104.272 655.742 cv
104.272 654.707 105.112 653.867 106.147 653.867 cv
107.182 653.867 108.022 654.707 108.022 655.742 cv
.215686 .207843 .207843 rgb
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf58.5176 745.896 mo(25th)sh85.2109 745.896 mo(percentile)sh140.563 745.896 mo(\(%)[3.99609 0 ]xsh158.563 745.896 mo(IPL)sh179.914 745.896 mo(depth\))sh41.9788 574.164 mo
119.455 574.164 li
41.9788 530.289 mo
119.455 530.289 li
41.9788 574.164 mo
41.9788 530.289 li
119.455 574.164 mo
119.455 530.289 li
41.9788 574.164 mo
119.455 574.164 li
41.9788 574.164 mo
41.9788 530.289 li
41.9788 574.164 mo
119.455 574.164 li
41.9788 530.289 mo
119.455 530.289 li
41.9788 574.164 mo
41.9788 530.289 li
119.455 574.164 mo
119.455 530.289 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf62.4453 543.076 mo(BC1)sh0 lj
48.0058 538.839 mo
50.7048 538.839 li
49.3538 537.488 mo
49.3538 540.187 li
48.4198 537.902 mo
50.2948 539.777 li
50.2948 537.902 mo
48.4198 539.777 li
.156863 .552941 .309804 rgb
@
.215686 .207843 .207843 rgb
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf62.4453 556.506 mo(BC2)sh48.0058 552.226 mo
50.7048 552.226 li
49.3538 550.875 mo
49.3538 553.574 li
48.4198 551.289 mo
50.2948 553.164 li
50.2948 551.289 mo
48.4198 553.164 li
.917647 .733333 .207843 rgb
@
.215686 .207843 .207843 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEY+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/w <1C60D8A8C9B6079F005DC3C75B1A77147C8375CCDFD0A24C766DB69E35DE36706983CA4785D8107CB89C2D97982F5548429FD5F71FC913D3> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEY+Helvetica /Encoding getdup 83 /S putdup 119 /w putpop%ADOEndSubsetFont
/UMJBEY+Helvetica*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A /B /C 5{/.notdef}rp /I 2{/.notdef}rp /L 3{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u /v /w /x 60{/.notdef}rp /mu 74{/.notdef}rp]UMJBEY+Helvetica nfUMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf62.4453 569.881 mo(Swapped)sh50.9708 565.359 mo
50.9708 566.339 50.1738 567.132 49.1968 567.132 cv
48.2168 567.132 47.4238 566.339 47.4238 565.359 cv
47.4238 564.382 48.2168 563.589 49.1968 563.589 cv
50.1738 563.589 50.9708 564.382 50.9708 565.359 cv
@
UMJBEY+Helvetica*1 [0 -12 -12 0 0 0 ]msf14.6328 706.975 mo(75th)[-6.67383 -6.67383 -3.33398 0 ]ysh14.6328 680.295 mo(percentile)[-6.67383 -6.67383 -3.99609 -6 -6.67383 -6.67383 -3.33398 -2.66602 -2.66602 0 ]ysh14.6328 624.943 mo(\(%)[-3.99609 0 ]ysh14.6328 606.936 mo(IPL)[-3.33398 -8.00391 0 ]ysh14.6328 586.021 mo(depth\))[-6.67383 -6.67383 -6.67383 -3.33398 -6.67383 0 ]ysh1 lj
253.463 536.921 mo
437.815 536.921 li
437.815 721.273 li
253.463 721.273 li
253.463 536.921 li
cp
1 1 1 rgb
@
253.463 721.273 mo
437.815 721.273 li
253.463 721.273 mo
253.463 536.921 li
281.104 721.273 mo
281.104 719.398 li
.215686 .207843 .207843 rgb
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf274.117 731.904 mo(15)[6.67383 0 ]xsh327.19 721.273 mo
327.19 719.398 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf320.203 731.904 mo(20)[6.67383 0 ]xsh373.28 721.273 mo
373.28 719.398 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf366.297 731.904 mo(25)[6.67383 0 ]xsh419.362 721.273 mo
419.362 719.398 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf412.375 731.904 mo(30)[6.67383 0 ]xsh253.463 721.273 mo
255.303 721.273 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf245.164 724.615 mo(0)sh253.463 694.91 mo
255.303 694.91 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf245.164 698.24 mo(2)sh253.463 668.585 mo
255.303 668.585 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf245.164 671.928 mo(4)sh253.463 642.261 mo
255.303 642.261 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf245.164 645.6 mo(6)sh253.463 615.898 mo
255.303 615.898 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf245.164 619.227 mo(8)sh253.463 589.574 mo
255.303 589.574 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf239.174 592.912 mo(10)[6.67383 0 ]xsh253.463 563.246 mo
255.303 563.246 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf239.174 566.584 mo(12)[6.67383 0 ]xsh253.463 536.925 mo
255.303 536.925 li
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf239.174 540.264 mo(14)[6.67383 0 ]xsh376.014 646.085 mo
378.713 646.085 li
377.365 644.738 mo
377.365 647.437 li
376.424 645.148 mo
378.299 647.023 li
378.299 645.148 mo
376.424 647.023 li
377.854 646.273 mo
380.549 646.273 li
379.201 644.921 mo
379.201 647.625 li
378.264 645.335 mo
380.139 647.211 li
380.139 645.335 mo
378.264 647.211 li
370.088 640.648 mo
372.791 640.648 li
371.44 639.296 mo
371.44 642 li
370.502 639.711 mo
372.377 641.585 li
372.377 639.711 mo
370.502 641.585 li
391.655 636.187 mo
394.354 636.187 li
393.002 634.835 mo
393.002 637.535 li
392.065 635.25 mo
393.94 637.125 li
393.94 635.25 mo
392.065 637.125 li
354.979 630.785 mo
357.678 630.785 li
356.326 629.437 mo
356.326 632.136 li
355.389 629.847 mo
357.264 631.722 li
357.264 629.847 mo
355.389 631.722 li
375.905 628.125 mo
378.604 628.125 li
377.252 626.773 mo
377.252 629.472 li
376.315 627.187 mo
378.19 629.062 li
378.19 627.187 mo
376.315 629.062 li
371.74 627.898 mo
374.44 627.898 li
373.088 626.546 mo
373.088 629.25 li
372.155 626.961 mo
374.03 628.835 li
374.03 626.961 mo
372.155 628.835 li
386.815 628.613 mo
389.514 628.613 li
388.166 627.261 mo
388.166 629.961 li
387.229 627.671 mo
389.104 629.546 li
389.104 627.671 mo
387.229 629.546 li
379.951 627.937 mo
382.655 627.937 li
381.303 626.585 mo
381.303 629.285 li
380.365 627 mo
382.24 628.875 li
382.24 627 mo
380.365 628.875 li
398.549 628.461 mo
401.252 628.461 li
399.905 627.113 mo
399.905 629.812 li
398.963 627.523 mo
400.838 629.398 li
400.838 627.523 mo
398.963 629.398 li
405.639 630.972 mo
408.338 630.972 li
406.99 629.625 mo
406.99 632.324 li
406.053 630.035 mo
407.924 631.91 li
407.924 630.035 mo
406.053 631.91 li
432.229 631.988 mo
434.924 631.988 li
433.576 630.636 mo
433.576 633.335 li
432.639 631.046 mo
434.514 632.921 li
434.514 631.046 mo
432.639 632.921 li
402.155 627.523 mo
404.854 627.523 li
403.502 626.171 mo
403.502 628.875 li
402.565 626.585 mo
404.44 628.461 li
404.44 626.585 mo
402.565 628.461 li
393.155 626.585 mo
395.854 626.585 li
394.502 625.238 mo
394.502 627.937 li
393.565 625.648 mo
395.44 627.523 li
395.44 625.648 mo
393.565 627.523 li
411.19 621.296 mo
413.889 621.296 li
412.541 619.949 mo
412.541 622.648 li
411.604 620.363 mo
413.479 622.238 li
413.479 620.363 mo
411.604 622.238 li
429.639 618.335 mo
432.338 618.335 li
430.99 616.988 mo
430.99 619.687 li
430.049 617.398 mo
431.928 619.273 li
431.928 617.398 mo
430.049 619.273 li
425.104 617.062 mo
427.799 617.062 li
426.451 615.711 mo
426.451 618.41 li
425.514 616.121 mo
427.389 618 li
427.389 616.121 mo
425.514 618 li
412.541 616.046 mo
415.24 616.046 li
413.889 614.699 mo
413.889 617.398 li
412.951 615.113 mo
414.826 616.988 li
414.826 615.113 mo
412.951 616.988 li
379.053 612.898 mo
381.752 612.898 li
380.405 611.546 mo
380.405 614.246 li
379.463 611.961 mo
381.338 613.835 li
381.338 611.961 mo
379.463 613.835 li
376.463 613.835 mo
379.166 613.835 li
377.815 612.488 mo
377.815 615.187 li
376.877 612.898 mo
378.752 614.773 li
378.752 612.898 mo
376.877 614.773 li
396.49 610.16 mo
399.19 610.16 li
397.838 608.812 mo
397.838 611.511 li
396.905 609.222 mo
398.78 611.097 li
398.78 609.222 mo
396.905 611.097 li
391.315 606.148 mo
394.014 606.148 li
392.666 604.796 mo
392.666 607.496 li
391.729 605.211 mo
393.604 607.085 li
393.604 605.211 mo
391.729 607.085 li
383.963 604.121 mo
386.666 604.121 li
385.315 602.773 mo
385.315 605.472 li
384.377 603.187 mo
386.252 605.062 li
386.252 603.187 mo
384.377 605.062 li
366.115 601.648 mo
368.815 601.648 li
367.463 600.296 mo
367.463 602.996 li
366.53 600.711 mo
368.405 602.585 li
368.405 600.711 mo
366.53 602.585 li
415.916 601.613 mo
418.615 601.613 li
417.264 600.261 mo
417.264 602.961 li
416.326 600.671 mo
418.201 602.546 li
418.201 600.671 mo
416.326 602.546 li
422.03 598.347 mo
424.729 598.347 li
423.377 596.996 mo
423.377 599.699 li
422.44 597.41 mo
424.315 599.285 li
424.315 597.41 mo
422.44 599.285 li
407.252 594.562 mo
409.951 594.562 li
408.604 593.211 mo
408.604 595.91 li
407.666 593.621 mo
409.541 595.496 li
409.541 593.621 mo
407.666 595.496 li
386.479 574.613 mo
389.178 574.613 li
387.826 573.261 mo
387.826 575.961 li
386.889 573.671 mo
388.764 575.546 li
388.764 573.671 mo
386.889 575.546 li
367.315 660.785 mo
370.014 660.785 li
368.662 659.437 mo
368.662 662.136 li
367.729 659.847 mo
369.604 661.722 li
369.604 659.847 mo
367.729 661.722 li
.227451 .670588 .882353 rgb
@
406.99 648.75 mo
409.69 648.75 li
408.338 647.398 mo
408.338 650.097 li
407.405 647.812 mo
409.28 649.687 li
409.28 647.812 mo
407.405 649.687 li
383.963 656.925 mo
386.666 656.925 li
385.315 655.574 mo
385.315 658.273 li
384.377 655.984 mo
386.252 657.859 li
386.252 655.984 mo
384.377 657.859 li
397.916 656.25 mo
400.615 656.25 li
399.264 654.898 mo
399.264 657.597 li
398.326 655.312 mo
400.201 657.187 li
400.201 655.312 mo
398.326 657.187 li
407.514 656.285 mo
410.213 656.285 li
408.865 654.937 mo
408.865 657.636 li
407.924 655.347 mo
409.799 657.222 li
409.799 655.347 mo
407.924 657.222 li
372.53 660.261 mo
375.225 660.261 li
373.877 658.91 mo
373.877 661.609 li
372.94 659.324 mo
374.815 661.199 li
374.815 659.324 mo
372.94 661.199 li
396.115 660.187 mo
398.815 660.187 li
397.463 658.835 mo
397.463 661.535 li
396.53 659.246 mo
398.405 661.125 li
398.405 659.246 mo
396.53 661.125 li
376.877 663.898 mo
379.576 663.898 li
378.225 662.55 mo
378.225 665.25 li
377.291 662.961 mo
379.166 664.835 li
379.166 662.961 mo
377.291 664.835 li
373.166 664.312 mo
375.865 664.312 li
374.514 662.961 mo
374.514 665.66 li
373.576 663.375 mo
375.451 665.25 li
375.451 663.375 mo
373.576 665.25 li
406.201 665.585 mo
408.905 665.585 li
407.549 664.234 mo
407.549 666.937 li
406.615 664.648 mo
408.49 666.523 li
408.49 664.648 mo
406.615 666.523 li
365.065 666.859 mo
367.764 666.859 li
366.416 665.511 mo
366.416 668.211 li
365.475 665.925 mo
367.35 667.8 li
367.35 665.925 mo
365.475 667.8 li
394.576 665.812 mo
397.28 665.812 li
395.928 664.461 mo
395.928 667.16 li
394.99 664.871 mo
396.865 666.75 li
396.865 664.871 mo
394.99 666.75 li
394.951 667.8 mo
397.655 667.8 li
396.299 666.449 mo
396.299 669.148 li
395.365 666.859 mo
397.24 668.734 li
397.24 666.859 mo
395.365 668.734 li
414.377 668.585 mo
417.076 668.585 li
415.725 667.234 mo
415.725 669.937 li
414.791 667.648 mo
416.666 669.523 li
416.666 667.648 mo
414.791 669.523 li
414.6 673.085 mo
417.303 673.085 li
415.951 671.734 mo
415.951 674.437 li
415.014 672.148 mo
416.889 674.023 li
416.889 672.148 mo
415.014 674.023 li
376.951 664.125 mo
379.655 664.125 li
378.299 662.773 mo
378.299 665.472 li
377.365 663.187 mo
379.24 665.062 li
379.24 663.187 mo
377.365 665.062 li
391.166 680.847 mo
393.865 680.847 li
392.514 679.496 mo
392.514 682.199 li
391.576 679.91 mo
393.451 681.785 li
393.451 679.91 mo
391.576 681.785 li
430.764 682.984 mo
433.463 682.984 li
432.115 681.636 mo
432.115 684.335 li
431.174 682.05 mo
433.053 683.925 li
433.053 682.05 mo
431.174 683.925 li
384.115 682.949 mo
386.815 682.949 li
385.463 681.597 mo
385.463 684.3 li
384.53 682.011 mo
386.405 683.886 li
386.405 682.011 mo
384.53 683.886 li
382.35 683.211 mo
385.049 683.211 li
383.701 681.859 mo
383.701 684.562 li
382.764 682.273 mo
384.639 684.148 li
384.639 682.273 mo
382.764 684.148 li
384.826 685.949 mo
387.53 685.949 li
386.174 684.597 mo
386.174 687.3 li
385.24 685.011 mo
387.115 686.886 li
387.115 685.011 mo
385.24 686.886 li
390.115 670.085 mo
392.815 670.085 li
391.463 668.734 mo
391.463 671.437 li
390.53 669.148 mo
392.405 671.023 li
392.405 669.148 mo
390.53 671.023 li
289.463 677.097 mo
292.166 677.097 li
290.815 675.75 mo
290.815 678.449 li
289.877 676.16 mo
291.752 678.035 li
291.752 676.16 mo
289.877 678.035 li
337.424 664.871 mo
340.127 664.871 li
338.78 663.523 mo
338.78 666.222 li
337.838 663.937 mo
339.713 665.812 li
339.713 663.937 mo
337.838 665.812 li
305.365 670.984 mo
308.065 670.984 li
306.713 669.636 mo
306.713 672.335 li
305.78 670.05 mo
307.655 671.925 li
307.655 670.05 mo
305.78 671.925 li
318.377 679.16 mo
321.076 679.16 li
319.725 677.812 mo
319.725 680.511 li
318.791 678.222 mo
320.666 680.097 li
320.666 678.222 mo
318.791 680.097 li
380.1 646.984 mo
382.799 646.984 li
381.451 645.636 mo
381.451 648.335 li
380.514 646.05 mo
382.389 647.925 li
382.389 646.05 mo
380.514 647.925 li
314.475 682.835 mo
317.178 682.835 li
315.826 681.484 mo
315.826 684.187 li
314.889 681.898 mo
316.764 683.773 li
316.764 681.898 mo
314.889 683.773 li
264.229 684.859 mo
266.928 684.859 li
265.576 683.511 mo
265.576 686.211 li
264.639 683.925 mo
266.514 685.8 li
266.514 683.925 mo
264.639 685.8 li
351.225 670.609 mo
353.924 670.609 li
352.576 669.261 mo
352.576 671.961 li
351.639 669.675 mo
353.514 671.55 li
353.514 669.675 mo
351.639 671.55 li
337.69 674.925 mo
340.389 674.925 li
339.041 673.574 mo
339.041 676.273 li
338.1 673.984 mo
339.975 675.859 li
339.975 673.984 mo
338.1 675.859 li
282.6 674.847 mo
285.303 674.847 li
283.951 673.5 mo
283.951 676.199 li
283.014 673.91 mo
284.889 675.785 li
284.889 673.91 mo
283.014 675.785 li
321.264 679.085 mo
323.963 679.085 li
322.615 677.734 mo
322.615 680.437 li
321.678 678.148 mo
323.549 680.023 li
323.549 678.148 mo
321.678 680.023 li
264.115 681.222 mo
266.815 681.222 li
265.463 679.875 mo
265.463 682.574 li
264.526 680.285 mo
266.401 682.16 li
266.401 680.285 mo
264.526 682.16 li
307.315 671.55 mo
310.014 671.55 li
308.666 670.199 mo
308.666 672.898 li
307.725 670.609 mo
309.6 672.484 li
309.6 670.609 mo
307.725 672.484 li
314.405 671.062 mo
317.1 671.062 li
315.752 669.711 mo
315.752 672.41 li
314.815 670.125 mo
316.69 672 li
316.69 670.125 mo
314.815 672 li
.180392 .321569 .494118 rgb
@
254.213 635.585 mo
256.916 635.585 li
255.565 634.238 mo
255.565 636.937 li
254.627 634.648 mo
256.502 636.523 li
256.502 634.648 mo
254.627 636.523 li
281.03 628.988 mo
283.725 628.988 li
282.377 627.636 mo
282.377 630.335 li
281.44 628.046 mo
283.315 629.921 li
283.315 628.046 mo
281.44 629.921 li
300.451 608.324 mo
303.155 608.324 li
301.803 606.972 mo
301.803 609.671 li
300.865 607.386 mo
302.74 609.261 li
302.74 607.386 mo
300.865 609.261 li
321.225 621.523 mo
323.924 621.523 li
322.576 620.171 mo
322.576 622.875 li
321.639 620.585 mo
323.514 622.461 li
323.514 620.585 mo
321.639 622.461 li
328.799 629.699 mo
331.502 629.699 li
330.155 628.347 mo
330.155 631.046 li
329.213 628.761 mo
331.088 630.636 li
331.088 628.761 mo
329.213 630.636 li
338.514 637.238 mo
341.213 637.238 li
339.865 635.886 mo
339.865 638.585 li
338.924 636.296 mo
340.799 638.171 li
340.799 636.296 mo
338.924 638.171 li
338.701 650.324 mo
341.405 650.324 li
340.049 648.972 mo
340.049 651.672 li
339.115 649.386 mo
340.99 651.261 li
340.99 649.386 mo
339.115 651.261 li
311.78 652.125 mo
314.475 652.125 li
313.127 650.773 mo
313.127 653.472 li
312.19 651.187 mo
314.065 653.062 li
314.065 651.187 mo
312.19 653.062 li
323.291 654.785 mo
325.99 654.785 li
324.639 653.437 mo
324.639 656.136 li
323.701 653.847 mo
325.576 655.722 li
325.576 653.847 mo
323.701 655.722 li
288.979 655.011 mo
291.678 655.011 li
290.326 653.66 mo
290.326 656.363 li
289.389 654.074 mo
291.264 655.949 li
291.264 654.074 mo
289.389 655.949 li
327.225 658.797 mo
329.924 658.797 li
328.576 657.449 mo
328.576 660.148 li
327.639 657.863 mo
329.514 659.738 li
329.514 657.863 mo
327.639 659.738 li
347.74 659.097 mo
350.44 659.097 li
349.088 657.75 mo
349.088 660.449 li
348.151 658.16 mo
350.03 660.035 li
350.03 658.16 mo
348.151 660.035 li
297.002 663.636 mo
299.701 663.636 li
298.35 662.285 mo
298.35 664.988 li
297.416 662.699 mo
299.291 664.574 li
299.291 662.699 mo
297.416 664.574 li
335.701 665.625 mo
338.405 665.625 li
337.049 664.273 mo
337.049 666.972 li
336.115 664.687 mo
337.99 666.562 li
337.99 664.687 mo
336.115 666.562 li
327.115 661.835 mo
329.815 661.835 li
328.463 660.488 mo
328.463 663.187 li
327.53 660.898 mo
329.405 662.773 li
329.405 660.898 mo
327.53 662.773 li
305.514 666.261 mo
308.213 666.261 li
306.865 664.91 mo
306.865 667.613 li
305.928 665.324 mo
307.803 667.199 li
307.803 665.324 mo
305.928 667.199 li
324.225 669.296 mo
326.924 669.296 li
325.576 667.949 mo
325.576 670.648 li
324.639 668.363 mo
326.514 670.238 li
326.514 668.363 mo
324.639 670.238 li
287.78 670.421 mo
290.475 670.421 li
289.127 669.074 mo
289.127 671.773 li
288.19 669.488 mo
290.065 671.363 li
290.065 669.488 mo
288.19 671.363 li
359.549 669.41 mo
362.252 669.41 li
360.905 668.062 mo
360.905 670.761 li
359.963 668.472 mo
361.838 670.347 li
361.838 668.472 mo
359.963 670.347 li
326.44 669.523 mo
329.139 669.523 li
327.791 668.172 mo
327.791 670.875 li
326.85 668.585 mo
328.725 670.461 li
328.725 668.585 mo
326.85 670.461 li
332.963 670.238 mo
335.666 670.238 li
334.315 668.886 mo
334.315 671.585 li
333.377 669.296 mo
335.252 671.171 li
335.252 669.296 mo
333.377 671.171 li
337.799 679.011 mo
340.502 679.011 li
339.155 677.66 mo
339.155 680.363 li
338.213 678.074 mo
340.088 679.949 li
340.088 678.074 mo
338.213 679.949 li
312.94 677.211 mo
315.639 677.211 li
314.291 675.863 mo
314.291 678.562 li
313.35 676.273 mo
315.225 678.148 li
315.225 676.273 mo
313.35 678.148 li
361.389 678.222 mo
364.088 678.222 li
362.74 676.875 mo
362.74 679.574 li
361.799 677.285 mo
363.674 679.16 li
363.674 677.285 mo
361.799 679.16 li
317.74 678.711 mo
320.44 678.711 li
319.088 677.363 mo
319.088 680.062 li
318.155 677.773 mo
320.03 679.648 li
320.03 677.773 mo
318.155 679.648 li
337.166 678.711 mo
339.865 678.711 li
338.514 677.363 mo
338.514 680.062 li
337.576 677.773 mo
339.451 679.648 li
339.451 677.773 mo
337.576 679.648 li
296.03 683.211 mo
298.729 683.211 li
297.377 681.863 mo
297.377 684.562 li
296.44 682.273 mo
298.315 684.148 li
298.315 682.273 mo
296.44 684.148 li
357.565 684.296 mo
360.264 684.296 li
358.916 682.949 mo
358.916 685.648 li
357.975 683.363 mo
359.85 685.238 li
359.85 683.363 mo
357.975 685.238 li
371.252 686.699 mo
373.951 686.699 li
372.6 685.347 mo
372.6 688.046 li
371.666 685.761 mo
373.541 687.636 li
373.541 685.761 mo
371.666 687.636 li
320.326 687.562 mo
323.03 687.562 li
321.678 686.211 mo
321.678 688.91 li
320.74 686.625 mo
322.615 688.496 li
322.615 686.625 mo
320.74 688.496 li
261.041 691.461 mo
263.74 691.461 li
262.389 690.113 mo
262.389 692.812 li
261.451 690.523 mo
263.326 692.398 li
263.326 690.523 mo
261.451 692.398 li
280.315 691.347 mo
283.014 691.347 li
281.666 690 mo
281.666 692.699 li
280.729 690.41 mo
282.6 692.285 li
282.6 690.41 mo
280.729 692.285 li
325.014 697.648 mo
327.713 697.648 li
326.365 696.296 mo
326.365 699 li
325.424 696.711 mo
327.299 698.585 li
327.299 696.711 mo
325.424 698.585 li
391.99 561.449 mo
394.69 561.449 li
393.338 560.097 mo
393.338 562.796 li
392.405 560.511 mo
394.28 562.386 li
394.28 560.511 mo
392.405 562.386 li
.584314 .231373 .568627 rgb
@
358.225 630.789 mo
358.225 631.824 357.385 632.664 356.35 632.664 cv
355.315 632.664 354.475 631.824 354.475 630.789 cv
354.475 629.753 355.315 628.914 356.35 628.914 cv
357.385 628.914 358.225 629.753 358.225 630.789 cv
370.537 660.813 mo
370.537 661.847 369.694 662.688 368.662 662.688 cv
367.627 662.688 366.783 661.847 366.783 660.813 cv
366.783 659.777 367.627 658.938 368.662 658.938 cv
369.694 658.938 370.537 659.777 370.537 660.813 cv
292.67 677.121 mo
292.67 678.156 291.826 678.996 290.795 678.996 cv
289.76 678.996 288.92 678.156 288.92 677.121 cv
288.92 676.085 289.76 675.246 290.795 675.246 cv
291.826 675.246 292.67 676.085 292.67 677.121 cv
340.619 664.863 mo
340.619 665.898 339.78 666.738 338.744 666.738 cv
337.709 666.738 336.869 665.898 336.869 664.863 cv
336.869 663.828 337.709 662.988 338.744 662.988 cv
339.78 662.988 340.619 663.828 340.619 664.863 cv
308.6 670.964 mo
308.6 672 307.76 672.839 306.725 672.839 cv
305.69 672.839 304.85 672 304.85 670.964 cv
304.85 669.929 305.69 669.089 306.725 669.089 cv
307.76 669.089 308.6 669.929 308.6 670.964 cv
321.612 679.171 mo
321.612 680.207 320.772 681.046 319.737 681.046 cv
318.701 681.046 317.862 680.207 317.862 679.171 cv
317.862 678.136 318.701 677.296 319.737 677.296 cv
320.772 677.296 321.612 678.136 321.612 679.171 cv
317.725 682.843 mo
317.725 683.878 316.885 684.718 315.85 684.718 cv
314.815 684.718 313.975 683.878 313.975 682.843 cv
313.975 681.808 314.815 680.968 315.85 680.968 cv
316.885 680.968 317.725 681.808 317.725 682.843 cv
267.451 684.898 mo
267.451 685.933 266.612 686.773 265.576 686.773 cv
264.541 686.773 263.701 685.933 263.701 684.898 cv
263.701 683.863 264.541 683.023 265.576 683.023 cv
266.612 683.023 267.451 683.863 267.451 684.898 cv
354.444 670.641 mo
354.444 671.675 353.604 672.516 352.569 672.516 cv
351.533 672.516 350.694 671.675 350.694 670.641 cv
350.694 669.606 351.533 668.766 352.569 668.766 cv
353.604 668.766 354.444 669.606 354.444 670.641 cv
340.944 674.961 mo
340.944 675.996 340.104 676.835 339.069 676.835 cv
338.033 676.835 337.194 675.996 337.194 674.961 cv
337.194 673.925 338.033 673.085 339.069 673.085 cv
340.104 673.085 340.944 673.925 340.944 674.961 cv
285.865 674.851 mo
285.865 675.886 285.026 676.726 283.99 676.726 cv
282.955 676.726 282.115 675.886 282.115 674.851 cv
282.115 673.816 282.955 672.976 283.99 672.976 cv
285.026 672.976 285.865 673.816 285.865 674.851 cv
324.475 679.066 mo
324.475 680.097 323.635 680.941 322.6 680.941 cv
321.565 680.941 320.725 680.097 320.725 679.066 cv
320.725 678.031 321.565 677.191 322.6 677.191 cv
323.635 677.191 324.475 678.031 324.475 679.066 cv
267.342 681.222 mo
267.342 682.261 266.502 683.101 265.467 683.101 cv
264.432 683.101 263.592 682.261 263.592 681.222 cv
263.592 680.191 264.432 679.347 265.467 679.347 cv
266.502 679.347 267.342 680.191 267.342 681.222 cv
310.541 671.558 mo
310.541 672.593 309.701 673.433 308.666 673.433 cv
307.635 673.433 306.791 672.593 306.791 671.558 cv
306.791 670.523 307.635 669.683 308.666 669.683 cv
309.701 669.683 310.541 670.523 310.541 671.558 cv
317.615 671.074 mo
317.615 672.109 316.776 672.949 315.74 672.949 cv
314.705 672.949 313.865 672.109 313.865 671.074 cv
313.865 670.039 314.705 669.199 315.74 669.199 cv
316.776 669.199 317.615 670.039 317.615 671.074 cv
374.479 686.734 mo
374.479 687.769 373.639 688.605 372.604 688.605 cv
371.569 688.605 370.729 687.769 370.729 686.734 cv
370.729 685.699 371.569 684.859 372.604 684.859 cv
373.639 684.859 374.479 685.699 374.479 686.734 cv
395.217 561.453 mo
395.217 562.488 394.373 563.328 393.342 563.328 cv
392.307 563.328 391.467 562.488 391.467 561.453 cv
391.467 560.418 392.307 559.578 393.342 559.578 cv
394.373 559.578 395.217 560.418 395.217 561.453 cv
.215686 .207843 .207843 rgb
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf268.898 745.787 mo(10th)sh295.588 745.787 mo(percentile)sh350.961 745.787 mo(\(%)[3.99609 0 ]xsh368.953 745.787 mo(IPL)sh390.305 745.787 mo(depth\))sh366.787 539.171 mo
435.603 539.171 li
435.603 597.148 li
366.787 597.148 li
366.787 539.171 li
cp
1 1 1 rgb
@
270.725 592.148 mo
348.979 592.148 li
270.725 534.171 mo
348.979 534.171 li
270.725 592.148 mo
270.725 534.171 li
348.979 592.148 mo
348.979 534.171 li
270.725 592.148 mo
348.979 592.148 li
270.725 592.148 mo
270.725 534.171 li
270.725 592.148 mo
348.979 592.148 li
270.725 534.171 mo
348.979 534.171 li
270.725 592.148 mo
270.725 534.171 li
348.979 592.148 mo
348.979 534.171 li
.215686 .207843 .207843 rgb
@
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf294.188 547.063 mo(BC3a)sh0 lj
279.752 542.835 mo
282.451 542.835 li
281.1 541.488 mo
281.1 544.183 li
280.166 541.898 mo
282.041 543.773 li
282.041 541.898 mo
280.166 543.773 li
.227451 .670588 .882353 rgb
@
.215686 .207843 .207843 rgb
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf294.188 560.646 mo(BC3b)sh279.752 556.375 mo
282.451 556.375 li
281.1 555.023 mo
281.1 557.722 li
280.166 555.433 mo
282.041 557.308 li
282.041 555.433 mo
280.166 557.308 li
.180392 .321569 .494118 rgb
@
.215686 .207843 .207843 rgb
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf294.188 574.178 mo(BC4)sh279.752 569.91 mo
282.451 569.91 li
281.1 568.562 mo
281.1 571.261 li
280.166 568.972 mo
282.041 570.847 li
282.041 568.972 mo
280.166 570.847 li
.584314 .231373 .568627 rgb
@
.215686 .207843 .207843 rgb
UMJBEY+Helvetica*1 [12 0 0 -12 0 0 ]msf294.188 587.756 mo(Swapped)sh282.967 583.453 mo
282.967 584.476 282.135 585.308 281.112 585.308 cv
280.084 585.308 279.252 584.476 279.252 583.453 cv
279.252 582.429 280.084 581.597 281.112 581.597 cv
282.135 581.597 282.967 582.429 282.967 583.453 cv
@
UMJBEY+Helvetica*1 [0 -12 -12 0 0 0 ]msf236.078 689.475 mo(Axonal)[-8.00391 -6 -6.67383 -6.67383 -6.67383 0 ]ysh236.078 649.459 mo(volume)[-6 -6.67383 -2.66602 -6.67383 -9.99609 0 ]ysh236.078 607.443 mo(\(\265)[-3.99609 0 ]ysh236.078 596.115 mo(m)sh233.383 586.115 mo(3)sh236.078 579.436 mo(\))sh1 lw
4 ml
93.3028 99.6054 mo
100.635 80.6054 134.061 49.7074 164.635 45.6054 cv
190.709 42.1094 206.166 43.4644 229.237 50.5435 cv
@
228.842 50.4644 mo
228.143 49.1605 228.26 47.0394 228.635 45.6564 cv
229.451 47.9104 230.748 50.0545 232.635 51.6054 cv
230.217 51.8205 228.002 53.0114 226.014 54.3595 cv
226.573 52.9254 227.471 51.2465 228.842 50.4644 cv
f
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginUMJBEZ+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7D8BE16D22FCDD8FCF7194897CFC30BADA8F67F8875F9903B2ED36E82921D56167F38453B5A93340C5020D0611F38DBB18C6CAE74187506B2AF43DE20531EE5B49E1D8D8134DC87926A1D91F0E7502F24D2D9AC69DFFC6772A16DFD269EEF9B0FFC983C0D5F96843F43A9E372C7BC2A591AC769DFAD44A51C3D5BF85580D46E4063D60C7F3300CA1AC9E39BEF> |-/c <1C60D8A8C9B7EF3224D14587A8B37D54D8F0D79949CF14C9CC9890F2A6EDAA42FBA7117A612E13E7903C5A9C5F0200507E43E4C5E8B577504A53EA8A3E180CB569C8E885144F7728A2CCF0AEA32AD779FCECF91E377BD59B10FB864AC6580EFC92CA06227EB092EEEA6F0A41DE0D0DA52550ED7973070D2B3954AFC87D3BB2A46D25> |-/d <1C60D8A8C9B7D8BE16BD107A274D943DAED37669E432F654CC360B3D8C905F9C219D83A31E595AC2019C89CC2CBB5EAFD78F3600B78D8B0BC94CCD70626D21E2CEC442A1AC2C4AB73D2704C9DEE15048FA5F71A9B5F8247015652D2CCF08BFD7F54F0626B6D36F389C846697AF01C07180DEEC520CE1BD6F4E51EE34E217BE5985B2F0B40273DDBA26105539CBF1FCA7E418> |-/f <1C60D8A8C9B81F2C3A233ED2584A5D503772ABBF6B2808B3D90393B4492FAD585A6BBF0DD8708D41EF54D499B58E7A4707819D1962C784050E571012168CB14C65EDB734DC21589D28A0280112A3100C30A89B7F4072B8FB10EB042628FCB195E8> |-systemdict /gcheck known {setglobal} if end {end} ifendUMJBEZ+Helvetica-Bold /Encoding getdup 98 /b putdup 99 /c putdup 100 /d putdup 102 /f putpop%ADOEndSubsetFont
/UMJBEZ+Helvetica-Bold*1 [97{/.notdef}rp /a /b /c /d /e /f 153{/.notdef}rp]UMJBEZ+Helvetica-Bold nfUMJBEZ+Helvetica-Bold*1 [24 0 0 -24 0 0 ]msf219.467 20.6367 mo(b)sh.870605 279.629 mo(c)sh223.186 278.293 mo(d)sh223.917 538.733 mo(f)sh173.303 140.941 mo
187.303 159.941 191.303 174.273 189.303 196.273 cv
187.014 221.414 160.041 242.523 143.963 256.582 cv
@
144.291 256.336 mo
145.764 256.438 147.494 257.668 148.471 258.722 cv
146.123 258.211 143.619 258.168 141.303 258.941 cv
142.408 256.781 142.58 254.269 142.498 251.872 cv
143.412 253.109 144.354 254.758 144.291 256.336 cv
f
199.303 364.941 mo
229.74 364.941 li
@
229.338 364.941 mo
228.295 363.895 227.795 361.828 227.756 360.394 cv
229.186 362.32 231.049 364 233.303 364.941 cv
231.049 365.839 229.268 367.621 227.756 369.484 cv
227.877 367.949 228.252 366.085 229.338 364.941 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/UMJBEY+Helvetica*1 uf/UMJBEY+Helvetica uf/Helvetica uf/UMJBEZ+Helvetica-Bold*1 uf/UMJBEZ+Helvetica-Bold uf/Helvetica-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 17.1.0%%For: (Jinseop Kim) ()%%Title: (Seung_EDfig5.eps)%%CreationDate: 2/10/14 9:35 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&LK5q9dP,uS_!cdS'-0+nA)j)`aVjdVS,e0T%Wc6rVuKc^.!8GBhJ:,TSTXW+X\q_:WN&pti:H&#o3nOUr5aru:2U?Bn4"\G%Do@=M"u#OUO3^np?$3&eUL58XLPEWi7#[eiiF"L.L]N;KN!Oe6_%fK-q4Kg>>td`TmW;VLogb3[Ehi,"F1?5Dr'4VX)irg(J+UL8%I)"A6eq'&U_\m2mmIpSFc?ek)qK/\7(<DR5*F8!sq0:]`FZW8n\Q\(%h!91-UWK/hgYhlM#CkfgfDN;5n!qW-XmQ=h.)MUq=$5j(%.2jiX3rBD9NkO!JkV(QDfaQ72iC&+hXt"_q<7)fXs7W%f\f\WMCsnjH7`4-\Ejq7[GgMt.,?Q+X5a:=f@Nl'LMb=Ls\q>";3U:.+%LD,MPA0V]Kd(d/ajd'R<\.tW$[,6[m`Jlhn$,ZOqEYE:=\psCarrX/s45G`]NSJ&fh>9Dn4['kJ39af7bLO8_S_O^%5h.:\.3Xi6%FO]RK;0s%lgi$XOi;`?$^J]]Rk2`:!6^qc=T*#OcBRK@u7.*P9T.]I<?:&TpmLF/)GBf@'6imfFMIlpCM/>Z>pGhS)(.Wie</eK\%YLG.G!aR4&a3aB^TERELoKIT=Ucbs8CLtr[BT!]@2WE.LGjrPZmf*UTs3`=CKP.XZ:`_LJ4G?_iB&J9=f*Gl#fI;a`5kc`(/WY(k%&8dO.kX53Drf"T7nG1`.lk'o)TD<0OSYEjph2OfZoJ((Ze_T/;GUV2.FXQCr1mFK&c_3\;gZeD.bttCmT$P!AZPhK5h9`^\bS.Qf%+du;m-LNJ8D"f8i9>(#2ItsIr)[X684)ZX?G;5m@e<N;23mb#:g69,:8Srdb2EeIm&9mRLNMO!-WU37.G,2Pe8OJn=:$5F'\^o7D%R]C9ec&[qR,h,*^luka57.8KEet)GA(=R.?[Toagn+XH#d'u(:$B.2:#\).#G$9;^V$T>YW4,O#4W=?Q2Tb,5KFVgr$V*$!NBouL%*0+X%mX$?`$Csuic0;,rrR88@T+61b\^j=Imm#W:BJ?@alnPkGr]?QjhRf_ehQRAP&":u@]FVb*%@ZML1A7>cG7'Q#N;baEFoQ@R%RfiR5g0KO'oau]]oo;dcDeL-1#NC11mU.m;GMd&eD\=?-O7&!9k0n=Vh$rJA`Q6/j:&[p;1kIkGm%>MU\c_jP]TEe_EMpr4;P3_C%mI/IF42&CTYX)6_WAK*(IsR_DV%kT,-R1`OHrAI6j54g"T$Vfp9j$6n#]j[<n;KE461A&nkH*4(G1?WQ?Vo5)k@d%J>Jq2tl*b7s%pN'*`)'sEE-&FH9l0gM.G-.a'C/UgJWR88Z5@r^7;N"bY`N?kD>No&k<ba\_Klk\i64B=M$1)lSl#F%A)]o@M84t>a'De405FRf3%T\l9ccoE'T]AK<*'>\s38sk6#:0qk987Wu)cHo'QLgW,@)R`//#:)67<QV8)\Bc>ccQTEA`27IEUlH#T;nCYlREW9%s,=SXZ!quR%Mg%=5r0IuFSm`njI$BtcaT`h#6YK?.5P&J/r=TS4L@=>&cMl33F]\q)!-.:A'=J\Sio/o[S9VtlB"_fkdsHQTTt(W:((_B[7\+fD%nY7/jE<_pJFWXD4c3N0dk(\Xe6pc_._!+9c4Vhdm&]!;p-kc&HZ.hdkPJDt8,D2$Qs)j)=h$kOO6/t-i7'G5B$sKG*CIn:T1%U2h%elP9%$a_]TDL'OIn0S'[d@[10Q-!]'Xps8YT"SBAeEUr,+\%?6a8^9D)s==VoZR6R*`dk(iK,l6I\>TK2Sj!D]PlOF&tkHVL@c'D%ia7uN3^X^qmmqlU^nnf3L4=@CUTpt+oe5MGDqm9!A*:!JqTWGiZ@W%Yp>"jT$%1,gPg]EZrl3;6dR(qrM>gBW7j5*NT_lZXW&a`C%g,*9V;mgQ.=*!6IhjjSUDM+N:fuQtOe'F#CdAX6l97BccQiE$E$LRj43%co#n9cVraG<E*5\!-lm=,TRC2Jq2IJbbm?>(Ng!\7Zl%[M].1mj][KS"#Ck)..;Cd.W[k0,MEkg\pR55=kGd0JDhuP4j^R=WCr+2V7tEcJ"nM?>G-Lm&oa?K*=Ml#2RZbY33K$=!Q(*0SZY'%`q<tcgr7a0I?nlrCUM%c#W=he%g;70^2&7PoEDCXZ[\&:oRuKsUiPI%2Nil,_\$(XcrkG:h=,bXf0+5Dm4)JRNH5UHN5dk$+egJe%'O=XIn6\B)M,En4,Uu4"n:SMHU2g)5(Q4&;m>$Io8%E8Q)\;tA?V\rY?g(;cgYfW%duEPJgdVPIq;DZ>HpC;o`4h9p)b>:hU]6dA%(eJs\/OqCqjf$(43U4[hN]Ob;UQ2J<W8hYRlGP`D3mOkhW;3h@oifMXpfbh[pfbh[pfbh[pfbh[pfbh[pfbh[pfbh[`*1='`*1='%`*1='`*1='`*1='`*1='`*1='`*1='`*1='`&c%1JQkXt-ueK#)[1+"AY[&CUMLXSFd.je[uRaki7:a`U@-WReE\M%"`>o',JTPM%O^Cc7aKMFVjO[9fnnTZnq6cHHr*%64IP#+U^Qu0f?VB'#XJK_Iel"C5CFL3V[?QZf>09<C/S1]]QEj@i9A(_pV/-js;DsDJ.3$76%P`=[+b!pA&AYZc$Z;Fk"fdO#"C_YK!2Mu9!)o]4LNT%:0NT%:0NT%:0NT%:0NT%:0NT%:0NT%:0NT%:0NT%:0NT%:0NKLW5NKLW5%NKLW5NKLW5NKLW5NKLW5NKLW5NKLW5NKLW5NKLW5NR>.uNR>.uNR>.uNR>.uNR>.uNR>.uNR>.uNR>.uNR>.uNR>.uNNomUNNomU%NGFpu7p*sI35Sk]`=^ZV0939&H#\MFb_m^IAR6?b/b@s-CRGu/=Ne?:_HQ*@&_8]jNj+gpEJ1aDM^,<7?6!B*oAU$kR28@qbIfgO%>3<d9ehSn=Ya0QSKXK$^,HPH_*+:GjiWs=f(IqTN]K!c3k/@q`1,"ZtQ?dJg[EOORY%:oZE@peALhiCp7pO6M39"-(`=^]W093Q.%H#^d1b_m^KAR6?rh=BPfUVA_MrRl,d@EUWUr'*:PKHV1jDupPKLaAd84Js#D#QjiG_=>pW1=.$<W-O:uiu0>B@7RAKi`J\3U=o"\%AmIOmM\bntl2%)uedqfD1"6rOBR;B&l7`ogDT]IG:j;aN0[(.g=JT73cUjb)!^+iSs!RgaF[Z2UU2tU]8h&4uF4U!Y?:2m(BOehr%4^8u23V`p[c>A6;]$:5o?G>=aFrK32fj1pKn*ZrFKg4-"g`D\hbtYdo*3QOmI1,-`PNG*,IA4^?2e$bj/G4EG6A%[UhUo`r;Pa_q%,_BKD3pns,3GhO*V%6BZWASEc3ZE#tDhl%"W.VN;eEGZ>K2"!Vj-A#!jK>;n5`&Sk'rtcWlLo-c<t\OrMMolh#K+Mf"UPSebX,lD%AiO*;5^kOV"/nqZ&^,Mg)s!.ZY<"%)3LPa8Vi<Jh2,cO[OM;&!+o30lcHt?No3$9PV#DJ(@Kl_r>.$SArQ_2hYJ23`^[`-=RJeq-%$+IB"SA,!QS4o!j*`*VZht/R=X5^li/_UYVCS<TWY<@#inEMb?VE\gFG<7@?;-L,9@kKgG<Y*g0jr*<92TKrA5&/C7e$iZ2nh3Q@%hNedJoC"P@r@Z:5G?i[@3p=]#R#a9brKh^b9WpUOc:3G9Q]qBYI@-N_5lh.S"!',ImJ+`J"WGR6BINn132P*us8@_Ln\9G[VYshJ%h0Euk_?Zj`\>!)0:%bh#"iOPE=D@U"o&+IHJaW&Ub\:D`lZHg3/CTb$rk#L7Y9-foBoQ^qlG0f&\TU!ZbR!h/:/Zn%K8G9ANr5B'%h>H#kM+%/I4<d7bB(HPVD#X6+#_1(kY"/(T]:4Sm]DoJ77l'Ae*l=R3CNbdp[-Tab99*M_,9),7[ZdjK_-D"<`&Fm_j7/p,SSm54%p1E-?o=ql#0j((/D&lEj'q4C0Yu`9cc7<js]K.<8Ldbeh/^++?BQBqS6%t,0S>$s'8!Dg0NJ:H(B]11:N=4Qk^OS5>1/uG'1&CK]%Ze_,L@jD)an_T&\e\gfc@l0hNHc,9kF>b"b.q`^[Ns5>%Vk`m.Y#_.gqhbFB%cKd&#(9LR?Y]%,?16%sXLHUDpR6-CU?.2>C=g0!%lPfXV)ssa([j)>9gXhW3Ce<5/+F^lSmcK6GI>6:km44C'ZF?q@JQib^E83>)#)gE:-Wg.kVXAEKDPUHsd0O@:ekNP(CXME:-a@sN%.S;Y6DE%IHMX%:LGq>>*p0!laic45G)RaO1fB`DHmFPfc3bo5[Eo1k#+`,*7@DQrnZ_hIP[3t;-YW(#ZC;VV[H:A(B,$QtTm3_.I%$4WtO)NMaG<rM%FV!HZa?+dpJ]+4Fe!F58d_sUfKg2$BXBNG;`](St1HY]j11ksQd(<L!5n4pK/%XZZ#[)`[!UpJM$L7RbijkaN/%F1E_R;ET2<e*><"&eWWKW2S_,IAgZY/uRULbbJ!]0FWPUmap:gB\:_+N@!@Rran"<cTK4R/Xc5>@pCbN&Z??j#@Jk'5d5G[Is!\>%MH#og:HU26Xd(eUHEgodkG3&lRaYD`')2iW17E$dRXL1g=:MUmmu99[,;:tQ]eSc#+KdM#Q89*236+=.;-2rtI'R"J#^(;k-WnEc%&]r-B1u1+d/?3(AX+qNlRZEpYH.scqW]fXrHGcC9Q/BboMWF#\HU3OHe+%*@!@$Vl1V2X^)nGc\ZuLe$`)N5a2\ae]j*Nb#Ij9q^%j'sj5O):B[VB\LumRF87`>3khj2AsI3CXB<m1&3+/4E+s)d5(`LHm]rd=`4?n9m3/%]A>6d[8ehTJ?+#W&J8p&Kr^D/c465d)b@N%9g<`WMc8Ae,/<c=K1S^B2ZUmq\cFe!<<p<0`OMkT<#!_HF8/gXW[WrjZ$mJr2n20Mi^TorRl.#o0<;Y0Vqk*d51mC1U@k)#:[[io%/ac2YH+r^lk2VH,HBL"?fnSo<=&T<36DrZ(Vn*u?`mA-mP[X^RHp/LE9kb-UBroB0\41Q70lMM_2_IR0AR?M[LA#</l#r$+FX(ud%RLu0WD;.=.:u6M67>f"fokE'S:Q_?mkNIEG?H7:CYFC#a:Zq[Z%rju@iRG*-M2gIbj6R_u+m,KfR,,/U;;G+W)i.)</0B/$!JUYW%QlK@>e8qhNA@TAUYk*IjcEHm,gsG[u^;4(?mou;^WuL`'UDH,(M6oK6GEUIt;c8BaH;;RKB.EEjV2K,41-oCT3_;K?&P?g(81Cj4%3N8f4Cp]B&UPS#N;Db\51lGAtCX`]Od1JbdrI[FIBEku8rP!]\l$%($6GrdLO$DH:dRBq'G%#V/qj*&Qp/SB4BB4A\H\F2dQr0&0%a%%UXL9l4^C=S(-UCEkK';5_F0q6"r`4EH'_R[Z?dcmhTlps;!!@n:oTETkfm59e8$d?+:5bIp@k!=tgbahB[Z7:O\RZGK&\X><u%BHq#RV)'bQP)4(SHSgO)/6h@G9K9(B]`C/C_*1chR2X@?A&ltg/LMHWRk[NPV5FB_ib555QI=H"rNf@k+PAWW?NTG&W+V)Z6u@fn%er:Y@-?V0iDsLGpND(ttL/qFHZtC2Gm^2^Ce1%hXh;N:o`cFX&0m`<]]CqU<DDH)%AckK8?sm'SEYrHFT*4+0g:'?AA[M(c\9-A"%#?n,W$"D;!oc@VsHI<+[-9\0+23#`uh=)FVbKnSss(#EkU=E@hk-NeM)!a]=G4WgmA02JVZYVK&X.Ib+A%TMBk;[=>qsAm7[u/\4%4e15C@ao"EoQo?,b[Q$7SbgU91EGP"2IdhY%).AM+o"FWEF!68"`ISASVrt1>Zs3+/21b\c[%D?-j><\.CXr,Lr"_X7.MPnJ[aR3%n'Ipp)3#Z*J0NK1ZJM;.7-EOqKG6%oXla//Z]<`J&.`lI/k"`fDG!Z@FYY:Yfm;#8Hr%jm0Jq>`STA#k0[*;>qf!>;o^,eQe7Lgg%*t@W4*Aj82>KV4*c.6Qc-MgfQDmP>M@&jO$So'["pS4^uBj3EG)^)fUg$]hmLW%Ha^99^2]eu(SRBng$DYi$S$?k$U9$jLu",#JB%ND3[qe)&/H0f)#npGb^r(%KYp>"p?.T`CQ,bZ]JB/M5\u;G_^[1YZ8?46[d5^*OD-[OC+bYY!Uq/K0YhD&]X0)bb*L*&m**XVDc(%?n+AVrt!tDPlo-?321`)=%Uc`C?d?GE3&a/Y\g_AUc.eo?.i3f63P1_LI9%nC4<5&Xdh!Um=A$?g:If##<2(_/Tg5I\'<4<YJ'9!%o8?uQ)h//(f=1k0r,h4tg%(doE"UP`$CJ4uh?;PbIr):6\q[!5Vpk<A;F_1ObuTu/T:Sij`DIRYd+O,>rbfRq$hV]c96X,3d9XBW%(6s\f9"aBdh<eQk-gt?;+^s#f$qljWZNIf*7W[4E/Y.'n9aRa!esbA^!lB[p)Ml<WR:Y0JP+\=b/RV,G/JD<<(`BL[>tT*1J6D^1%$,PNlIfX=Tm^c5q`?W>SS-S9Nn2TtS43ZKf6<raDe:3k]S;Ha!&5HLX7J4Qpq@ijI,\Cq+q;Qaqnm1(_8iM[sguG[9<B*ZZ76eJ4%cNi32s67Fra6,U%#;<`=Tj7(.*e-=upU6^gi):pM2A54L(%4nB.W/U&o\n$igG)cX43>:riePS%K<8U,P+S'N:E0&IHHgf=HnBdP%6dnR`*q5'A*adn#ak^I0)L]BA^Ra3tZJedJJj7=&7hKZJs&)>EH5cZi2=1j+G-B7P^Jeeuqe&\2YQ(qa5/"W7]nc4?29_o\%</3H%(J6p[iG$A(L$:$-.%Z]kO,NPl;fqMn$G;WoZ$VW!BOA=8CUZ!c*2d"S;>oO]PAEB:4cWTBpVHFa.=>3cr-I@[:Z]WdE]TP)UT)4e%b=iB-17<g/rk"Mc2\6M<@@=9,<cRn=am4HD7(iE1n%O!qQLDZ>p@V>lqleqU4;u;E*1k/iU:U:l9uu@aH@PB!L#(e6,1QrN?G%Im%[]2"Ef1M\$loZ&KBf)]NajK`unuEk9F.r*rSpkUND@r]56-N['m3+04kjcJccF(bgIMWL"BR@_]o(Grs![A/8Y-*O\87*^Y?U(a=%OJ9;(/*XOacbZ!dBPF7qdAI@&Ut)Sr/+dA42!'.WDV[H^@&3!cdW<)qmiEhacR3<q&!,H'PQfM!f%/[+=i:`Ja+r7FnVJdZUZ\KW%hCO/q[titjKc*dkr8+S[,2EjJO!Tb7j"nn:r7KsXQ-#fsWg8-PKu-Ol^qq>6RdLZK1=D*:>n*dRLK@KGgk@pH>-oS[-$!"X-bkR`%R)&U=XVCaTScs$7k"*PC'9!X8-%QgVNLk,[>?4;LPF"9/@#jl\FKkEOSY&eN&JdVnh&>J"Aokpq.3f8s-Zc*BrPugNrp?+&d`leg%Jrt@Q$-\\#Q[&t7d4J]N*m%M,I=1/!URN20.Dd:&X_anZ)Vr_D;l#]%pmpM?G66Wo]V_N4hdtfoD!k)CZ[T9F!UYGHY1;-TE`-CW%)JPsip01#_(tbTq)N+`N:D?^B,0fd0cSYon0ls.uc$?tlfT)FF4n!TqQ:U>XT<TZ(:$*@C53/jc5BCnAFn);*/n_ho88i7V)MJl8%OjRL-7W7.bO;>AgmNl;%Zk:s%l+A&WR3K=k8Y^F5SEo!;pN:;+oTZruAF^L,98E8ppnXQ+p%WWBTDUW$Q:SbKD]3m/Uq`YZn)iAu%3RY7gT#^SroUYePkPFc?n7mf%eBR?.=<TihhF`d%L(qm$Io^L`c%jt`bm`iIEYd;jOg`2VlHgLt%SEIK[(/2tOHLrI3<*57E.HMX%R-T$Dn)pP>O@;^h'3`g07ur*:l$)-;6L&oIhL*@7L&<0&""C*[&6E-$m(!0g"%H=9(/Q8N@7HHi<;Hqo82GT=5CkYCFI:n0U!/e?%m:;ncZGQ$<3e$c284,kB;;Z!^Z!'Re:V7B>YE2!KP`[:GK4nQ3\UKOdV/HZSk-iY[$&f#QfB3Et2l*BY'_Gadft]*`LFoj9+H_BR%N`YQU`obY,I<9._,@.@R'=8WPHPTtNG#:l&QR$IZB,&NbBs*R5"oQoli1Dc0j!k_NqO6F_SU+949!/(kJNNP]a/u"-gj-MTAbG_]%].SKWbe@O,k1S'dhedWjTV$kl:%i\Tl>)'bp&5*=^S\[!AF>E\AVumpW[`4:lV1#Zl%9a@g=k@Q+Ck)P_;0#WEnXTP@aA]BIC)tX%K"g07[UR"R^4((:+.`td^1)uuMK-DGhYe5:^Co>Fm?))T29W[&?P=2^?RL6jTH6rYB)(6<itH@JWQ!K?(8'K0.9h56k3JA'-^GH^%O8-&"Tk=D^g#jHll9"-8,;6s(UX\YPMIOHp_RmF0Jp"(VFHbCY&ncNZo*28KA*GN554ZYd]rCMCQhf8&ria5(n8TmUbiJZi_pm)l%9)#_)34RCSbK&YVcHTdH1d.&4f5Z-'dp:3j^Ue^Xeg8LfrG=@.qm)pKDP;HAM*9kAAauaa$DP:Tj[)/`/emlMqB5pP*\/%J?QV`^%9)*Lq\&;S%mURGSj419dEW92%S"\=+E#7=R+6N@0K:(tO9"hQKKmN"75!"7a-$7g3?4b>,Z75.;0*9:-kPUR+q^Pc#%h<t9n&QJ_%q!l0=l"7I>1.*O,j';C,J#SVDHDF(d54>%#XcU9M+KYbZK\Z%_ltgBWSP56&;\c9&+H9I?&"eh+"_jf/OEYbAO#26tNKJO7)!tl5%`WpX--'@3CAq:ZP-ILZ.QT<L`UU6o`WDq4o"<Ii78FbNP&h2TU3YYIO0/D7afj*X@FE[IfN>2!s9CdZunuBf[HENTh<S^:DAb>aF%H(QH%g&Zt#H&n>=%0((H[G/HXg.C'dBLF^qWRu`C8%1VLF.M.MK"UuM=*^nI8^'VsXENU0]`4;lX8b:tp'',m!G!2af"AmDFE+.`%-lua^N*pn'b?noTN![k'7!q2r%kQnW?@g,Z7<]NpG`$H]/E93Qoaob^jn8cS]&T"SBg1bQD9>>')F#&6ddJVc;alDXk_=Iio#^q,%:Ic%?,b:P_?D8=1*EXEiW2Fu+o[thmi1DT^:Y<p22>]\=9gnRrq+H2$+.8]_D&C4#=,H-^#,:.-jS@ar\`s#E][ZinM@hY_s'/DO%8?X,`Z;7%Bmra)0LQ63fdZ'&<I7fu$?"==PZ)o,1Q:H]_M.O@<Nr3KpJVD$^],NYTj`/MKZa>.W4-fH`injLU7omdedp9GHQ_HSR%MmK4ka6-,IP4\rJ#1iD0*tnq0fdgjs@9nj*9V\?J66.htHM2RPY-^6TO8bRGGVF'Vs2_Q'HSPWUQ%%P7.CSVg.]&&aaj`(n]tl`e%M'j6$`a`E"IVR:qh2C4:nT[8U2Q(QV@Xr*fdk4%P=m\bd1>hFO-*B?.^1Wgpa(Mhag>:4f"T;#kgZOju%]-3>b>^m1^C%ij>"`S4%41dp`jLq>VAEePQg0&3+hjJ%Wdd!%ZNZT4c>tas$R'YnRe*Z3OR%S1PC\^$K7Cq?T?fakVcZ5t(ZRl$GkNgiBl80er6/`o2n6rX^%7;72r%j^k'5JJQV$2pXZQA:bNj5(0[B8]?Q?^b\;jQ_cI\"pM&O'tVoitHbWa2!"3.>I!X0XVNeeiKSJ?EDLY'uZ8_HZcs7SI490%hQ=(u:KY4_kYDPj&mcqpV-A9T6UIiGInH5u%n[k'X\,K$C!/tHC5^+T4:jZj[quk</I.hR^OcqFSW!1$]$8i2q.4(?SUGYL/A&bP%<c0rC"Ua;"<*;e9p:gFqYbF^@<jsiA]dNQG<^ng$UUd4gCtV_Q0XKd]lJa;S+'pLdOK!E)NE'o[8)sEDP(MOcTf!Y5<Ht(6g@?u3%Jo.M<TF$$bY38hci=2XOk+]M,Z'$2/EVl]kOR/8@;hsns-YZ1Re9MKYRh;aaJsh5XH!sjQ=6j(K2@tqu:`QtFdm+%.[p4_9[`9F"%`'`AjP<\1RC3D_IO`k=q6i<aZ9[2U]2inF]^k:(jLsUC\C5<6S9C)qC7L_eAq)obHAdqu<@<FiLC1_49HK/KSPVT&fQ7E04HJKEu%>]"$\i2c#1@2?'UdH12K%X0MfkOH),3n>$NfJ@&4*]QBpCGU=V)1RbJ.^*6/dn`9Y/_Os2(3ae@j/MtQZ/;/pG%*HREAM(_8J8KX%+I:1q:(W=Gi'Ha\CU.u"66:-)>IUAM8_d'YDR*A8Ci'K2':X??Kh9k46B^:R6\1FE^tBukVT/(NHra<nk,F3*]:2`G6@0[\*9)/$%LKi?BEItINNL$.I/Q55FJOe[D(03J-R82li7sAV?OlZr^-K<;T@UZH#0sfK!mc5s@9*;.cB9F&e8sL/J[m&N5W;%c%/(;ETN9fnK%Au+f\)@pc$]1k.k'ACto0rVe!Rb7`["Q?jcMS[9W9BJ.G^Z7R#f?kY7`1Iua[(O_KQX3SXd1c)T=?'aXKU6*IdN5G.jP<.UT`puZ%(;qfL7@f,b$e-='SYI/k\u_o;(e!14_S!:WH\t6V(!tk3#0q:e:S!nRiSf*NpBc+GQ&C2?m3E1Z,4DTp,OMU6kCpb/ME56,HqldA%%Lp1SY_#m0h_XT;nAaYHc[ku@cu7pRT>Qr<9)!?thN;+;'4@)PMANXRjMRMlQOoku`>#FuJ)>LII(3>($NoNFW&*_q[BR/lE>]jH%*8gNB8_Mc/6EKIMU0EfTF,H`dX%Quqib1:[Mj:(%rV91MJ%H&JG%Z'%?@ns.N@[)Y.P"Y/OAKTX3LW64!kYhLo\#"Tpk'<OIA?Oh%9eWNSa1NK0*o];Ni::fi\0(;&kV)V&cd?1TU[B=Ib8.WrLNZH[\u3FWV5#HmL$\(N*u2<W*7.Gdk\i![_;]N95bDeWDpOB2fu"iL%AG$]N[kAJp1I`_W@:6EcY.Pk#%Pu]3+3+f!BmWhuY8ZZTABA7"qls5i/UL?+V:s8$/eCo6jFu=Qjk[0`=,od90rnf?4'TR&XiWoO%d^tD?Drm(HL<[sI_k"gC<rIP+V<+Q400??@=W;">L8Zn@rSC3`)Ju_*feWE;]VbU=A//"D\Ttb!.>I\-;-oe`ZN:X]glI)]cGS?H%D_DReAKf0(ps$U+da257-MRF?(6Vd_HS04K(/BA`1m$mgG+sgp;;-:fF2P4m6HMCVl_m9Fj]":R^7i`e17Bi;PG,>%::Jod['OU\%<NtMk,fQJd/*UIrX28&s1#Gs4DgW)(VJ?E\3g1`74$p]G)3,MU8JCY*Nr_j()*B::mE(ZGl-W6W)*HN@me^[.T;I?V=,0GR_n6e;%%X0-uLFMGE2WbYm`m*fYFN1VCR4KUMrc*#"NJ_00K.--J8'V!uTehVEhO7V/hdS/54lPTAM2,VY(,e<\*hSi08<[[kW;LDAS`M_j%EjM9c<r.$bfA]hD?7I>2ZS1F0j,9'960Id?-AKf0Jkh1?>!@\dLf>H^-bm>I*CFH]6&23=<tI`sCb##^3^pb6)ae6[5po/1/fd;l%L/a)(1QN;n+%'Z_5po/1/fd;l+$lgR/s_BgZ]CcCrEttPTeg]!cpc<4m:$ebF;0X2=G@e]8*XTE0m'3YZ;&sjl0?.D")f1doYW^8%HV6"1P`t/$l%gKh$MYHPa^<[<p:3_/^UbT![e*nm](./VIcGc-Os[%pl!tE<A+VT&Y$?-9Gg?;5*nL9HEq7,RS"EH.AVcjdSfb?t%:!O,&d9l:Y7!1k;ML9NO>hKO"9^9_-"jO=BR[4Yq*U<(6MZlqJcPTnQO;)bX"t;/&2Q(i"]p+hk=.uVlg+o-9m<.G+m'`!+#e?-B%fPN@$0eo@GD.g,`,rl.@\TA!0j-GKT<mDh*Y9D7m+o"`5']!n$75M<(&Z%g-VIJl47lHsh''9Uh?<L3I#Vp77^="Wu%aWIs4"D2h%k8;(WC,c;7UgR]s--RVML,77s#b%og1m:mh/1&`VA+A1i)p(Q;JSCEVb;ca$bXn@E&]aW$G9:g6Eb6h6RMR!bGG$lu=biks/V@G)%<G?4jpkkUQr:uTnU<++ikMu`k*lhn6ZCsa_1WT#_(/1UMT_D>/4*(\3EAK6Dc!mZt*4#dXl-0"s@KD>mX.,op*5tIdYQ)u-kk%`k%]"2`((R$IU2%/-7Nk/kSGWBh_@G(Zj3"D(3piQ+fVu*6(H.aG@?l:SDZ]*og._7FdJJp7"bNpe4KbfE^=f"SbkG#,d'i"&TBC/bk%dU9,1QP#]KO(F-:ol8ODmVj9RZ[K[42XVP27u9/4bloF.2OffbGEfaHft$\B'dn*&m-j2Zb`_%%`/m`T[+NJkFLj53kcRNWFKKh=%S2Jp'NejDmL_eR^^2!?hT!2K[dY[e0>5BE$4n_lsBATnM*$\g1PV&Q?=#+XokK#XCOA+\sCMk^ZG!gl;j?eaWd)jBR"2:OHK5tUe%+biDJmRYZ;M[Y7a/T$WdHYdZ,Zp0neS_Vu.]G/L.L@Nu:ZCjY+m(P\D=kY'PVAA$pp?l<!6ZZb"Z&BG\R4iE>JKQe3MF_"u5*+5<%j7,.Kk?2#"fRn8']HHLL&'qLYQ:",Q)95i>`1\q8bB80H4iWl-jJ@J6R/Pi+DhSi\\$=b#N&nPLOe/m+5.sWggNVc7Ah%0QN33O`%iFAnRJpk#!@pC$!PI8MV!HE65nY<Mt[uP#>9;JeEK8:LPB:Yhj\!*r>0BK3hGiULUNf*huYSfQ^Nt9FQ_l7i7+sP=G:EAC3@u,nE%,6+$gGW;0U[_d:!'mQZ4`5=<TW%K)$-gA`p7,/E]1A*E0b6Y\jGW9b_-q2Zk<BQd_hU.V._r3Q_lSjJ3`PWRg3-?j%.uT1h]SfoU%lW!:A.u:83!Tt!taQsRs]&MCb9*V"Ze=!OmZ]F<uc1#1RXTh=fOLM8e-ZCa$T#%R9G]>t/jdBsBPT9u&ZZM-hmR;U2-!@3oUiGMd%CnCfsnptHEGXdScnH"%H9>:i-"I'Cia3dH^/]?'rBLK-"?)ObQm&nIB5GfgKQB,1[-L^rD$R[g^`XA*8%5(!P=-3q/pVW5"`r>[h%qcVts;S?He[eqkmZ^6BCfsE<dXR?QHAt60#*KkR_b.du%ceqe+Ip;8+D2_#&DI-Hm0P2Whr@0$imoLBhHG>o)e6bEjLe-Vd""T4!%7K';5+r0rW4sC_f=[b_.7'EklJ_'Yi=iPBR"(IHNQ/0PQXdF_XK^fnn:0(iU.U_$+Z__TsMF-94.E:Ap6Vc([[G<_WoZBMZjSK>6%`I78Q\4,hNmR,r,EtGH9'[F^uYej3r#Q#@urN%la@8)Il88h(a_i\6_'BpXUQkA1[+#B].?9"VsFS2ub@SpYi+@Bctl`T%-0TU==%@E-=kZY4Fd@UjZ"Z-1E#X?<;84Hm9VkMTre85oa/P8tfl6/.;&mG=ARR6=75&_5^@[UWYDkLVSU7;kHen5k[sHVcrd^&I$A4VSIB%L'$?nhLh;&'RmWDQ3D3"rYj`^&)T*E(o9a[qB7@)-aI!I/f%*k<t`>e(ElOLAKpPY]":,R(Jc?0h=b%,=5R$jG2`C,G/8&L!DB5u%W3ulXk`uu"AK#"O@MeCnNE@EZU=q(pd9)IU3pnQ\rG>J$m4s$b6V<W%K2U/Zm6[VD$+'@2A#g0F8%W0<&'bT_>*&,reN1RmpDph\%=WqY9+K]TS6FWbc#sV1n/<P7.D+/BFaQp<nYhL_\G,SDpiu5_snP;b&hRpbUmX2'.qXdt!gcSAZ)1%gs?b_"Md0Xlk'N))q.7Y1?%qtDLiC1fVOG.BJDYSTA'g/4HMW%K(D1M4e#Y.'j%f<NJ%VeS-]\[!9@@uV7^a"PTd[t74mlB$+j-Y-L[\(2k38ofhmi@]:4Q]?g=%QJUf!;]]r$YKs)1R:usf>:Z5u,''"@Z`X,e<,@51IWR3MKgS[>lAVqWb+TFMqg%/W)rY-tFOEB:3#&%'=drG19t-W5L,GFFllJDr%iKfP%e#(-P+(h3[3]!7uj`sugRSH(T-'iH5a@ATSSJgJ\X?;rsN%FI1Z.`kPZ`Y-$KXci8Zggmt@5OP.4,r4dFm3R#[BV?McLb[Y%WG"=K4,[6J\E0ILb^?m"$d$Pcl(%?MXWj4Z/=)<F'jX"lc:f(SH$WO-9kQ@0l*Yi&d<'!*FC`@\<CG<(XWP!fXu)Tmr.T@Fd<*Yg%,HHWt>C^/j7+5:;CmECib>F3URZ8u>C>!8]ZTp$HD"W[[l-)1blR&\aRa19-`2]^(imDj[Z#o-;f4C]@behEE?:L6=VDF.,1RBc<%7+7P9_o+IIA2Ki[/=gK#f2C"<AeU?7E@[k"#.=@40KGE&&A^GT77S*10gJD>UJigrb1U,Yn;3-/GT?'1md&D+CDX%Q=3$t>YgLRt%Z7W=Q&X=p,`.(QIXV8dfg&a6!_'/*3*gG3:*/#p2Bl@'YNdR471F0YX#7QLc3'.S+\7%F>(`PM)ff>#QNC_i"I##c^d0Y4G13t%1%)SqB_Z:kV]\W9mgr$BSX>d:9hDT^`pE>VsEDX"-GHqQOf0pK4YnP;>O]$-]b`G&]CDWrp#lk[QOb1tA[7FOSIm'0.uAaZML2tK@[%mN.FN>hGe5]Ki'hq?l76`q:'XlUFfW5qGg&_&(#,&kH["HcYVj%;W\"M4D/jn#t#8`N_\![1`d\<#Vo6kMY4:k!TE\M)"C.q[-Pb%gu%!F?BcTGcRA!nF$j*CpOHu7?!s#02\[0Df\RgtljY9,r2]@B_Qj,6mkI4K(.Td-aN##XL#?9rl+kEkBC*[Ha><GSJpnJ"Jbi];%/$*T`0LO60gmMGUXi`4u")GZ_H\T>iYHGcI;M[=`+EYV&o%2#/JD`,[ZNDOdVNY;OUq@a`Uh$Y&CA5)gZo+T`opm`"X_!bk-6HuT%kK%+p.CZ@Z@!K;pLs9/15R-sqs)-n(IlE@74Bu'\^qJBHFh6gMq()PE5>+tVep=%U,e>PF6QH`=5_d6aG`hE*4GN'<<e1\I/F\Qu%\>/(7ko+b=`"Ut/Y\l<sKf_eAHmKNqUrZ'l)L(P12g,r(gfDR%/=spb.<"H\BN!g7.P?Q$5/]mD419I=$WX]Hc"^S\os9gs0"[J_%Q[uRBVY.XMj'to-aNbR"P&;'2fX4Jg`?+hG7(4h:k6gt$DU#K4&TPRK^tO.JLKNtRcM^l.Kp,bW4N]9sNc-j9f<CUboD$OiTo!h"%"A@S)$SZA.QD*`9I2J0;+JoD2V9)Dgfn;)JOV/gS3>h5Gp_T5MVVUklK=df@[G>dO;.nbpVii3Zks;qn07C$OSM4=,4cWrEah=?A%j=Zp2W*'k^TU`oe>UY?/WMUMI=O:DV'&tJ&+$+IX@<I#8DIZoZ5mKV9ZTR_8&Re>1VUACZA`Xt;;_#Y,#p#lSUs5*h`^tp=K!4OO%P:Y#B,PHjq=c=jLP$RJcjqq1eoH$LtLSjk-'kg8g'4J>/6hEK)Dr;o2#gn&Zn5%V^fFFK<=C2*Lp'&E)@U!-L*K"=s:IJmMABOcr%qX_6Dmc&@dlEG+4ab4s0\('Q#AN\aYrYDjN_E1Et+.!++VWtBg<S)jOYp[0)^Fu0FMS7NhfY@0eCJ1Hbr5ia/$>IO-#k'<o:"V)>%d'W&gB@eUS/m^^?fcI(JV;gJ-ko`+QI:":>>-LE;PnVr@"k)Vcp=2EQYmSAFmIAlKr_:;]81X\K4%lB]h7_I=L(qmd#f@&(+`6RL%,+VDGO1giMd<Wk5%bqVrg.a!%`]qQQZ!Vb@$s;5sbQgM8S]o-1QI2h,QdWd^@ulaJH/H_Q&jg,XjX?s(o8)$<(p#4Kq8?H)WIg/X%D/rFD$h5;1>]_G5``c4)@^f%F=?3o#fbC)(FC*E>&N,9E#K>taC%9OrF+1K6Ac$j;XA;ea1WLt$)_?Ufl+-"["@^(I8/o%6P<7AG%RfK[FPsqP&H>%&=HC=I?rTM3[5@_nCR\?KP3c!69U3Bh4(NuOZGdHZ$a``<B:3bgi]H#U(V3a_`oSk0MPt<aTQP*R[A\kE8M'3nA%ZOQWU5?ljOV,48cld#Jfc2)<`>0/;@@t8a%=hm4%>".:;L]Jbrmm;<%E>5&bK;Q3J-q"(s,j]XH?7EFA(N[0qP\e%?R-\=Ydg0l>%gM$sY:A^Q@__fQ;]-Ff'9pUK@LkBV`T$k``oWJQRP?f>@fqcJ49QiISfi_=hj(#[%$uKCZdmmrNcR-4tdG0[ST088E^EdtPNg^o&%+Ba)0-9i9)Z"gQ)3RELk('!iqYg.=*TT'UPqV393isUPBb(5'g^Gh).B.f/,=S'O[rChTc^>fmI5TT"30O^oF`nm,3'cjXE>.`&q%g[XD?F,]3h+."V&Ad+aY^0J7FQq]i7+^CCZiE[c;OB"AACS`Ts"fS"bLDW93X+o@W5h6c;:$Z"/$IF2!N%ohe%ol\.JG+18X*6;-%;1M,:B-%.gjTisE"iqSa84;.@NWNaN!ORZfZ6[J"(%huZA62WYX>,6;GNA@"o3!YOPg=bH[RH)ER73pS^*oV]<FM.]q)h>EA(dT(%g8Y"67JV$YM1;`X+3m&_3N,pmjb#T=X4^9l7JU3=Y?\Rc+)P#.6$4c;C1a<i3/%PUWqsh;bZ9iFb,222Rn,0D\pj'f6S2KncYR>H%a:1Sgoiod=a^naBo3J=poij%-PZHD^hAG45)iD2/T2U.!C?kZK=7me^o&=fjlod]uX9Msc\phkc>V#AG1oon3bEkZ`qUnZhWd^f!%\picu?:>#/I9f)7$-C^8X<tkjf?a<O6<1d#`)eu9_X]DWS2o-mZTl-<Cr2?XrTj]YVN3<1f1udb1,B:kQ@[1\f?aGrMdI,u:tO#?%R\T]DkQT47f5LJPGF#ghbk:asWp?SV@Tq=.R&P55\pj@(Z^)3&0'iAe=7nB@]3(l3T9U@c<7R&N6aCr]apiD<US[8Pft>cV'ghrs%[S0skH\ZCCLt"lYqAE$j;:U`O&*#_=TrZ]9F4;dC;V-uoln;Yrn(>(KTDNq^Me)?3X2h\sg]Lj4Dp`5.\uqZ.gk5=#lf;p+>1_),%PLnJqQ`B@aT?dW:oWFjiT7'^(O3cW:[&WG)s5%S[7Gtn_TBVfE.@-='a2d8:_,-22\R[bAC-B9GeFg/_9/C4!0\5o,/&c/D@2?!2%BC6P.<;!"1L)-rX7rL&dWo"FdBeImT$-Vm^rTr&S.C+Eu\pfFC<W-1Rj'+2Ef3")PZ+>C+0-p9t\/q9C-sS9?BrL@,6ngaA,d+#I%T5k@bX89ZGE[<G9[T3:AU:?)lIeJds<rOdjlh]:?gOWfaMg;V-lGmGE,Um>/f5HduV>IiQ-9P++eSfa%_1FCSZq\")jm)\&`JUgq%Y+L,-/1lu#Xm9Ul9!t[k[6E`UXriQjEV[1pmW=gblh[$OV"T>V&m`[Yf?\V1kUIH%=4bc)30:C`PqN$`./hCo366-Vi:0)OG!V#A%-:>.S(]DV@386OO;dkTgRrj$o9\HYsi`m2)@o&K)%Yo?Ci%P0h"KK!m/BIH_\l*[<f5>"P3POci6aP96NfW()$bOHK7GJ1.WN(_4%(X7fgpZle=$\femmS!6%)bbbC%ZcX"&r3H]X2i,IhY2gVQ+fRikpqkVb4Wpt=!%#QLglXm7"B(&c<e'$i;J9imrq",lVfOSh:-ap%h!Ob*S\*ooII?ML4m258GC/,/s)t%3h:b!S?="]0\^r?O`k@3>]A20*hW89'.>9+t?_aC<S0-T^k-+;<O)MTKgB!StC'Lr6]7F:d%H<ra-]P$\^5CIbeG'jf:g[V%fhKNsF3SF6+p2+[o6>(XLrO/mF:@+L[^)i02"!nN*484fRB5`#dUk3g$ndXS45&S!e6%?QbRIUo7%?#Y2UF:.!&%<!Bh(tOt&Pj8T%o4Gp-Ue6@R`U:83&,2B9fq1s`!f,91oeR'G59-Q=h(2XQfCN8C]m[atcHc^DXd<]/,$2H5^>kj6%@6/l2b_=3C?AM0@*/6!"`EmPP5;%'7oi(%14?c0T^:1e,AoH3o9p7aj*MB^60\c-cVp<095\Tm%@W%+\m:&3=p$ZP"n@')"iT92>%K\`69LQ"0R'0BP#ksO!Jn?[g\gAHfNHQ#u&gCXpHDf5.O"obIICPI)D^Q`)4ZUYJn"><N\,b2m%:Y0+5s7()fI_,Emf6T(A]c"c8%ic\cbj1)d1#lb6*EDQSuX*]@>Wr#])cM-.e6hp<c,Vo?dE\@EB#fsb=_K$HK$d;61n"0_!MU]/k@+:S+lM(%f&Jpf\n3FP2EGT"Z%TZmIb80?h%*hW)(\Qq`VT*bT.7`[gMAs<h6OS/_>?6;2h_`=oLGX2`"lZ8alqEXospqpdT.g<]]8WUD[$R0oo&!/4:FbonIg)#36%^ZOat'p!hZ1Ug]_lU=k?q\?/fk\k#sNoeqT5[&=iO1>S$_DpPPNAtB<k@eQ_c9kuBp1(psI_E_V*_;2&\p+uXVq9fMK"XHcYa*po%YD3BLE57/K)Z^tuh@qMZB]5^^JRYRGg.?`%GAk[(;YWo*1*qZYH+;@2>a='EUA?_[$Hn\2oD"X>;;nOba8M4sAKkG0B6UsH`EGba%9aNoWnUXd8mu;9go_[e4]kXYrm.XkrjR)Wm%'0#<lF0j\49-Yt,GN24kh"RN]^8o6*8bM\p<c[^]^fMHC:snnM4/rqX47oLT/pE9%KtOeM=1H9N(>n?-LQDrArQH]T]kG$[L#cn,=?Vr,*DuRq`@JZg?h^2Y_V==9:S,c(+H#uPR#d0qU[H>)Hf6ba50ru`>B-45k.!PB%A$IOY8Gu&d^ao+>/i7n\W^tn8Asp>OI"fo7Tq@ddnl&'*g*$KFL#t>k$6)GJRGE.9jb*NlUY&j[o<eF=l:YNa.djrEA)'Z;0S7m@%GP&+]pJB,b+1Nm-nLa&@NMQPbrJmmjJI;u1r%?;]N''@^i=]UWpCH-ZZ_osSDpFQVc>XNgd`d\p^Xk^D#)8JZJ<qV,&f2s7(8:Aq%`9bjEamJ%3-XY+0bEQ)9q#amiEIt,/#%Hs'dBB`0ASY=j_$0N;\E0F./V,tsh"#G!KYDYah5p?0??f9drA]'5\ojlbU#*[<-s<m&%ro>5'Q4Y2hSX>gg`Q[.@h6?bFkn[]a9ao5\*s';]Pp+cXQt(ai$$3)$%Zb+De\^'bY![0Y#00/9Fg+TiH$oV<lGEqh/,>ec>+CXp%o]b^-S_q-q?nQ:[`(QrA6(p)kK4;QOmUoo&roUH/<s*"T3oIEPbuZ]&,(<7r4J8:.U^Mi&>*%-BT;L4sgW=Pkdd)i!o\`lrSV\Y$%5B]j,h,;m^THd8`nEjC++mp>7lCm'S,:C.LY7b)gn)]q?`l(g7pM;M.ebRt4R%)l<)SebD)X:=/:ADVJ/P1Me4gl1M#o4?N5+6b*%5Nigk?q"u7h-Ti^#:6ln`EWGD?r;n;"u(`^#`D(f[t)b33jO!X2@D7cf-N:\c"$f`)8F3-aG42?(>e*_^U%&t=3<q@mOXii025"1%6!/O%5lcpd8H(%Ngf=!X0K*e:65QB)!tG+/rZ58Wo/l[mhI$%=5lr8K(Q+dN11['3Hf0RdqtIEnD_%>F5C#%u6HtJY3nQmqq#-rr%U=`*B%Bjq'mWbL_'jR7NUFkCc(3e&%AMj0M;'Jl<nWHDCHPd@dTmiPN5:7pop(\(>$QrAEokm+0aAmfcF$mbR<<`osYuBZIKij<!%&T+.d6[8!CWu;h`osk/e7Qfuj.D1q-(nnbO@VK4h.Mi.CK'>iU]KUb;4VWiILCgSG6Hj)1?)8X\RX@O_qG'msY2jA#kk*J&9IQb&%i,a%U-bKa=Dj#'a^[6PtrG/G2<8H)-XUd:gUVHWjXqK@iXM6?^;inaZ'7VDQ)@&$26=M"<AEFR5-O\p/n*H:B]Pa?MMT)?(NBR\_%a&JgQc7;/bL6sJT`(<3+m>1@cn94MSi<g"g(b9!o?4hD<hX=lC#UEM=GcgAa`LY->KGbVsI0Mro0RA,Z7MncPKOll'qh:]aU;VuS%bGIXaQ1X+Eo]/9N5TF]R[eZpVH3+,`6*tbVGS#-rk\C]ecCk$_Y!.K@PQ;?iUV"&$%82;h`j9e*!p3BGI,b3H#%9`I`dO<WV$%h.%eCf-2Etlfl(%=Z%pXb$A=F9htJdcn.SInI!pGXFLFT=gOg-LZ5!*t/l\i9]d"jk+!6:pq`."&\"7s>\4s'2r:K0<fWW$;_1:Ic7K%0^NTB*meUE,dJh5F&_T?JN'%gW&`79T[-pU15J6<d`X*GiETYHd!9mh!dd$rj7_X1G4;.KAo<>8^7+-pD_%)J+\uPMe:8b#c5nf-%lVko&9!p<,3RG8D)52;?Lkj99cRV8O*4h=*NasFZ;CI&R'2jZe&p's(8H[CC[)BWo[kD^u$Tb[F=sHp00D[`A5jGPW!NF-`WH)67%oBj_*N^AU+n1tu(F9"CJ44+LQBP#baI*SL@^F`)LF/;-UDu4]R9TW<&p*o0e`8[L\Ub[5Cf`qRoBP!uc!_;X>dc;^9.ca#46NhkG%(6eO88?u!(Cs=OfPC7`n@qOs(IDI"@ZdPJ>;Q?\_7GqZ$F-4O@9:Zq2T1%e@:n0`l\H7D2(G((NF4'$CH%ZJ@>(&n+Ot\.FJhWKu%pm/8mT`%2RbRD8W1noJeR7Z6UY-`MnbY"913oW`,;>.FIfu.n!HfZMN58356FJ\_[4Q-q$q9qn/lo3o\i5oI[+V\\m,L^9-_s:b6%BNQ&k5'f5k_8)pY%B(W_NDE=e-SW%V\HQMG#g(=XAQqe)bDI/R`O7ns(mhIVjintioJ`(KB4ubl&\9#j$[b#O-ueX!83e'D3HG6A%juAn9`AqA"7,]<0S[;^\Aq7&"[%49'1p"%oOBsUV0Ja2;5=Lf-QQuU_rD'*7(;3QjU97*BZ@Wt[d?@HB$YW<@O!T>_UkH9L`3`!f%P`]:OaL=>;!encjpG-5Z33U1kFY>O_7Flg^g"$$IRegG*4*a_^%.btmU6gq#H_ZV(360^:`cZAa5GIO1XIt9Wbqf@2!X"pTOm`j3%oRc>sZ%@PP:Cr6^,R?cr@g=6$r^@U>`YbC)/!"V&m)kJo)5Cup$tF[=5L1R^3KjTr(S@4-=m^GOB@.#"lX6#E-SWO$^][S+?m-,t%b-G2BJ0E3FBfr;H")miP:10"qcir(`NKeo$ID6_sBu#,oG7BNnF)D3'"t#N;bs`rf!D!gB"OImN`%;d.#TLcP^"5i<O094AM^VOM%5K^n4#3L=;W.>md*fba0lC5&a@<&`[S^<D`T4)gc1Wp+bpa$WHV?LDC-K9`8Mn&q35P*bBcp8<9+@[:5IWdP-L<X$:MO?aBmJ'^M%gptb_`B;lL7^2/<dPnqd?sNiuR!V)2YTu9>SVlo;3f=)qT`EKr:FI5g?Lak!O't[HHSCU68]34RJ0\Ri!*t/lCP&U@f\WaA\&oqQ%X\L-F$,dM(/Vt,alp'rNOesP_Lrb3J63la<SArl"I)$O`"RIB`n/RW7_3+eQaHGlq(^qr@$NXF`]ah[m1bS2q","-TJ9<PQnQE($%*&.G^Jl-&U_9=kI';-j0fOIS_@:OP$[a.S^&o.mREqXe?4MXZ2:.44($f-6713K\-Os_pjQ59DrKiin^Pg8,?4OJPPitRlJ]2+Y'%;$/Z_%!.e)!"E=#JJ'/UTOIs<K6OTGDO!;O^$r0)#r$s.OC0o#E<jPfVN:u9`bcK#=o3SQb^GLU=Gm'6m?K.E9t0[i_"V,.1$QDW%K]`[S.3j\<EoW.tZ0'0A^J(mukR=&.lZgr.0Nb`?R,@^f@0Qq)dR&J1YcC`kp]$%,'/7@qWfZTNNI..9&#b$C#t'8XAANY0&O7]t%Jh1Rf<XZ1Lk9%fqCf+KpW6'f=kkKDoE!&CMZ*UbTgm6p\*T,?sYMK=f\UDQ7$mXt"I%*HhWojFIG="%2amoADL0k%I_1$P>fLmRo%RRG@4%/AIAJ-bKS/]:\`%)+V^"bn:1!3OW&AQ@l&MZJuo+i+Gi?nhLb\Hni3(eGJH%-NEh(;c%`c`5)[Y<7a.nu=&:)j*7R7-D]s%1,=_d&NG_6-AA*j7gUp<Q]d__X4E5[)+9jX<%gDY!!]k>Q[n.R-c$'XTn/VO(ct!70I.Lf`\k%5@+^6F&O?5ITU#W5?lMuuNn&C,%Qtc+p<kq.GH)*c%F(2:r;_p09Ud2@,SI40$K-hS8dE02clWi4?ngTa>LdEi[D=DE"6.?VdE#:Juo#-ae84I"jdr?3D5a!f(5!<=*%_/O7O70)]kJgANtC`@Stb9(9?(jp0W<D1FmmS]BI1uK)oO-IU%V>:J]NpK1V#5Ph:LCs.9;cc$bmj&fJ-rrRjmBotKS3StdM8RsH%l;'NrO'iZF@'Gis!D1->J0\PC^js>4#BX2V9%D?Lbj'Un(4,(>T(\;f87fT<#`g0pkIQ$i`_Z?^BGGn=d1'mH!A3p1)SeaW:G/!]%&]bmlP?6tBgj?d:c[mhSkR%_XN%&-@m?igpP#0kNVC4]<5Oa7?i]2>-$7>RS:k0g"83hb\XC,.2Z3%<`KSc]Tf<DS][Rt4?Aqag?%VM74H-Hammah+=:PqM$8KJ+*.%(qp(S4:Y4alfVfo4GOs9!&NQ(Shf8Krhe*ru6:qdXY2>W;ieh0.^.SY/%8bT`[u=8l.k7/fbf0%K8Br(eQ3c%@)<Wqpa@VB,[j5/Ot[#&"u,BMklAf5&9g(2QDt^kk=VXg+\%lWs65lg'C%u9Rq!2>9]JE"]7Q]0SG^T(0FA5C<aPkQ%=bRN^.klgt7(AHL65htO;[1$8WY4ScOssOhdGn^@UH)#""=+7?iH##([j6#[eqJ?W:piF/.pEF^Q6H8F4O9AQ6l\Po8ec!#+3-^Q%;`^,tIc'rj#&0,/n:iHHOYZ`;JD4*m54Mj4.<O/9(^27+Qm?l24"n/HA-QgfJ)JrDJTtW*(e$h`*qSdcY$_IT"t#O&W`pL?!(k%p%!kJHNp>eXX_NeEMA+iAD),=7H2UuH60p!V653>T]CH7S]`F//TTa>@62$+2i)OqUhh:r#dJ]5P?="ad'-#4"p(e6&r#G(J.:!=6s%&PPt9GSMM)8]"R3\cTcu8hLps^"HAN0<98I0P52'-P(;/*ca6\$0'HIkYgb;Ed5?&#%*U!FD&onTtJft*:_H*`&DO7'S-ldg8N=:%2Llr2KR!FF1$B5=0")Ui*SAUS&gum8"jp9d$qi;m&6o?q]`0d,_>n6Q7Zp1EPN0V1_Ctu$!lM`8C^[M$fb@<M:Ui[R1jM%kfH3RD%&LkH2?PS:nm4Zb(!hV:4]&PABYtG.Di^khe;(,gKSRE[,,?Q3Bjpn+CFKEZ7$4L7BI+nh`%3,Yh[t#3T![ANc"\*ML=+G*p10J!;%p'\-e$Nt$!`Gsn<GC^m_6UJ(+,;n]H2Ie^tB@V%doDK6"VdDfR4Rjj5N*m>h0HGpg#H.a*DLZ6-pZ,!(#_p#Np[EUGi![.%PedXB%OC/cX=U<@TN*HQ,PA%N=%kA&c`7jtnhl+ld8E/Lg_:k$%BO5qgR[,8#65#9UO@-ABLbPN$G]G4RO1W)'6/7l%+?1ka79[So^<T`b%.<JENg:[Jm'8NA03BlBU(#cFm!`:4D(3bY\,E)u>,shg7NeG(V1nK)nQa0$p8&r0&67R",8u$->2poVBq^P.1_Ct?_3ODW-]Fbn&%58$TkkD2CE=c%'V3u%jtfKg!eQp_7^+__"C9L*Di"qp2uOT`$\71bPKV%QVHT_iB>&[>N9jLB:&*XrToAMiofSm"?pMGqCPoJ;3O%s#_]L-PslU>iDHrB$$[?(#4aVj,g]&Ylb7E"C?1T)d`eKm:S&T\.?c]e2M@[Q$rm.<;Q84;<c\n6ktKfW10XS1<:Z=P-;ZL5=qNb%-Hk-V[Nq!68-0F&<!(4G$.c'I"=-jD"E[\<4:Aeb]2t]M1:@X@TlYZ](LE`CoCT<Ws!4V]IRbq^:[._DK'q$4.-"E+EiTIJlaqbI%rV'f:ZTqnlQ?thZ32]VR$<KeEfrLItO*>,e8m+B8>7(K_r<e^dM"Muil*cIO]`QN^*)^<*7>qT7MmQXb$+)@r'@l>46PUpSW(08g%cjCM,9-"<f<%7p8Ht?>/(]P(iWR1bHZ.'(JEFST0><suD7Dq5?n^V:t8^9.B'Ecgiic(XH.KXiU<j=$-@9;;P/nk/(0>41H;.UlO%mig#J1d;.*<;Q84;<cXBgQ\R\*@h!pP,NJM`=Iec)Fa=]>DEQ0!-+lK)Chs@i6A!X:a2PR'hLZ+<-eV/W1n77PY&r*k58;d2^mXl%Kfi+(!Omjl&SEVD^mnd+W@5F1OCSRu*O(,g2.$_Z31%o5UIAK;<mqZ!6f+hV/l-+XKQH8<TVtukMK.V"$YEg<!X%tfE%3r#.U&0)%d:>?bdbY)CnkrG=NCfr$f"(9NWh)bD<?tJpaci2miO'>tA$dN0%,AW:7"hm7"Etr`$mG%#ZX*b$KC(b+'Q8V&YCU5JEe>tlhQX(l%[1P7`q:8%lV9%tp1qC[IE5lBj;^,h-m`7(jYi$;E7AS$CGLkk9qXl>a=$FKUSQ3o]8j[M/X["52,ALkJ\[N!1$diZ[cJ1``R6XC3%/.sDBZUgnG^/D6>W+_0+N[3$2GHHC<+Tp.jVQB&?@2c+;??BM(^uT[9#],E`,VOjN+YPl0G&Mmj1[_+mc^,=Ik(8<OEiCY1_QF4O%!o1`^!cd8%8nHO)p))u\+LY#1@fR%1fqR_;I4m^Y\<GUdM/gue-)_Z*7T[5g4\6g9[Q^LTIWf?qLm(Ha,Gj"Q5YA5PL(p?d%,6M%%8o>UGi)2VWS0DY`bYUimN`J?0h1H$0pf(,oVNC'LClaf)YD1PG.W*DqM_hlnpl6O&f=oC/^daYJiADUVrdDK\gr)U<>p90&Im1]X%AWsfbrA&/-ac=i>VS,.<5^JIqPYKB=l;PWKGpnQ\ZW+gS.D:05;I]U/VPH^tfJ\&Oe6]8o?;2ZY3B#%Gd`j)LNr"nM9brF]8SoDu%^_B\0]XC??Vc&RV:Z.Km31Ou7V'-Uf<k!A,e&U*F&^O(,J5E]!=fI!d>Kbsq4,.Tn<BoFmTA+KE"p^BpaVd/KS#-NnKnG#@n-3OE%YZGa\d#gs;+J(B'O4:C_HDDF;7DFEW;L7(/8;U%clj(8Qpeln^s19P5PfJ(.Z5GZkRGKh9JOuXOH0p^AViiEiY)'pmkuXH(6jLf.%-l[G1pl`OmV+`UW/s'k-X'cG^@IN5:NNR=?aM\:LVT5$TYlAg1jJtJS$5T4Q*^slO/0eUuWtZD@b(Tg)?nlapX2]<Y9YchD7kp=i%lH*bY'd*Mm-m5apX;oE3YRMc!.<*tpJQVhj7e)9WHc3j%8-r?rIk?SRVb'ciUI#=M!><2S-I+n+`UB-L1+J8c:Pk8M]#94b[PD=r%3E(/kYN:n4q'"bJ-g%u^5j,:JGQA2h:)Hk=AC5Z/KOktBek8cpL9h\@bkNYBJ-!,a!3gdC.T:%"X<aYMZAtf4JUasu5_3$/Z)m/B%e>CXf#MpK>$%s$c@tg!kV'W.aG]54rmP?^F.[e:1Qhg7-T/0\&Vt3hC"c)CVU0XO/R-CZ9Fa!YY"?)hgcG"n_LPYmN+f]5mD8bE7%c6HI"I?)0)%F>iWEq\l#+m.^V"DN`;#(/YlS?Um"SUcPRC'fX@M[^f>QB7[2WWF(,A(1f1#""orl51rCQHD,p`3`"!JH4JI&i*6p%8Q7`[;'HNT(&k$+46`C(n@#Y60CQMQj]rN$6N")5.0]6'5:AdM;Gh`OD113:OXbbh!DE;t;642U(iMTM!5+lb0QWB5mS!UdJP"P%%83dH*nM_rM4e)QV],";i-bliiJOrm%%?MhD#tPWI'c;t;?iX_A#cm\@WJ96'Z%f@&PeR!T=Z13&QWNs4&#]*>!?n]m1qtBuSd)Ca%eoM;@KM-;1Q.tI1]S\'2G'$O]GK66OqF1HOhV_G@JA*+[m/^LD_>B-!#QZR\FJ%jZ'*^]-Yc27)[@WGCpfP>-2iBXe(_VoU%#L#W%%!Joc+PT68\\HT.VA=tFA6#[(X(@i@h:=0hadh0l9(1sHLZ-TG9%D;!l=]=5e=Bl2StIm.%QLLL#L5[I<U$cKkRfn9<.t5D_\'S+%r/Fo;kMBFc(6u7-3"rg/=uoV.(EcOOMl9!3n.h*'1`msa@0>^#$uW7$ahL*D&<JOt'WVDf.S77NK%<cIKg%#F*663Qn9/tu@QZgZ%?j&"pPm9,DhLH<nk[II-f?O(-4.m$"YsC&\`4sBD,_L%;1^Bes6LqAu8Ji4.=("X$%HiFI-CFtkP5^\I18p?uj=5(=EaPKM`6%$S%AB]G4<-&>D#AGOoY&P$,<)"4FAlhL8^G%(:U!GboBb<TT(ieP,0T*cP"-R%)@2-#/@#-?nnkg`m.mQ!HR4M88A=J9Ta=E[=08/Ve%/%8T.[DZ<bpK5+Wj35N*/2lCZ.nRBZ5mR:tLi:I-WnbH1r=)pWmrfc3Q]dHY&FSGfH$Il[c2_fj8uE5Q:M25pUqEH1!6S]S?$+$n%%*J?'7=q4ELkLgccWgnMj@''&\,/Aa#P)TN?KIYPoA'6"$SF`-"hATJ=K?V]Fs6VD4!oc/"t>J9`t5\*7$>t:'pSMB5UDXN$5JSO%:l0<oDu>_3%U`:=\k%]rVEu,3R_hoDg.\?E9o/JN&/"i"&+C%]$%["cRQJ'Y"lV2=#jK^B=S:cN.S7.l4f>-d3^tg-p+QU2iP,?=%!#LG>"igFHRX$`jq1T\'p.ff9,e$K`4O#%_mcap;<TlB$INT5^PaEg+&YU':Wo;SLEneNL:jkHY(R)=E7&;-ZUKWfI:YDd*[7ZHN%A6#_0R=b<7)>-.kcnfOZ\=ug$ES/_pJo,qikn`97Fp"\QP)@[]JHU&u#26RI?kSt5b'`;^//eM(>TV;\ZG?mFE(`@P:RYBY8.]-R%WUSI*ClCK-\fPQ`^(.eHZJAUP"(YG9(PS7-W9TJlX'C<$77^B=@Tb0ZA8^/Pg8hS4V=X%/W`-jE&b`[q.H0rF[p\fY3qd4^1-B;_%V)UZ!=M[O1H4;Yc0$k,<a5"cq\F^@p_@@=+4P@>kBn/^F5b\>W@%].7mQ*ip.WkGXBXsau##rFp!gHKTkl=W*imS6!@!f1(]pHul%-!+OS'@2$OE+neRi?;iOM4ul[0&^G7[.,:u<2?%J0.a@n;(b[s/n@e/j9.&5\SMDlT8%ZQk@roBFF6c5iQ.6P!(ek@VB3&<ajpGm%$U>](<*]X_jBM_#?lEI4?ntl8O%D9?Q[m@h3jN-TN7C6S>,;/*l>e86.NflV"_GL-5DCaXHm'q/'TE>$WN&Z^fG>i$%m9T=5OFkB%/-d3h]n\FB0lF.)^OJ=!XRj%/4DUlACQ<)4G2P_?8Y^mrQP"Fl3)+bR\1K\]rL``2>lauf[j5^pkQkjQJ36mO!Zb-\[O5R]M%qO4%EqT\RO*V+g-JP:SOC[p,IJQR8@?SQ&]d[3#_I'HRGBF6(,'&qMD+6cl@/,H-"Alj,0bTRMF#G]ur^@>g&r$B3$,[/UhW_+lC^X[K%/kOdl++2pDhd;nT:E19$=%.nOStOc\ai4'1:7j!@oBEd(%bNCs=haIE@@g-n[\UsTWZ8rh!U'k!qt=]R"E0q5oj!$ak6-P2O@XmI%@7WYH0EaQT0I_V.(6EAVCm?H1mghYO@:`'6!aono3YSi)SY+o3#'"$t&Y)f,mOD;r\rdVLp<V^jBlL.aRu1drI-A9F(QB(;%-LKP%!$<?N(V8)'cP$_;Y/$hQ&IIrk/E!m4#/D=`Ua1p,Ak7<n@/+;$7i2Sp+:O+Q%@EGUM[!]r#W?8:o;A5T<.>b5%[EOU:VjsR7lQam%:1gmRRWSVbnC$5B=i"g\OPHd%JF7\#1&*".hJH?!lQ`pc-:tG#j?8l]^o*PM5ZTSQ)AlsY8LfTi!T%)FWi;EeZ@Job_7F2/6NWF(%0aDe(#!7*mKlC,#f<[`lK_pNgi0I:;Ti;?@*[G_09/(jk_=pdO2V!+6:I:/!>giH;4-kG;6+WRa'tfS7&7E]i`QLPNgpq?q.gKt\%8DFep'0,lZ^.6Ng^e5+LJ9dn)Lg)OR_1chDhim)X"0/i:''L4iS;%B\,she`*_\SbS.Sa&MNu/@jV29P<(M(EO,K+-o?]`2U-BW[%WZqa)+?LDa($9"$jBjrL4&l+U1XCF#VsL7;F1gJdlTnZ&'0!htPpLE_nq7BJEepL*A<k1DZ%refJB/8=")J<G2M7n4W2G&M^nQPK%[MgTo0GQ]5+B6UUl>oCe&pHsq)YfV!lr!<PAF0ZSCGVWP23Ll-/BMrM,?%EY7Ccl3P#%7>5QOM*TrM-snruLhjW)m6-W#@mhF7$8%Wg0WZP%(J7,c"8!"LLWe&<K<1K"+n&ic$D='rp+@(Wso2Iapk4YM48?cJao-QU%9+/Jhg_<?CG2D\!rZD*tsRm0FIAJoO^hiCuGH%1'*%>5.L6WNfRIsiA_2L^lSO8/IeD&4H6OBGX;8jq`HC,`%ZdObEXlVN\E:R*FUM8jS4/tJG'AE-d24$<P%Z!RCqlZeOViSJn[Yq%a!_bb*!1'/MN[M&IKmnKN\EPLr6Jq(5>8L6k2(!K(ju!CQa?oeKMLY+V51%fktOe0mjk@AN?/h3h/e3e7gfqZ?%*Ul<@V/r1T@=O%63<^b76r4a5O4K@.&[,=iV#ge_u\EdY+X!<1d[m&Ro@O^a*QEh8l*5.JP%73=@dsqeu/iU&u]mTFGQ8b14l[S8nFkZiHqD(183t^%m(38:%j4IhCHO(CR]&)-`<je'Lpr"%%I9=HkO&@R^sj#LA^6>JJ.sLf#BU)IL]J(FfqlR,jKN@DgmFTplnK`a='3HH.n9;nDe5qG%Ktf+rkZK<7Fe[t1K2Xe%AsEX)5(R&iQ#'[WIH3]9TKrQe7g`(5b7ZV;"iGK?>Q^jt<F&KV!\Arr$mh7-%#/i&\H=)_6\5n\8SVXj%VW8ZBINbY$J5`E[k"h5H_*>b]=gEtqPT<LLH)E&kO=9+-IO,Xe`C'@.+4=o+FqPAG*T\Ee,??Lg+,1Ml3p-V_`>M3#>VCp?O<=sc%:F;#g()&CgT=bH&rBa?(!7oPOnhI_uXH'.0@L7cQ`Ygl^,GXa\b@rkm-M5.m3D?9raf:&q-k7Ie+fU&B7rnl53K+Ci`F0%"'Vhl4%PP&I%5_:[85*@UC@/*\R!9gWu<&VbrUc0"K-O$t2[$,(m`u&)=c7Vng`273XV\PbA-N[`1Vs"?`&<nr$6`nXU"fo!ei;:]!<`,"P%J?H\`BQOWtj;8@*m/@tU;BcDa6V?cJ"]?7n)8L2$,#^aY0I.c,(`"g)epn,n[Y=KPa78uA6r?_&[gauCF=)eBJff%HLN[/l,]r>\%<0bg;5Pk%\)giBrb81W?6._>_mM,(k@5C/M?uh9F4lF.B<K$An!@(FJ,HV+>Z@cSDU)m-,(`H4@(ss'8p)J5[A6arjF<'0ki^E/)%8F*AubIIo"K@Kj;i';AM<#Hnt`BK>7ME4!cX0;bL"f?:,I1_G"#s#<l$2D6d8AIFn'7;?=3!0ls,R?a<l3Ti:@funGV%"R%69(i4%pc%7.W"TH9R^9;d,u)1A$rT^CO,^5+KGo#h8+N,Q[?a@CD5OR*-cIB&<9,6-U.QQAHRi<_X9ta+h1t0NF;?r[;Q,Zmh)UcA3[n%M%(W9$3`J0N6,]K"dKZkj.-rbKoP,JWf>+i`N(4$TkRo:Wkj0Fra`RO.E9FFJ_A9@J[97/gW.mD@fKtK&&XA[)h>Uol7>^ZoPX./#[%ckPj6+Ah.U?_\&;9_*jiKV$;;Qof^fZ2tr\L^c\&iAYb90^O>6?pGLKVWG/rbGP^GA!Ob;4S`#bfUY,Xn3G1[PeukL@4/ksk!=V#%:L4<'&,*$,cVB(CEsYhB<[tJg"B<2C%RYiIA<F/V/-+l:7Z^']F(Moos5?T-jEV<QFgY,"G[s>n66;sWKHMBQI^aZA3:R?K!iBHA%;+iTjY?V2A(?,IK.+1)o$4R3u$TJs7b[D7i,R?bg&S(nrfZ=L%>(BI\OhhaBY7]n]>j7a-gATsMrDHO.*f@JU[rR_[mIiQ""SCdj%/dFt<GT'E!-lBa1^HOT,&Ti!@=f&,C$.a?U_FBqLWMZEt-J^3*!=?V>?q!4]#V_.RYQNT4"LSY?;Zah;/DB&Y<;IpO'&Uu..q1\+%3]#/8`=u2[*l#upFRU[^82(Bo0T*d#!.rs+)(@<eUQ-\`iL^$K_m,kH@'D77J9o(/p]q@>%OQ66pOMrF6'C>LYtEnk9r&.tqBf"V%CS8o%"`MqE%M0'e0$3e]80/CrarVk^c]28R;CW46*B1>WJO2dXnHHAmLJ&tm&i^,fS6)=J"Wf<#aIt7*;#PnoSa7'8,]XV^pVIg.%[?!YN?[*1u5sPJd-6V*,A=!El<$VL$4fo@D?EI,*bl"_";-bM3ZaXQQSLkQ:EWmXtaZlpOY'^#-iiB=L?7gYg&Dg:kZnAaKIcQ:T%6!kr"\O?^TFhrU]<*:g#&7toa"bp*n%^EgW/9`k?Kdf:Vnh0P5_JRSSNu9L*DgWI383hb\'VHs1>kuPOODQ-XeLJn;/n:[/q8p*Y%W"+K@J2`%i1B^I&_=PLlO]61r\!>3(Sn4^9INB3NWJmFlkohZ&M]6"R(r<43P,hJBQJ><l!&B/b:i]gWYj`X,!<^&g]MQ8pc!(6)%J8&PVoJ$u?+H.&..kn1W\6fN;'tI5Cn9OgsE=\LAKd_ZjX%MD&#I-sF'@nGGb:MYpp\.2M6)r^h5dKK@`^kka%3jMdn:MR<imdW,%q-1&N#^S-tm2b&5qj`7.ifG`AEiikOo'77:54kePe^pQ?p^0S$Z9QF_VC)U1+=e9U($mY&ni-TdQ7FNFq)ghE^m"GL/1E!_J*Vi+%,=46-j)'hNJ#)*]=KW@:TY&?`d0pHYfKt*L0OfZ2?ka]($`JU?#t'?EA23%QCk*"',[$oo!N$7p?aa3.EAhUb^IR"2V!L?D.D'[Z%a;IC[s),H)XtJbI;&Adj9^Ml/<qgKap0\RV@g=8]!<krs!WW=@.//8$SM]=<2s814OK$#gE)kb`8q581dh@r#<!4YP;3@bJO,Dk*%J'=a-q$;d`;VmVs+E,,WYSlo?,$X!)!sB5>lnF9N&MORbbd&PjhW4f4b,*)X81lZKO'G740TD.H!0W!Yn`^?i$"h2tQiQLiJl8ZK%_\!IZ`eU"@rY$)WbR)7$%PL5'D`&FNS0/,4nfAEiT7b0)KQQhbfA3/-9MB]5:3iu;JrMLor&bT%O9UUq6]#lYq9od6m#<crTM'!I%1GpMVMm*aHjFh@M?%Ki(QjWrt&JdpD:Zd<.;_Q:n2ZCUZ`E_l/"uT-g`2l:5+\=QP_C=Qo<b#A8OtC$+E:u!mQK0QD\KI-T-Z&$Q%#gaWO=>bK`f)lZOAd`8]7Zmq-6&%`EO<fbuTIV^4*G&Q57B8E+#`(^U^$t1$'T89A@S\Qf(Ddh[A(sm]'Y#fmE&f:ca*W>iK-0X)%rG"@<[m%J/mc:u_a%g.JQiK/-]h%\^rD$fUS0)>T5\i&%p5(bYi'[[bR9D<fjL(#Do9-#(1S?0672?V3N_1N%_Z]01%($D>L%r?_%5KobBAdqcZ*2coSla!(t\S_/bG[-O:[[s?b\`=c+MH_)8O_uA^*ok>PZEQR^Ua[uX&hd7rTYPLL`$0^9Y\uqnerR;CO8P3X7&^Cb%Z1(dTMn9$9^gt='A0J`B=hqL:-B(#O-8:-);LTJKKilU-:D_-\_Jo5t<&1YuTgU_mWI.B\C+rMD4@nCl&NkZ,m0q6JWnS*Xq_E$H%6q_-";HAb\!#73Y`04RCLKOW(8/MDe,R^b,\-S`J(dSo;"&6mJ+]`skKKSb)9$d8?,!;+43lH^4R!0kP(<&Z3cn_0.QY23Kn?)4:%d\D3%-OaBB-IF[n_$W^eOql&G''FH>#f/)UJ+s<HdM#gb7p?.nA7];$@4@44,pomr#ZBBLd[qj!Q(F$g'ZoJ%g:'Hqf?78FC.96U%P7R.4MEh&Y,r$M<h2mLW&O].q`Ls\k8H!!oar%s6<c^>f@XUgq`$3oeJ`Y#e:cJ(/5(KNK!ol[oHY(@[q]k>C.:l-CLG?-0KC?`Z%Tdh?&+ZN-u>V:%hJeF5DLj=4qCE1OZn44$6BakW3=(MAR"U9;^!tlT)"=0$kM2r*>p$L-46NE:&+n;giO]pX/$c/K0H2b1?!`l0D%lR6=5(XYB:/BY.ge58edjb7/%:bsS"I`Nkn/9BWJp:r(,rJa)QZ>N2>Uf[Y'J8o.:*E<V3#tXP0)NYP)+q$prM(g1t8Ji++=(%26%FHM8rUJ,s#X*$(j9Zbs+-$q[@V&a1Aj,eh-RcWC5VSFLf)BaPek,Au(jXNm%\,:X48?#<W5t$XBg;<oFZY1rmBE\Ts'[@*M.^[H7%?rARO#\6LmnN4"q$>9X@&qbi;X0kV2[cY#XXU2+-Cq!RDms9-E4_G>m;%tdIB&u&_JtL'h+?oK#K!R7*70A&1.]M"1:6@4SP\*P2%[B(*.=((gCB*['!HlU<5&86IcnCX2S6U?F94d]34b5tKd#6CT_K>"O#kr!Bs959hRF#$21+3Y%e.7WSDP>icLPF$/0-/;-jnp"21%6kUhG5igg^)U9]25p#?fPbEL+5T?s))oR!q3]59OEDl<Or$j/sVVmR<;EFeP0`YC-WPfo%jEP4dk"^mf#d(#WWcJ5U$BLJlC/MG@%Fc6:6%eX"X3murL1$q(/V1WG%HUQ@X%Q4V\*,H&I$4OuEg&ndeT]4+VY^b=s;"u.>@Ld)U?5%dc#6W7i"/qB87&>ut[4tu(bN:^Y%Q6uU'p:&NcR:G3`G#/tJ\%`2Wh!6hZKZqX6!9/Bh&GfmrD<$NSg4:81U8@#dGYR[;0Phb0!->,Q%Z9\q2]Z*f9/)&:H3bs_9.#F8%F2u;_KI//AVsHUj=#&/<R2B#gDi:!ll-I9G-*E^,pe[7sh"Bhd9u7GH)ZdMOPH/<J"7lH.Glc&pUl>*:)sH3DjQ%l+(1?_3`<K-^%#Dl&!#?,-CAr:/@92_f(B8Q-Nr9<9s=FA5Q.>G'jaE\*7UOpPM=bTNT")PT&:MKs%NU8ch-O6Pa5)#6H+!in[;LT<//u],URcALN%&41tI2$5up+C/hec?Y(188tS@>?'h[=qpZlR@5b+MLt-\X@/o@;,I4GeTe(`XYCn@;&phRn5.PGa3f]oqSNqKQ]FW]LBF2"0R+7T%62h&<*;oZA;Tk)'>d$?:![rPPX,a.s(3Gdk#o3*kC<D\nI),JKQS@KU1g5^iZ9E,ZnH4c)"U9_k.D[%@%+l.bqSX*%/t"h%E4I]K%-PL$+s$-4kF$4BCl1tZF#]+fe0teBS-jH.X2ra8XYoUm`r4eZ%\qL9%4Rr;SpRb\^?mKo"Hg7%_[==WR+'?8bmaP'?:ElOfOJ`2>%nG:P1CnmD[oLNETJhVdMeMqc+6hP?8FVj;9<_9>3p)B/^dt5=<)hqpuT;]XBe-SR&E:.J>,-fB/=2!mMm-_$jMHkU1".-"'8)E-m%L0%gDT0>'27/*"pZCSZJ^bYFY[=2/G%`8tQlapJ^YQHm![%;aFN)8'9Z57C'q2^t*UiudC=0JYF&>WkYE:I(FGPT$;*+g;Xj0$D^%7Ip<9[DZUn*_"#CXsNa/C*hb]iIh&1,?du(NUBe'_FT(hB.]!n8a_@am)sMt+JF-^M0)UJeHh"d=34_^[E&V2*E)'0h%TJCC5SZ/%0su)-WM&YC?^&4tDn2Nd^8IQT1<b+NCscj$R<]PQ:6#jd,c2)rA8Zl\hZ9ubLJ9LQ3DE1ZdfO*d<e1o]lIltp,_e*udO_-"+Id7p%5o+)FN+.66>'cfX0j]`rW"VN)dM$+)F<lUo*G0os(;d66'\ILuN$qH4I]k$7W'Wh"8n(H#Mj;mOdO:"gS,"ZbYI?[Z"N'rVgr1j:%Rc':,l;bbbd3Z'`o6ZXE;*CIASQMEgg(R,gZ+d-8jGhW?J.b"Afpg3gV;PN3rNm,hT`jV:YnV:*-HBG`/VIWAMKhZM)%n1o,Wpt1%B<52@2W:A@Ok^`Wq=C%oqd*]\K#TF'%m0]+n]YsU;[/0R]S3pl"`&&qbh[/G\h#19h+"ro[j09)@A.Zc\5J8QI_[_j]ks*l(dT!=%n/;V&=D8r$Ws()ok\60t#T#<0UaKcVTHc1co@mLUpOjq-F3A/FG@^sD/^tug/X)UP<a$"KW=mn:@*q^V`e0Kck:o"]BTYCu>-*Z&%gf5o0d>;9aS1?l]1$Z^C`Kh+UVP$cp-UsR@>-&ulA5akq^7\ad1+acLGKiHZGY.&SE"-`7XKe]C&I'"-"=grU^J5jr^4b0eAU).?%U1k;T6]Wh'BhC0;0nRMb"SH7#'47KQ$jblm:_D/PN)<9>(("DS#d+i9VM1O4o7ctZ28"T5FP9%_:`cTnpTkCb24<2WO&ViZ3);g@%#6a1=,2+9M)KU*7Clu4>1!'-5nSGuI5nTM4Z1Z\i\U[BSo?=.kjjt:l/0g,6d@5;6?]-56,4)0a6>K5o@7@!Wl`GOL-t).>S\;c;%fJ1,*f@(FL1o-.B\lTIZc#aJk.5e(j])G]LQAaQP_!7GV-%])Ie/h5HcMCTcmH_m,:E#DFYEC5/i_\_GYG*AjqGeLmJ^ga-#t21Y%YV^:>?_s`%,l6ZI?Zc]SI4L\&Q/VD[FJRuHiSgM\.G(EU#lS@l@!,;EVeD[m^;R.:_kJlfAqG?Zk@9:X)rHQO>A8I"l'-tP9#"!5%K(Q,9lW9`c7BI[).`)IkD3eS`C9p;fV!R?7Cm>&ZJb6"-$'^gnGjAF.'1ff/S%rse"cY[TgM3S^&2/1J@D1ZQq.gXJ6IZ;IA'0.N%]ih_)%OPMH4RficcZr$42T7/uaJ($C>BZ>9Z'E;G2HqCgD.\C.`0>h:)CtE?I/H6=TX$<DT"1LQ=8S<!B_>XJDe,91,D=n/T1Q%(%a_IraWQnLF.;F[Tl<fEN1mTN]2)Qi9bTM(ma$,'XcTQmt6%1bE7PS_ZKD^eIZC'GGk6cBG1Wh]jUr;>NOf$)?L=8IK]?%oM'XT*^%:5d'BB>"l6\FqN"@*tuP<$QVe;3/l'lT*\L]p_XaTna=u-91=4(XLW`nV$l;S6"QaS4uTGQ^J]E0<PFh1&A+Q@O2J?,aN$YJkHbe%&CXEJ60eI06?%XG@9Ths`"-@`&Dt"km?EMf*]m=?/KM\2q7a+rQARBKP.O;cj-L?)+b85@J9XsmMih\)F$[^#Vo38A+CZ2JF"#++%'17]*e"V^k#ie6j=cAqJ8keKe.ntu'Zu-i]b^@Kd@YQ8Z)W-Q;bXbQ\!f@8AKjl:T=gD<i*i7iYZqND*dfakcOfZ8Kfig,P'"9BY%UJ<p'7KWfGAjD`KK)1<QdULYCaO@FGL(*IP"BR70@2Z:ZN_<q6d?rPq"%jQ5/sIq6?E(B\@M`%GPX(o*(.jllD53@D#ZInJ`=]p_%"&'M)H@"tC.)A*b%/WV`Ysj8o_WDkqiD-g)=T1Q5i8qo<I0GST%-<'O$S`N-/-V@e7e]+,`)qq[]Q#l^Wu"*l(8>OU^SUseiW`CU%WN`_2Crt?7D70CE-i7krBHsK\78>=/]5J.^CFoPUH`<K^,`B>%*O\1^h4Y"QY[B"EltE"Zn;Ea.,;Gou=:1p\fM6Z`.,'XK]/tKV%Z"S@5L)AeEAqJ$Zd0]B`M-2Kd@rWi/CEX+dQ@pr]nQ0G)<Zl3Sfm:;#-X[T_aTq@pnM%]S#+#T:e_hSKR:2l".NaLCYnbb'3cX>W%Pdo,d*fZ#q<um_8*[;n$Qg<L%94id9`)*pJ'$MLF;jmIS1hW*Wb?(@S`-N.pcGOe:@`3=V#uVFH&>UYmJJdo+fb(U#&=(Yq9\#:c%]/GjeV6:P>WGE%=G4Au@kI9%f=tb)>qUgmnU>qLcr/a62N]nbNUG5aqD;U8!]+gZR!\]Keirf*/BgLgL*.bg'aK65",XufFA3n#"%G$e#<2@?l?(c\[-^,KPHT+*N6]b3VG@LRk<`6dtZ-Upkm$:1-hYpMp<?fkT2:'<&RAM-.P,&>^tKfVaR(/Eep7Ck/l::qoCZCij#%'NE]tF<i3rol8eR<']l[1+e=HHb;VT9J=**^)2PX7R:cuN.R).O<MP9d,%*:kF='?M'2?@]nK#B9]uNEOPD.]/r>/]dSE^_i>-8V%;&^lufsu$1A]ijB9$jc9(>8Oa;IBrD+QQOU3FCT#o6X/VCQ+TeeGrh?">lIAM`$d?-sd,\/d3.P3:0`0[5KQuodX\XWE2q1B`0D9%JTA\DkuI!OqVoDE\+lJ#Kg)RA(S:l9s%,O$eAYWcI-lL(HWeA0-EQi_VPt+rVZldkg";X[":BNVKRpU(.W(:\X!4&)ZmSp-/;oW.%F!IW@Q,t0Q9>$]PMP\4)Co``UPrS.kkCSj62)2J*IThP'ac54NZ(bYE8EAT;+jN:J55MK[kP$RC8rBC$9joLP^noEAUG$phnlh6-%Bb/L`LkecnJf6<S$0_]mZL]D$;A)Qo:D5#!DLdMLLs-q9eREds>m^)(UJd/damd2ZYn8aV%bd^m-4uG&9K<i`-AE;2VaV@g+06tY%1GO2ZFCHMYW1+Xmh*'$4.cS)0)DDSc7PI"+@H%]mJ:cf68ObWI3'CA)9#3!9n)Sr9?2PQV%>&ug@Btffq\-SN;LIB9+Ec[H>)WLi%9$E)F.g;o/TuG*kW7,2i,J=9:#d.J>__McFlt(H`A-Z;?W69]78]/&n4a)*O0`hM*G$o@47.((A*Mj%I&HtIs\P7-<JkrjmR%jJl%UnB[Z,JJ.:K%,XTha[^$\X7t&Ws%[DU#/@7N2;o+X5H<`og7l>jZDX1Tb$HT(h#:W&XZC=S7Ab;SjLk$,7HBn>W&eZf!9<-$t6YT%VbPt&L(e6%N-&^:(8O_gofa9B<f7P1`_:?\6r/b:co<cG`CPb5B7b:B_OtXl[q\4]^\;-B4tSV*Z`]a"YQNptD%^#sR3o%#'p[jY%B8jKafW2GQJuK%lnReu0WU_WR-KmuoMMj%mhLr$m>#l@aLdZ3/e$bEuAP7tMhJ#9%@OONg@dK!b/'4BU]nJ-L(S^lfDg+u5<D3&$%YKY;/&Gfk71<aJ86AW>j2*,'R<J64!e.fK/UU<eT-7mHp+P9WAW:5Z,]54JMUL#D58.;m6=V/\*k:JRgM@t<*<On$#IVA:94(;q_%e9mtF:@o=sof94l+s62*5EVC,C/[u.$*PNj7*9Gt^PY(,e>m\TjjJ4hTHt962d@pOBCL\:\9R%d=W5Z['F%N"P/=kdh*qBEDW,,r%#HSeO`R%+VD3SF4d%6W;`2(9b=_(-d?;!)jojYLH=iN26`)m=,&sH(e_hIm:eUj^_r+kLf^btlmni[)%\-=$oj>p9[+-?=8LGJ!6%:`s<D5_&Lpb,?C9oFt-s6VRSN7U-8&'JiLp`29q)l2Hi\qWk[1SrB_;emlA`Ug+(FR:*3MN=];W1rOb[mZj7k*Nt>IP24Yrm`(=S%C,)]WM$lW7F;r.H:lt':(P;:t:h'(((sp^9TW&bc/NPVOTm`1eofYE=$!p#+N#&_iA"(Nm&2QhF,\7*/9'W5$2a8EqP,L!6R8Gn?%<.*6(('YQ^#!q8.QGXI2`(7%_'>]G[r8+c1l?@dpWrl26Ja<lp3J3^KA&tMi4Y`0<R2C'MN++'-gPt.VKeP%[>"LD&hq<(iA)_8m%C"db("+sH2_X@RSISccMb6a"f+@goTZD$i&3S-eEbU>G[Da@;-I>fj3Xl)_YGHr7*RscjPD$/__'FaFt^**oZ[E"SBQk-MuOId<S%IItH[M@haS2hJ(H68pLRgiF3U58_HOPB\h.FjnYg_UOW\N5tET`[u;"@"id<_fZo#Rm:.u!JD9SZ:fud7$g^X:;j5p%\]UDkX^XT%^U52MBaqXo-N_3_pcQ"Lfp?D><f3R\@k)_*VC+h\\25pU`J?b3R@p+)0[P8t1XFU%D_p-H&g`Y9"SRsB\TQCK8O!Y\71qt`:1iE,%*=S(f7j'ZgE+fU2=n4<rN24aW3^Mi$JeQPK,0Z4<THc1Z45D<01C+;+T8b2@Jk,\T<Yc!Y\6UhGDd3r,(ahd#BUfq:@YD#2StNcN%0P*:hijj*eYYg`KC3t<DV&o$nmGa&G/=u:inJTK<[BaOF<bG\kBO#Fr5t>C_NRNIqcbVNZQ3YTbQP^&q_D.c/3tNVf1m27l3&*H[%j2C0<B1InKXO[a4>6o"=rh&p%=p!K7UE80^0,f4J?>.bH>t:XHMTiV>\;*<X=dp[&X<-!N6u)oGM4n3H"Q*R0@3O\qF0m(PNB`=V%H%t:+p;BMI'g4946"JEm:Q/&qOVmW(>7'"fM!s,/aD`>`p3/7iVhMt5,(5QqUlpSF]3n*$-XJH,1*TE0Y+Pm%,EbL"h<W5">tU2Q%Pm8&<Fa5u)'=9'oKJ7_gP$qhD"<E?XrSh]<]_<7pk9TU;bT3NMFc'FpR4>MferA,ZC-YoFQSkk5:97mR`u9s@m>2u.o6(ah(s/#:%"[UOM/(CrgK'U@RBd#I5'5SL5`_+U?(p/kP>_qk8JN&sRPq#laMh[C,:>p<\iG=&<E+R^Adu,e^I-q,=MUc-=asE3$^23>I,A2Eu%U2)BNMG&O:@Ks_E(=TS<WJOb2kX\Ca0ma;e^-fi9q>.<hkKf67'MnJ")ThL#7ut>t-KJ_*5'nh)*tL)[61_b'&da%/.Es*m]i);R%:/%\OgM(&AE'Y/$q>-ThRYnKtqq+;RhD9sZg$)!t\5=M>G]j7)Yqh^ah6cCa?s3g\W&?C("`91VZs_J0\qTpfI!mug+..!"-^jj"%;ek:m3h%#lKL`\5ks9_aCk]jHA`VF.Fp.@pN>,`N[ZZG(T:#*p#R.b$\NUei3XbneW't%g.O5]LJ6C4Sf*nk"%Q,h_^na;'7C"tp%K)DX4-8NHq*%\iSd=u5DQas8'8#67FYG,B(V%t+^_TJpTSZJ;IrMtkjB`0Dt!cs)tOU4G:LFMl\JVSsSrH`=kO`[%T])YVuJFPd_%\G5:sTO=s+;Q81;>Wd,`i@_0pWPY@_B;]U7S39_<7RagjUhg]JY^7=(Z`3IpbE3Wu<ne<N3Gtibm"Y8>=A%,1M;=N;8H$736$d#(%pSeg9.>E&C/&BaD@@.hW@5ba2]WjD'/U(!c>qq9F/Wc:8ee2BsnnZFnZiS%-'ns8%08SuY"nqdE]">UJeqmgAT++)$e`cbTX(Et2%o38@1UaLnC+$D@0@YAUTNSs)Ud&+cDH\7mV75gLf0?Ip:"fAro3c1'XjgaaXF,R^\7(_0O8@0;%RhPqjh=aS:8Ic+/7(tN=Qn@\<%HX\=8Bb8dtRc/\EWiZmY>gSdgoYf,FUF'T4Qjt\g#d.G=D0qDiV>2]%[(VW#?W!`U.uHXe6;sT<eW1'pda4-Hl7a)i1HW[C;C)K$%#!oVTlUY=.?J["%`FuV8#ZAi?$du)a:(46M;aG_=-p`/gm"e5Hks3VP65Zjp;Y.WEm3QtCF.gP1@H=*7,E4S5rqmbBe=qB5DXOjP%JOWgs=0!UgW%RUC7#p!>UW>&aC!#e9LBKCMOr1KS)06T%7NaNfkSe9S'm*-jHfisEWP].JIWP.^)H[-u7]Ljen1)9cdiPNmJu`^8%,pN:.]Ca$#,Z2;2n&nIB#@dHD7?G+i7b_/l../YpdZ[,5c\@h:pMI;\23j:s&\cJJUi$8!<3Ff]<"HY;VTL*RFO.9P99+jueOLi3%nVFO]`rY_K>K<TN6WhS`bck#oLV((\(#X0u[oouX&(M`9YT\XH?PC?P$PC>>S.G9q(\Hd!cA%u:0lg?-$XgBm)JhH>.P1t@51d@?%+?EC^(MiKG.omd\p:?*S":Z#3#s&\dmD<,ThEk>kc5=2s!M)H5&)Ti<Ye?bmbh`',NkKa$3_OZp1\)Jm`Z"H?..8]AoVgMbil/+H%qg7A;:d3Xg/[`NE^'T9gg[32+p4W@M*-pe7]A((u"6$3WCY$-[?mG.ipS1gDcII9<d-S2^2V\MtYC,0X;shfSq]Qbm,l5ZW$NED9%=tKPI]8jdNA4%1oa<^(uO_6:Mhs/(^\L])nq,""m(>aM+q+g[YFjN/K.>W<]D"FcoD06*0%j/LQ+1=o1Qgr,nqbHkd*]s7HJ*0!B%)1Hs7V'+L[9=I-=jMU6Nf"p=mHf\>nrMfJM/,21;0"d%IZ#Fh#bm:5V>JHB0=oL@mV>*LY((@sJFdR"6+q%6:fm!,O,;'PqAhqo3%hSnXqgT1gUAnD.R(iF%<=oX?^%;p.uU-Z"U&m3?F(B7hSDYTq#+$X)RDhRN%(\?DCnI4RWf0fEa(>F',k!l0g0t^ZS2.1g@fpaLe%;"nV3hlf2N%_DS-2X*,s>T+!j[85G+X%@NKa$-8d*O-W]"'cF0<ra@7ik5qi?8)6C]eS4#VZNI9$K!i<Cj$kGOn\!Ho_>Qa,/0]A%/lL\P+P`FB=3!!$4/))url9tf`K/q[[*.6Zs*!@#QM2E%[+T95WH:/XM>IgrRs+h+#HtCYhuRIX[ln\VUFH"KS)%b/YVpU;ocEHl%6RPF[5!K!#NC9n(d:tQ;=m^ZDou@'-5K87n1],iB[DZ>>*T4:$UFgFoZQp6';Sr<Vq7L`/r`ejk3B[9I?Wf)-m)SF11-Q/_D9N*m%.m4sIopZImheEVkgTR/Cq^MC9B/`bFIQ0CTXqA[sE)DBn7Q:3_[PqH9MgWNN6f]Y,Z6)*35/0VoY2?lSB%UUjUBWDFs%O=0X?LJ2%pQub![fPcI;9.WImedRHHl'M'.#-On#]E+F1#HKdVqTO;"5sss2Vi%a`f/"-@$/^ZQ01;R`-Ke^eAI"9ae5%XfrMT@H0e\*]6l:r%3@tDu2jl#ld13%`hF.3Q4ON;Cl(>hR?of5I#JgT]_$B6!?u#H27kbZr2W5F(0;X9b@er2(J+uqQVZ6)a6tlk?hS:3J6>L*U>7n7Z%Zr"7\N]moL/fuAu+O!A//c@:K*\&qh8,$qK]%9(1F`Y)dcs[D6O0S+\OWVGT`3u,b7P@,j")%U->D);2nDAH:%t9h'@p]1I5^rOb%LVK:5UY5_!i#jFQk,5t2W=u\gD&Y,;KM;]qh-;4oQ(PfE\s_75HfqR*pY,=6%4[#HJ+9<og<cDm@5!FSpF:g%DlG]W?=_74%YVOZ%N#U61>[=(Er5Bb#a\mI.[6+qcgX5[ghCM0B*$MCjQ?Y*'ro[9=c!m8'HQ_Zok)HRRFfF>YH+?qbc\VRf]ktM'VAup#:[fq`l'P$l%-79+s\haib%Cf&+@rSjRg$&Z=(Uld0-PK1e]cQ,i!MAdu<Ug!T#32%o`F/!#>eogu_=XsRZDm_T#(Stk3T/UF<t0+!AO3p5>^LBY%jBi)`_UYLPeGT30]nG"`:)mN?0<,!9r;skG/=FP=>p;1]/)0qV_An<A)f`m!\6ffupWQkdc3LN,A,G)oaQkaad+9rX2]"ZX:k>kB%qpkKX="EY8E._<-)/DZ(*c)e-%5_07a33R`_%LsN-D'pu,;aC`\CTW+h*kXu\D6L,B89-`_jDDs$k=>m/\Cf>$4%j,BkJ8X3,5'Z%>,bT#ft,k/oX^#mDV.RpPb['`hWGdC0en/<C#0lC<eU4RlY333*YuBB[pMJ2OV%<E6)/DYg%B"GkP*^_6bIBPqC+>^kI79g=o.qu%cRpeLD`4m;/Xl$:(E0,+,=^\Zo$.,JnTo+;=M$YDffs)C;0t31aSiD.f&H5E`'<Cb.BuGdltYi\k9"3iqT!'=70\0K;uGgMRABuY%Me?7JNW/e@r%=N<Z97&r0R^msaE-ih^QY9O7pf@j<DM,Kq7$e;9k0LaffGKbT!.e&C=l#Tf"24)ho^O]Zg+^&[J)5HV>d?/oe)j8%,^QRW=-#93)Y,h3:9sU+D#?>YlS5R!(rL7/\(E]Sd9,QT\;8nQ<MVd4InM.5K8PoHe`PT+^On-=If7,&[>W9\r5pFKD[UL5/N:$*%AD*5-o#;GOcA1*B_C)/geI=/o=nY+*_[B8+*A`L0]'qWG(EXEa/A$#t-.ST1SK1ON^oQ=MH5em/W\YEc7Z_oCD^8n&<Apt*9PJF#%k):p0<3[XSkMT%XW&sFBWOnuO\X/oU<H>7Z<i<@%`gRBK=/>g-EW%+[%t`aPa\JcXBK@OX/"Q1`^rcT[_HU7;7UNDr?P<5*j-joZ%H9+ENq6cL2)BNmG][p%'n.:e]>Y;babm+IrL,0%S&9^_nbss5k(:Ip9`V.V6.G,6E=n7'HJqk6.s3<e\p`q3Vp&o7L2G!8qdqBkd%nQ!-sIG!2m?Z6A3B1c]fHrRYEmP<J[Y:]\9KUOu#f.7BpGG9AI\:Uin-+n_5ei<%ba((+J)>q^L5((.X$s$9sYHfcf6%!BC>(`B,%779/$nRMK)>Q-L0jqI\o3_B:8B<3*q&S*"_H'[-0S<J"/#fCF6!*?_E(\RP#d:OGK=[+?26MKMq3XJ%D;t.2^W`*k1:I.m6A%r\8%GQ(d6KJKTtK[/iL\M=K\C\287n@j&Q&g9"6Z8S:jFPcZQW=eI199UL5<13r88T5;C:B;Oe4_:IVnqH<AnQk&uE*o]kI?;u;p2TRJ%.nEV.hEG(U;\6PNc$jF)^qa_+O6O)N\/N":gId2jcjtr%4b0WJm7/F,rWXr!,+eFI,4GU^bMOH>PLg<im:@chWJkK&%O8U^2ot/n%jY.P7Ru2XpX7ol0H:1B?WN=Bg+M?u]V\1m/Z17qP&LNdKp^KkXK!5<Fc:$C+,H0L-I"8Z%i3'Fl%DK@pMoh$iC/!k^XP$R-jWnKr%pa[17B*06k)WlV7@uei(MGkRYhpr:ha&[]>TtZjfB\s2N6\"pST)?ji1IlpNBk*4+)HA[am4gO5PI9*e9:Jo8@tnihc$2@R=ks8g%K\[)iEHGG#m=KWelZF&7jW:aTij8RZh]V@:Fur:[!Uo\$Dn(oi4.C!8Dr=N*^B*s&<rEC%&[jW`iAYF/17.NUi]1f97XlYd!\Vb3%lAusQA*GAh!5KJLD27t#/k,f(?Da5iLWO,lcY6T?8,nYjrBh"ZQeTpS7PG@B+/iE+C+4QpG^];44(sjSL%k2_BhQZG`6Qp3E5C=!%(EG;;TU65GluX2gMdqnuhDlO@[Pc$rHj]S]iH&0UE:bj-8!.pc-2i*+I7rn?$tF;MY`+W!VRq)$Qnb51T*@p^1T":,@QN1:Kthpg%EA0Wbl)a61dCC4g)+&mn0N+BPAClG""6+FJ&JH&(LTYSD&UL8b5X>tgj0mug&LA9.'$CbI1b$thL"LkO/J$1<T>Kb)cjNV:P&.-S%a0N0i##)\lMrM?O]IP/!EDFf!;G,`Sp.8.QRM<8Gh6AipglGP7;(9Z;(LtD\^r78;MX'GBk<AW,^\VT@f8o;``U+lKmVVTq>[\i+%!W6qYMGqLPN1FuVh4,V(&38ndUX6o%VT&q-k8c*9("'@M6n\>0c8DE$$XFYmWV;U(YioWW?J%YYESA$\02@iR938I.B!_$$Eegk#%FpQodk"I>`Si0?RBPmHt::VUoaU'cC%\a\c@iXfN=`"43S!16;gAO8*^%i_E&A]Zt$V(F`1LlL."ai=;QL:(]YNTB=W&mY0i7iY_%n_bk>9jE@,7;5QH4bc_lD#\]m"<6Q6#?fP\0GBL1>g)d1,J"k'$Y+WkmpN?6j#6<7!5e+Q'%sN)/G..?GNB[.IFpXM+tFD+hdagt%NlTYQs4!Stl'LWVL(cO[@(58R2B<L"48*ZL,kB@316[#LBY-/t!!%4`;E`jVP'`T0m-3^)iZ3:X1.>6fKK/*HeuQ)8KBa^bJ%B(!%Mqdk0hEi]_Y^hp30n5C7A"MJqhm8C`PjD-1fHRpZ([T1gF[?*tg*WO1\Z3(G).juej#S8BI(kp&F3=2"lp+2_#Y>FmAGE.Gm%514%_.a2c=,r7h^-49cZm8N$aQeqmWT`f\XS#0^;EAL^H$Zmp^oFX)Qj`@V]).@P=q<CnSmFS(-ro*!2Kq6[T]#6F)$QqQ&d/<q)#d&;%TTl#lm?`8R_=m?D>;4GP=ji;W$4?O%;&`?A*XF!r=+O)*k7t1naBM!*bb+5+'WI5[MkHC[;'(W%.&Ne4Bd]RPK>d*IE'g$dWV;U!%XhFre[U@"YkK*$Eb[N5e$7e#HQ^3^]O2]s#eq%;9;2Ji:RnU1"Qcr/*_!JSQ2\$@AV$O7^-mAgm%9p4L'MrU6n;):NF!Q[:R*gfV%FUJ^iC#_C<_R;,I8I(@No#+eG8''lS;jb?s#C0p+k1<PB.e,,_-((UCW(ZhDHbL>3V\8/F61ujA68ljVcGNYJQ&c(p=Eod^FnM)<%l%[cF^#\t>UcO72iufhX!.;1E3&cW77Q__;%69PWnjMaj?@lORmNN;J2ZG1bOl*I^`W)H0EF[VRldr2/8ib6Fbp!`rJ'..70Cg<G%0/Q/03M*cCIr*$g7AL/]EMRBFgfG2]/VlrUcs]lI[57&p$AZZ2CNO[j'16CeD$".^$45PDeT7LQ*7V:0^ju5N<dAVce8s\GLN<5)%7RsnOW1]HS,kJ'E\1o<ZJ\o`6%'_4S?mJ"$oTakcNmHBI!%>Vs'slOOJ:S4lni=_Wb,F)#\CkTWa3X/Q7euBeWPEI*,I9!brk`IF%+@F[*Z.\N*C3!X+0Alehc?iQ"k=#_<6so,>@-[LH5qpe?Hit\7<s9#PI2[]213r<,<tsDq^qNGJ;='B@7Ohc^gsWmI>U!<O`_(%C%)NdaGkQfOiWQ;O@'I11kfj71_pDr:&9L"FJ9q6`^\]6IXpF(3FN4&R93C@iDKqoQ$UmlSi)<`7&TP+<N$TM<Z[!Ma-$#$iap%uj'%?(('>+YCAKN^l[/Xg,Ta'EnXdO.C]?EO`ef$0hZE;Uc$&cP%2+%WrIpjdZ@8OR%W$Y3n4iB!@8;'8aYFQcF;Jdeb1Y'G?ED),';k%Ac0po*AcFS0p4be92dmO%bk.[HFseSoc%G#E/])e.UX7l-Qf>o6d%%]Qn7dAYk'pIlgpXn\/.Hs]b9fqg7^bdfE/H94d=[2G>CG,%HplWEQU%gFrobLi/(022Yc%40[(^oXJj^H6J"UH]M5FIKfY#sgs5b47/KmukH1qUZ/Ko+J/7(Th&e^IupLR/P3X8)H8<i\cHiQTu%nR2TXUs<G'P%ZiA86n*h%cf3uGCC7<C.Ok#bK!pu"G0!\N;^]lpQ&])c"@bD*kE0L,?Hu+0YWseI-I,nC5n-1UV[YD)XVrcd]QP;%m$clu8[P08l@5M%W$0"h<R!3Z%ppNp\KpY$]uVuP6fB\Yjf2H$#N+(u,\f>Pl)HWng"j!:*J3u1Al2-84pc'k#[tc,1Rr"JW-7b4%_"pT0;k:rPl'[-6[69f$D$Hn^hF@hRE9r=jI&i_(@*TM42\XB)&fNe*(!/4T.DSE3"S2^9NEkeJe5?)R^p>i5/i1.(=.IaEfa4*9%,NdUuP@9.X`'^9!\K<MIbfR."KfVlOUs^sMJ#s:&+Pd-Orh_;NM<(_Zr^L2p^#?:+H8#O0)6^K'EQRYmIq97ZoeD;DX$>I`^l<Jq%\2m21WEbg68,fBqb?tpc"n`"amJ]Go8kSA'<6eqTgMf92'0cZrGlZg<g<'GQ%u^=]@_^OKmju&F61>,Lj-ocB?E[XY)p'0,h+$c)%P`:&E4:/L\I7hR#(/pX=[b2@A/:\f4`^n[dMN$9VU]\TtOll;e/*7,6j9lXo!p-lKNBU_"oTg?bFGFXMlU73S$5Bua!<mLME\Y-;%GEEEn1*S5,KaRbQ&TXXAH]ha^kUr'@["f&GI%#u_W)go37tWt5erRlp_/Bd0YN2pU5tsKg-[''`$%,>@=NX[?/^0B&o$nn?(4$pf%h29Z/0L_TuQ19CKP;IAUbA9E:$js@r8r-'/3^0.T,bm/X]NKG.A+#kD'HFI>-J*)sFq&W$FC#H@orhUgZ^b*7!@1kjQV"epCe%<6%`Up4PN6:mr?:?tMpV8%l9M"n4jFdCN[+Nl4=sQ]agLiTZj:'@Ef=8N\_tCYi4+<0<7,!P2I7rfXW;97_FVe36a<pCi<O<=^0[Vsf%@]u2WW9RmdPXLuj@KmPY\3IQc4.&:$Q>L0FoMUo+[.C"$6`9V1#lbHKU$@(PYXLU%AtGFWaY]d9A=hDqS^oo$q:hu)LEZ6#M#s7F%F+#"lT(YnhP,4_n#M7$'$d+*Y%%RM=#U*hQLiMs==<YAM,d!/nSV_AKOaYrE\3)r\CCp1SBD.C*oCQ)33?;,Pd[_1C_2R3qklW]c%n,EaFjdDc):6V_J:!W@\CHW-Z`07/iM2OM=0+qPM:\0U3IMd_)r4:(13X(h,LY*'7A7L;]ibJnD8@Y<'MQBf.iERsh>dp,U'AkgQ%EgM.uB8M1jY_%J<GY!R^+<=l^Bb:V,6Ws.p'14dQs1Ef$`:C&)rMf4A:)o%TDF9g8`8EV^o4G@l;>3[u2KEt=TCtRmT=<J=o6V6I%jp>i)[R+^BIW/[J-X&4?*tub,#+N$=gi\6p'`a6J7^m*sg\Y.AZ<@n!Cm7Bl%0=k"9%Z_qg=/TPl@M?9,AWDi!rtB65:'W-V5+([%400DU#*urVPq?Goki[.,9lUbG%YX'`apq#>pGK#\j3ugnCLS\-&JXq=.A=Q&?TNmZmmNWMUHU"qQ8lU4$C?d65QbEJHpeNh5pq+J%k<%RdHMUaZ?P;dB:k9jV"cnd6(B@Q2K$ki:@39So)t55]c'(ArmkH4B"X[ja!$/ltg;pDs;#dcG#8UOfN@j*biTkOnJEu-SHF#@B%>qih]R@sXXKMC6;"6qRcfk6]<FKf%L<lHtJoOW^3]`<I8s4ed9b*#>T-qF.)Uqq']7u&?&"+#6j_0'Ce,!f=a[2Nc`(#pO/"I"s2%48M$Vh]?);9R\U^"d:A^nBD*"c]?JGh!\L))mP>Z/!00"iQ3/'GM$H.*]13XV$nP4m9qed=RmjmgVZg`KM-Y/$f$oV8VN_Z+N!KM%F_rM$EmW1B\R(0P(1_!OJ!5J8570<]K6eNt>D_X:M'BFc'Q.L+F[sD*W83`A;eg+oe4An7Q;UX\[H!eR7$BltX[!1QPm0NATZ"j>%Oh7CgI#:L$r?Tsq8b_*7q/MhXHc2P82rB87AZtQp3=R$$Ae6,<a4n='"!D*]Bp+:Fqli&b3eA7CAfI'Ja4Q+,77OKZ1U2%0&pE9f%h&l-_IV7L``sYZ-?CJJ?`$#mm0ogX5;C$79="nXoZF@oH+('@$PQZB>Jh:fsJu%AhCh-=Bn7in%&70,U:X3fZ_5hE\?-diQ#b>29%lJGKO2R$.0]\X"8b!:Ro/2[3Bjd0BY&#%!X)d)Nt!/oWK87BX5W`Z)\3uf*S/63:C0Mp*KA`=7h,Q*q![d8;\F<kY:rV_Q?QsFR:%ididpI+;,@j(g)+'%+F0&g#Fb$K/>nJ(,C[qUfO]=SQ#p]$pk&/-Om>R%Tl;BO3hV16<'TMg,=#5Q1`@0/>S4+9Ag\=K`,tZSYqh%1SH;6m]P)3G9_]Lj,sUYI,f0$!m$n>d-K:Of3hH3WF^^nfbW81r(#Mc*]C?Z1%Ob94`'*fCn\iBqf,(b'p6ABY.&Y(Mj?nRA7N8?%(G4mX]c&:2YIToAjNQnj)L]h=>mM>8=IXkO6eE5f9F;bHh<01p*#lmFA_Xd%*-5bbje:L8)E!.<%NK*j[NFpO!RF%:S'Y2P3!T3J%D.81CNf"aL@:r1/TP40-)i>eAr@I/OrC)d*J)08#J>+>88s'^pTEo.V&;(2(hJ2Le+D_$H&fUFT*hRg7SA:2/6#C4Z!f:ktC7s5;%=tr4Xc&3D\DSeWUT*TU&AMRJ+"pmCRa"<6@FU\=@FtuY'#*&5OOR<*2P!7:uKP_"I<)W/+7H:EXAJ%!@\l'?r.#W'2)(Abm<ii@m%?#6MhKmX&@A9ZnJ7SHA+c,A2<Rr5#MAV]>R;s2-+pQ-Ggju^Mdf_-B;5&GNTc$Y;F_6UrhU\F7i+nRKs=MnAu?F-=V;QjMP@@mqs%Q"8SWU27c1/K_5]eaVWG6TU-h\/:Rg83MhR45F%&$>.mQ%hVmkX6WWGC,LmUa3sBBa:p[j*kS('2L8sI'\(/ibn=V[_dV_;?W(BQ%W]UHeLnfC2kf^p22..[GJ*-W#(JKGo-mL"Z[5Qo<"Fi^9!lu?&?aJ$4;F=!C7FNWCN'I5S+ZtWQhE;>q:SY=IQ$$S4O3BZ2c45O+%eg"0H;O;h\m:=Oh,X&jf/M[mGTguu>*fo.=A@$@n!QiLHgI"ZVm3(7q2D,)H_#1H-.]^d6ZE[,L)2tHb@'tVad9oZm`R^)PX+Ok"%Fh#N%WX['18bs\/'kX]ZZ32/#=e6ZIW,-UB%,@,9LNn60Cad?7LH78kVpV^"_Pf,slt$;BCfHR)=CoD+'*s5+4!+B)9%(0'&]^M4%;V&mtNXjDKcW9gA+t<S;NlkQ)%@]D.`K&C:)*^HQ'mn[j/^-m.8L73lgJEfd(D8b'@/g3:9t@*b!h((`QKC(k97IB<O6^1)IG$@(%+q;q7+7r)[/J<IJ2PSQO7a?ENT+:\qcm-<:]0=j:;<)_%`tpOQ5h^9D`f5*k=Cku%&`J,0lSb?HWZTcIOg("tRcJk*)2(;XcfQJ'%@Ut];%[6+U_>C5();,-^C0t$?r0A21GDQL)cQZ''Fk/H?8m=PH8G%nR^rRM;c>K;K>[5:io:K]VDo(LiZXgM$-#NdAg(r>Pc=&*e%&`8>`+i%Nop2(m@2(9G/;1h9`o\2`FGVUWBAso0U:(;hgEq[dGs*0&_1?ZqKd1R)>gZ&JPgKM1s%CHeYDEKD/2Uk2"q%^juj]lf4%Tf+B6ku;Z(3-%7KEYL)?a4+kCd>$A2HgL9(_.@-qARdRS_bVhtl>Z7o:NV-hZ$5^iT3&[jKq/2IAZLP#YW6plM:)K&].cFcL4t$k%@to?j/iLnugT[jfDiaqWBnLgScro"G5k4p,q\?^Y[_g%pcG#U=D_!C*I]!Fnh=tJ/4c#otM!<b+9\Ur0S?/82&=s+"VV*BX?!.nc%EGfQZY#Ar]iA>A5gJT-"'hd?$F0G]&A9PBEN"K7jDp]&bq"#7&AJn>;BE/P`c#A_P(/MJ53$R'&ZPjU*XV0-CjfkIT5te76k<'i'%m^)<Omn6:T#TFXC;Z+LNcAmmC*PsV6]9-C[m+BS8!UFl6c;$RD%"9Nf]i;4,?A3gF#jpd@QtPdX%poa:8$-RH3o;0EVF(m6gRc*-%?,4-;)&`#]V.d7N>g^j2]9'G^"&A4X/KFkuBlo)/%'>?3G`'eFk_/9]+F@=)D0Hnh1$"=ppBEn];TS^q4c#5_*LNa5J]d"-hN3$,%6%j_G'0?2?UKp9:RBrRmYa<A2luX=u-o6s#q^?Ce'Pr]\LYT8Wp0YuHJCZ3l2B>F/-$h8UDDTp(3$$*mk%c$!RF>$<Oeq>,llMO?%HX1$sfntd#(;!QuK^6YHN1S=mTrLO!b9euj[!WpOGB>:/kB(YBN4M.,AFsQq,LHX?KPiPkU+l%34kE][QoPeWWr0.+^6RVHE^IcV%1-f24M/RNtccrNg:**<#6ZOr"=_8JQec-[gjq"[noo+8k<Al^aZtIc67P-B7$4Y0Mm1>G'8]C<+E9SgH:]6Mm)c_QN?3s7.I_$1u%`.1^pMNs5`ZdpZtd?*-crij3?Yqi^!Z_4MB"$iMk^.@RlEksPJE#.&QMiV+je<$RP9*=8nQO&l]8qKjA8E);Hh>%;20#@q7e4/XD%"/(<O[FujQ8n:[2TX<QO,qL8\E:In/>fLa'h538)a^Z6[$%t5GPY+o>!+kLTq^WLZ[)1]\[jV!REdJk"F$Ad\kf2dH[g1`#A\4hI%VHYOi2+T*/j8'/t;E?)UBK-T)A;XKC]N$)M/@$Sie@8h2KFQBk5ZM7]Q((llbkN3k`n7=Bj'![+jMNq&F[A?,Bj+.fZGF%GGRe%)%Y@1^o/XtA,gn\^IYc0+b!>I,pJ7N1TUp/5Dl8N>[M1g@0S)_Dq_)=u+0=_4CToXpp)t[*5%>pI5Lu)"$ds<\Q4S@l=40!"RLbKn7%EboEJj@4<["n"JX>jc1`;J3A`(lp9X)P^I:iC[aiRfffsiYFSMC7)UU;q*:*'ZL7-c9$9LY]QN#D<[#XZNMWY`ISIl,!8q="CP8k%YedVtZj/oO05)9!b+\)mB=+]oP"I>G3[9sq`G48MS<]%cEYp?+LVkG0oX`Kh)8[>I&X9AR`n5hafD?au7U1A`cY1#g,rhlb%G4f:%'+Dnq%:CN0)6;:?1<?mqq@D6>Ta'ZDF:#E#Ae6hp"(q=RKcC]8&pGK_p&M!XN/q:7eI1Pj9Tegf$V0S+j-H&s)"pRqXb4pPE*N61%XL!f5Of\Nh\"a^Sn3T:=A_hS<<9JjqrRAV<h3#W_*!`M@5Q3^LW_IQ;U/IUDQPeC>5"SUPFfI]CZ.hJ+pPXt^N-oqCTmf8.1>]06%X_N9b+0cS+6,C49_J^`S+\PinY5Y:P;FAMOk".V1#4:\X#qURlGCYfq,6rE8ls+P[cd$Q)#)h80E%UJ=PE"5XLKsk2E)oLfi`l`q%jm)>\o1e9/AlIk7/\^ms0Ym=Q!df>[YC^Atk`E_&U^%jF2rR.GG0^(.m$pf]cgbFAiTU8tlsq;D(6+C#Z;QRV3.&,%)eQMf,?sEP%kZO[>ljV=YFGi*>QhXUl4\F]&2ot@eaLis^I*V,Q`of7h7nKCrPM9TKU*7'18B\YOCNJ=\5uFg%/8J$b@LgD$`nk`_9HR[r\#0Ns%1LKq&\NOjS&N9M6CHo;kWVGaSDGRU`hMBXtEc04_!+u+(;"6h(5,INl"W9DJD)QMK*%iIG$L,*j@)?9g-")FcBWT)mH>\cP\1$I"%J[q@ff"(3tVdM@5*Hs.jK>]W\BgF^U]:Q9?Zd6;?k_tsG]`H\=c-fp$O6g)a[B(`;[C'pj*(=KOq>IP*='ODBLN2%m7FNK@8eUK8%Q4MkB"d3JW9R>?p@kj.ZE0h?K[\IFaAsTn'!5`eG5Ji/WXn=3L(S/BHb[3N]9T)k%nHbIZ8R[P&D=,l>[M_TESN\gIf'Y:k'.tbP%c&Bf'[ZmGG?:7J#'G8B=K*m-3*Xq:sq[q48g&C;Y*M+iT2"#,6g2mGUQn*!QI+@/.lK''*lZk+S5&V+'8ibdLF8Q]?Atmb=%%:YV%a"g!39(J*tCq7$?>V3Ho&i.\r1fG#='#7eQLcC^^mT*(SaPuQ$'iFY?ROa5r5m)]Zc[Zm=n+?sW*\2tt9kN$"oEYi2R>OPn#gq'Q%+?;`pV0ZYcp'U3*qnkh!FI;Va`MciMFa&PR7)m1%2^jM1WP9KIA@N>q[kpH]<Ctt-H(d#6BeU3U0VH`1+`%B;S!Efj_qb>si]GrW%7-J+$qM4G%<AGPr2UK*A#+POj_mcs2'9_=1E@QMnhqIQ^;V=kfH5;ln*gt3Hk;;]a@WmO-j@2XG7[6ik6#r`hQ!uh_;4!jA/@j.t%C*TG8elQg;VrsqsB2!/A\N8?hF!(C(=]S7-NP#TcR4th4(J.%4m/Dit"VF+c@rE<Ho\-eg7'f2*X_SM^LD/)>on4Kr;<&e)a2_]<%CsPRc,KYX\c,[./M<35VC%^r?RlaSp+:Vq:L'YimPr,HAqipJ)q8gr$Jf2V8fAh,sh'kpD--YrR+h_^_aAeJb8X2<KV4'blT0CoP%jf2d*H`Mh)j\`CbKK6KA(s9BP5'daa'LQ=UD5PpW:,+#c?5MJ9Hn^_0&F:m$,]hVi%Y&)JU""iViSJpK8h;KIHk29)*Q%u)pA4d&%:21GqM5Bsn&P&o/&5!)7BT#k+]YjR^NJ@+Qg;pC\6G9FgGW$Osp0+n4mojM/d-Ajg$9imcl6(j66s@g<cZp;ZEC<olWJHc\46Z&4%Kb/G#XNlUDC]tL(5tN%\G:@ZRC"p^uL*5^U<=SZAlONJMp9=,hR)`ZQTtt(Y]O?,("ii"k4PU4YNl!lh0m[_A%(cELlk#1p'`^0X%c`Ogugf_XrUg<cElXMCE-J&7U:&;9C$r7'Z]C<:i]tk<]*Pl*u/H@h`5:IDo6OL:SpquH?IsP.tH8EN)<o<fIYmLJ"&Q@"+"98o#%LI'i6<]0?6_&oDJ@G;V"E&<8]QhpseF9I)oZ>LZGIg<%5O0Xp,VZ6TjH9FbEDi^7K0u./pX1oSPOG@@F*M,.`1ZXRn9W;`Cl@16U%peuBWZ\6;#Y<>Nj#VZ$]^b#OIJj5O0B*5\&g5O,I^2j9r"FkOl^0CR)ib]G.:%jB5YmE=jfIIj?&?0TZD!H4jBW_=!2U0fqNe5#u%$(/K82BdZK:??*BZUif()$%srH":G'rr->:,elD#cs:2#UB-;bQM(q/8Yt&'IuB&s#sgj^%=dU/nRqpWJ3UUQ^o$`g;YfNP$/Z*b%UMt$ZqB+*;bQ-!,&"s$n#h`tT4_FKaQ`&fGb)AA_!df@0BPR$,nmSW.N<'#,QoD?1D^$:LM'Mf5eb>8gqd]*LB+K=<s8:(^bS,_6%T<ebC^n533?n12&s3$d@&*e?o@*rJL)*SKZ53dV1H\3[JfEV8%LKnW0oKQW"%^uWreW\oecj]mZdh)Z>7-n?'eWLdM,&qH%IdMF8%;ZG3a)C,.lNelRGZ)VjFF9I*iaG:Q2rWkuVm;jq7aoUC&_!",H"NB-U*t+H=TlM9gNWne0U[5Nf3=r&\PnUaJF'#:KgT+.,'Ip.!%hc^dLPg1*QQ2*rp"F'e0D''EuoA#&pgbPohd40kKaqQ\U';RK35;EDe0Q;jp^c*Q9T-oG<V8&FMApJt/gR3Xq")4i6[T\)i?)[Hf%lZlBlLY5LtX!Zc[/>J+,@l%'O1/SZTbm9fM^MgCAE0Q]W@B\i'U`M%+nNd6RTjG-.(R)qA)B7XOOAc9t;uXE')DF_q[+#4;h.m!I%_*@Ut^V'iQ;?S$5)FuS82*i[ObUf1!;Ng?N+DDEYDqnduo+,.#Nh`BeN:3re;WTnf#,B^UMk(;)`TT/2%49'84*e_80uOS)p2Fc:%AFrGJ<i_:g?[O@9C_5k<XN8=lVM1J7;(CWa,f@2@2gh3QKGc=@k`FM/3-UDb*;`0o'UHP'O'uKa"h4"5TCQE&G1Am!p3l-OYZ`'3%R?#K*66F`DneQH*"?o#LG1Am;MV;OBnY?XEk9]fTBt,FB79P@G#Cl<,pOa'%Ym?KZRRae"$\cqtFV+"6$\cqtFV&&d)\%\G]`p#&%66F`DNJ#<#i<]?@c;6K0^%s#ld&bI#"E>N_?n8,>@-Xj>Eq*AJLWGgWeA;%_;doOhc0:s;:^@#Cbm='g,9u*GAgAIW`eTar=#6$!%4@M`LjiBuXE-2M`CRSOO&<YjVd=rH[;"foQAkDlp%MIVqhg1SlWIrB?Z@>#120Da-?d,jPQde=%eSfCUm!e`W6X$[X5oi?XN*JQ5%6T)'JE&!0\W]J4@?1GW<*s>$!l6'\\qqnP5)bf+!`Y-N_ir0tlQkre>]7hI:pRlS.Co%rGS\bu6#4$?h8@:]BZ1U5:SdS'Pn`^BN%8?T?p<pZ$B7TSlOc,('EaZg69f\"kdIgig]1!<iDh<cGfk7CeU0.[uJ=7a*D]#hQrHsP"kMIY=)\tD>De@_R5(gg>pL1HA@_"bL0%n!/.V<\qIMO'&[/[':!3R;YSJ78BeQ:1+2&"lt#'FLd<BIY^cKU.2\oiP![dGq)EL;aAZf=6b<fZTd!3Q&>>K]_VpR5'QF?fOtf9%eEm+N%T<nSpuLN1[uVb`UCL3+b;AL6ggM[J4-=hl=j.f5W57I<*QjRAK+@DPfn)_,KWD!G0U@d(@5htlVA)"QI$dWk)leAdFb(6-%-*tiVYaZra%1+!V@@-&0<a;s6*\kq.KMC$9[^RZ>6di"1f-ca"ga;kEYU1Q,@Mb'o'se<a8fQsZql;1o"P\>aeo*G615L(rmmgn9%Dsq<N9dd0cScsL-K5W(,A+f#1V`A#0@;9qiEIE9iqtg"$Fq3L]G0O^0'm9a"):jfulo^`a;P/.D):hr#L,Is7So&$*4A6Ot/u!93%%5QY8IC1>K`U%^(BOANB8'r";X%/5F:"iYX'![%k/p@L"846*U#E#i'3\)\U"0".+hLt:t'GHI35#ffa1f0DkpShEY>F1P9#)TXF%r/Wp53TkiK_]P;Ef15711XeDC485eD!\*BU:4Z<%LlVCmYkgP)^RFp6i[!9%78K26S6\]r7hsh$fS6\aqE\33*\bG=8&_3:5VAh;%Rq>t!j-(Q-e\>W8js)p^T)Aompi\nK09f%sT9F_O;+0dGC8YPa][#oCRiT(1.QSTtZmP]TnEFk_ZuP4QnS++Iq[?PFoqV:2YHZBH%;\IJU`"dkkI/h@:2?r;`$\Rf`p$2VR*f>?7fq.J89)Oifp)(N:%Ib8#1S^<JVRN2FlD%bJq!'AsMDn_>6e6A0o;4k*MH=4HAF4"O%;^j?]U=kD<ZAupkFtsp)I^.dH`GH\qc.CQqK)N;[FW7Ujfe`j>j!-1JI]S[)-,JZ[Z;*ck#hN2-YhH8?Z[B^fm%%*JjZ2ES@9[qW%HDe-T%+a@JR.T^n&`!61X`#Z2ZN<';q.HO3c0nF:f&RAjb6F:Yg1&3"0^]#Lqq_hf;@mTrGlB/(\0jTb5]>"7i`=@gg:WhR"ais!%h'4R,3&c6o@p>Y'<F025iD1s0M^;ii^2YiP)QeGVgn(U.5j:#4#Ct6G_e7`74^"+:8`f[<?d$H"Du2fq=uN1&T>CqpQ*RTnS>F6V%0P5,e$N'IWJ5^aMELkhd&&:eGZU`Y]/eC&r9-gCle.Ss_;1!1hc62;c'!H_0\&>P>9"7D?%8ADD5+L,043@=87u2oB#Zdm8DLH9N%3U&44iP:=;L)[5S'>k[LmXTlG55rc7Ap=gdo`G<H=jWo;$8Bp!7o%8%62e4phd\?c4H$J?"l(#S7Zi`7X1RSlkTX3e**5\*3;a@/%_F79>qSS`7`c#S-R9aafj<q(-QLjm[d[=ZV7^tWo!A!ruhd"cG_DuEs_TeXd4@Pd\\+LdT,;gZ&5$)$^:]>g*/KiXk3M]+IB`g(6%]q(9BIaBF=OOdX_9TcA50FV\@lc)O1e3?4aqR7MNM5GCp/D@MH2=$`>nqQLLoi%1Oq?@Bo@OCQ^rcZkuDhSD=hLqXkZed37Pd1D\%s(TQ(Ui/di"G?Q`L%f'\BC,409*$+<m'p-T"MP50_WO)$$kZ0WZ4A=hVY$-u)J6833QJe+a:@F'eQqMf:r(h0%nUG#JNS=oekGCZ%_[L]/N281sIb2L@r(VdMLhc8Cb0A=d&S<`N.HrL*2AojElnJf%]7r:LM-*nKDjH6dWU5Wb1'D4A+,_YOC?`C+#Mr/fV!\gQXD7Fp%]7FJH<]/*g01h8VR'af)CIj%&=/)T<8EI"Iq(=M9qW'eq\W/`s:o(L!Ts$k#7iI(3Z(!ufNuqn^^VHC-FN=AbYf4S"Kct.TTOgGf%$>0;^fE&,R>eo(Y!qqQo",r,LjLW=)Ck:m^dQ+pJ)l44Kcc"M=e19#7IU.@Sg&b?erU/3fNL5h(0%GOWOrWn.[3.UrQdp]@2<j)#%Ws,iQl/@Ks/p7hAaqOj.FfIZ51b;i<XR8;k_VX4HL&G1SNKJlYijm2JrFm^BZt_!31U];[.A4lVA9f-T&Sf<kXS_FJ4i];i'.lD`%n]+Qg4p-PHluq_;dYp5,<:6KT67@Cj)cMFt#%l$%h>F$:PX)XcBpWbOT?V%=*R"C<0:.c0]>r\I7Rp'h;pb?P\*]?Rpbk/0^&hkC%XR,s:$+\lK(8:_^]q3DcqH32Nm.JSO1-u`Fa6-dTo_@57HB,m4)in:EZ4TR43YkHV5S`IlMa='J48hs-4qZZ#+YA%(qjJ#jc$DO"%8r*&ile-/:,Y$\`TP1k>!#4+e#2d!+#Gb2C$kuS'`.7PjJEfI,K1%st"@_qmK>uT'$=6!F&eb5fK`'_<6MBPE7o\7C_b<VH6]O.8%9XUE^(q2;mrDbnRUJsY)>Xjk_\bl^PjbRZST+-c7&GE_7WL:aC#ZHG*>+TClAY3pXD%eCQ:MEfJ.]XO_dY-o\+PC-m>P`rg'rqjQ%`hpcI-Js-ZXNLK5;r^',"So\q.`OZA%d3SOrhK_-I6Xo["A2RFfYf5*]9A+H9U:oiEqpYi0oNE3kK5@,dL9/\@fCDr]UMD1h+$u3%Uj]fN5&Q4)p0Q2cm:qTc#Mu<&BNJ[h\g?N$on4JJNVtDEKr7.fO^oj*P)2laM:E0/7Q'n8lRi*VrTh]qqurm_i\-o33#f?%Z.d+)%`hqB;6*(sW@n)Mh6Hek>kAN1@5hFCkI3+HUoLkai;<sY0=!!Ej^QHHt/3;.]bi?MK)ma<[lapZUdIF;!48^j'5+fqtp$R53VR"&=%XMqoLE^MC++eK[JeN:]@#`-Om7ZHujosi.eS*9t4D)BimK=mS"W6YYRHG%)8`\d5nk/"@0hF9=o%6"CO+'E<BCug6-H_p,U+5]2!%*.D$agdoLibD<A=Z>Q!A=n_,jDqe.1>0cN?0$:'2k707s^FP^XDBSQFq\!G2bQ-oM:A6'S'brJuqn.8OI5F(%)!19:p!Ec-Jac-,%*t=<gXQCHmI9b3ah5<G/Zt1S`O3a^p[F=.\]Jq1j+fVVEotqn*T\e-e\u1]W5?-Z"0[`7/bbj6KS.Sq[T?-Zr3NWsX7h&X5&'9RJ%HW1JT1\.-oI)hlC%'fSTYdIP:g1Z??<_R";Ba;L*Ci'PdDs,Lc73D,P]SEh*oaZZ,gY,,'Dsm2[cQ;9kCe[O>kh_%TXB=C.QK12L%VTOY8HdHiA[`,6/\@%9*)^b#N]VCrBmg7A=Eb=Aq5@4l\4k?YE.$mB:SJj<>)eA_7FYX)BY_bLbL%s2`@V\27o;uc7c?3da*R*"N%K5o]mb%h0m5/[>&T%B),Xi-"052%\PkFrD.Uq8GX9l#Z")hCgHq\orC'-JRJ[nY<)b.0YS$<.Z]]IAl^N$sh,NR?Gm+GA:S#DH:k%:<+pA-ZKG"Mg2NWE*htW]PIQ?HN$.blhT`0;Qja!eMfggclN3%*flRUI3q3-1qN1A:(tX!SH<LR/7[Fe[alnSZVJ$Elea1Hn,MB#%NhGl;IJb,G05_ZA-/"PKaMetC*hJ_oF5I?>g&OH<:.T"oBEJO:mW+er&_)=bi#N/A!9*e.l8;DJ`:(BSop;<_3UZb,I9$b6cRb`.%1kDk&]!/'"]E&;KMru4Ma%,.a)fXQ_VO@IoD=)Au&h*B2XkOq8>Ad/=pM+SMcC!0W*sO]&-\XT;HlAn681'l#)K5ai[TLfp&WH&!%>V(e<nEg$Pk$lH<I3S>YYUjjP-_6L4=DFV`RDf;^8XW5/q4$FaoAm?Kd63#nEJ"B)M_9;_OWe4><tr5d&cT5Sprb&I/`$i=<DL`5%hG5'58nf:Q<bU`IR%m3(-\f-fXdTjJE>.snfd!h'H":0u:#t#CT?(h'DSe@,@kg@+6s>#JA@D.*XQ(XBh`%m_aj'OFlaR8B)S;CG%0qYSah@u\i.G1/:II=<uc,A6VFYFB`S7ScFW#XjPLh3ZeK<e!e,F5U3%Us"lAh7H*3XE<nS<22:A05j*Q5g8bUu<N=,l2PuoqXVO%7-jLkNpc6'EK_`,=L!8m>b';FjpG*Hopa!W9u^j,fDOUTZ'D(t`M6qTl\bs'3fg$(bRd@2(IE?>2jeodAp2j%^"F:!SYt=P56%Lk%^.="`2H!2n,&k@,Z)$kO0*'K`AYKYQJC$.=`[Ar3H[qlm)qWK#s&IXpjt(!O#^&;@S3`jb7>TWL*S@c2Ch=f!]D>8m:=5(Bf3hks%_1NV&#hb^>I2hn%]LO>`>=l`!YKpR2EjHTTemK+DF^s2tTLAMHq;(PZ?kN]&@h]j^5[gD>7'3e3&ms`UhluDg\)X<F&#>OAS4c"&%9.d>K""\N!=#HMR<QAbN#VR7<Dc4VgM*Ge@pss(hYKt>!lEhkhnLY5YMQYj9)O3jbnE?gAT_/jS.R,fld7Z8E[E93_W9o3YGeG/$%,_^SmX"'-'oLQG/Ksl4?<u]-&jjA-qFY]Z)Ru*1qZ,%\4Sh'i#@Y76'kJ4\dMODZJoF@@leUsod#t];qs$j90,hDdUi6XUbIWK??%KBuJkiSLr%]I/%Ob&^k\gF+uA;=rZm2J@^BP"3o<:!a3-iYkP\nF)Me(lX@*LD-tW>8N?#".6@lq5co+LUC!\DBS!55p?T;RgJM'%nHD:#\&ZQR[fN7K"coCC;7u'p*Q7:Shnm?*lJPu*WZ-kgI,&?!?m**+>eDlFER)UAVAN5(aQa&ea%15b1W<25\6C%-cD=6E,VrtE%WY/KI2Kf%)7i-Bq9JHssI"gDKZcJ"--KiZ&"u,@QEC4<RS&Iq**-d[qkKaC!]*o$Vc`OAB2R4-r6qT7NV)TVA9Js/:Gi@4TlG9iQ%d0WAjf@%;(.+nP5e>n5l8e]C!$?1&^$@ILC7,.i$fF1&J[8LPX$+qr]Cs*D3D/>%%6fI5uKlG#>!<`R6Y#Y;Kd6=EOVFnA>*EHt`%'cZE\Y.jd."`"B^e8d\%Y1tFZKB,r\8CSRhodOD5&6/=o\4_#g@61,'JcGf?;QST(+6nD]q`PdAHnGuNTV5SUXf=K6a'd]N0dp,U%fl.Cpj(69-:+0].)Js#QBKju5O_0uR#+Sc*Ms%%0]G[G"E:M;gkeT_P\OjS9*]FDtg6G[5U'Bj^0k7_uC,K$#1BSq8gjo:'5OK`]%65G,$"*\"P_5>,H&sYPYN$"=N66-'(SMtO$7^Pr?+2C1,M[uO,_OP0AM,L_7,:K.#JVq+]mijb]>#Uou!F[fNkl:urC;/qB`fWoV%mCtA#/?UM0WUc^=f/r5,2+P5oGg"WUNj+%b]pnF\ZRs^n88SP89gHE;]TFGhC(GYWA#)(hk?IDM5-iK-'Gdq-2A-5cAtV\u:dRBj%+#%Za:FJ^H4Jc")l]:.Wdq\q?l`M!X%[`a+M:T)mLNsm=6_F[j3lcl_B1&)FPtjZ3L,,a3F;d<>7V]t?et#F`;#^@NhGF4K6!JmB%UbpcDW$iLVE3g?!bj]]#@T.2Z95;C&TP+XIZ>Sn;-sAs3S42?H-sAs3'!Lp2'J1I_&G?\M<Cdf)q6m^g844C72M(*.^ub]c):QBM%!N8[5lt%9Ak<1828HHdKhb#0jT[6\sn<MB,+gHe`Igum?LB3PaMPqnh1Nc_l^P^76I*[*>78$0.5t`_)N.k%$0iRM_\]LqIjT[KA%23V1F8p`$62U]H7B33g1YU1^';Jb@6A6*d0c(ZZ:ptV:]=Z),Q7><Zj)e1=E<QP/g@EVpMFATn$Yo<2P:Pa9Eq_"0_%6M6IF#X*&%B=OCM,#SpoS\ONt,2sj<@&NHp*5teWiQX+4d'[d>BCHl7`a(i\(h]K"k,J.@RD#;]7)H2I(]SP_>%V\4rs:pXCPtoP5$9q_E6+or%$^a_5L-8X633Kmn>XPX^k[o]a03H'$=G;fTo+Gq]bb;afOY*;l,,]JVPqm0KF,#_Yo6pBWKb!#**gbO/mnasSpJ?20j[9ZimO[#e%pUSi^11#G$H=R@ArbXeR5t2*e-T::QI6^9faqG`ea>mbt$$sP[HGA1Q:*DVa<<<D9hQ]roA!5DU)k*:)S"4ldCdL;^\SkT2X9X/D%ouM;J)HPE6>@KA,UCHfO/C5XOB3\\h(&5lI.Jj)(%*\'`PE_/:H#a^pDM5aC*OM!P"'E$M0WtX],`;!4ak[Z[EUp?!VH*?drgCYj%jr_0\P[C%m0[\RmR\F?P*SjPpN<G)pqfb#bcMO\&O"r65C+"F1S=@pGDHV/ZX>hu,q/GaXWfOgImBbg-GU=#/S"qok[Y#V`MBHbl%1QuE9@.>995du!+<*$9UkOXES*b&VP!7+Dk21m,`SV7rU`NV7C$L\?=*&5?_ftJ:IYEZ_\#+eBt'mnh%EV9tP$ISk&Bg"4F>f'].%ZIPGLncTEN[(^l9K%(&.>U.+9#f_"caUFdG'h#\s-<uH_Z]c7f!BEP;\:*oiX:G622@X(!b>r$)fG8]$2(Kj'2Nml2RrW>c&,sI(%=Z7,0VJ<jV^,]hmDgk*XS6Za-RadpRj6UgS4^<`VaHd(V/s'Ck^C8Qp'r';G,A)^l>`))=)<FTj@hO)&P=c7ibIZrT7n&3(fuR2[%l0jdNXTdOOFI7q3]m#jLH8BOWG3K9iopRD@\/8_o.c2]7ZrI+YY1i_7_s1oe.X?`X<nPn@hdcQT%h^WH_[h$/b"Z$=GlamPCR3$X%n=BI,%/I-=[ddVVYj*Uja;\1Y9VX^6X+!_P`\R=Wr7nOAVt:_3O+$P8kK'QA&V0Kdp4X0Y+4]';>$o:Uf%8'SeG?CLgYOm?qAPVi%iSS<sQ>]6pNt6^L3.od0mc#J>#)/,M9V_pAF0$*?PH=mn0#?P3H6``%a<T]$g#"Hf.\#^V:Qdp)&Xp&Q=QC'C7ahnBa3GC5jSurt%W.0*ChYN*BfX$]AmBj'q]=_kcoMQhC][e3B"MOg#7h[^=UtdN-,m3_+=4k@+2]IF4`+=Xni;q4Rm*OZSDP0)UHh(>b+>r)<>2p](%f^23(QGBuSo;_[Pr\A]Z7>@ftaVNMm3tn!n__gRjr+HA&;%fJppm3@2"AtQEk6AAZ5KOMP*^&GPf)LCH.cMI4ndoOQYuI[1qg@^C%Z>5&g;Qr+lp4p2)F]tKDAjl"!SG%DTcA"QD]A((u"+Sh:JFCQM2B$f5=WV=fW/L6AKT'NQ89,CrOKj#bhss8XP`_RZTfZf/=rY>a%mp["eB#@9_31cHs+kZ4X:V1#P',V#HiS29VPL8_RZ87Dt=?XH#A;!<SXiJDqDY)a?1*RKc4fLog@:TL>76F(0^)0W'8%VDWr"'_b%>UtP+h]fZ#RdeYm-Y<q[Pd4EV@TsRuKZT0$(Csq;ZBQD@WA@`G-NmkFA*gKFN(U/$7\V8KZ2la%9u*]@qUapN6_h>&CA18<`6YYK%ktnCbo$5RSJjMpc8/:c5G5\c!)T=H<3tP^j_uBEZ\nm@8Q%Y^%ZD$(D1N;/>TsC,X_(=VAk%?sD'[=tn'26R#%d`8'jBYBCEIHg$%okR,,O!4GXL]4h,EHS-aEH]Hb=FPc@cE<@t%&bJI&XMNj^E7))ES_-Z#+p(Yfp-aA3&HEScsmlu#DGXn]JY,9=i-&+N\j/_"Ra"8%P[SY5g>KQOn7CTQUem)(lRgat;mC>"jB<LA:?j0;]q5jhH^MbUd(2HM'2//YGnfT'e,MOf%QoWLF0Yb-8+H2q74,J.;$:U.$CPA$%AM0SR&>bUF0S[ALiq#;`(",.;+o010,GS6uB!#:"KFC]CZWACH^LqK3!_)gaC1[(O#Eu:HN0&kk0WuLs<12p3N4R\A;GCN1Y]]\q%":pp4o>`1"H,%6lGnJR&*rF`(U80;=2VU'EQFLc3%sb71-n0T4X5iQaan^J#IUu;<3uDh>2cpeE++JWDCT<Kj?h.Ch%!%B6Y&3`5%HRr,CpIim9`IH8\l^C!ESO`%.gH''Xi";fZ=k9uFL!"XH/4u1krY6oXYKr7nbGu#928>tf\Zd00b1Q=5R_EBFU%7'h(ZeLfEGY3F%#<LQ_T*'m90#R#H()F)E4m[&jbhXGKMi;O6AlN*dR,R6,;"%7dhDXr%!P96(O^bMXYt,KBZ2ZVml?QA.k8m([FBU<]oK$=dPr2l`%Dk08SHTNn7=:Dn*Q)Z[a/9"sBbm2*X\,#)Hp\"1AQ9nkV.m<QoQcH#02-P*kf0SQ)&tDie1i%E^.s`u$D*ESIr4)a2L;T*D$_W_q%)L*)OQ`Rt[q(O_M:95#V3j_4sZL_TJ>F)O+(ScK(Rq8*g[GujMRs>Y,1GkOrrZrpBl+YETn]fKae;BI/.@j33PPOn)XJ'tG<OOlF%.U*q%5Q`5^r!6!K>+[(i0R'dA$304N$W4#]OZ!Y`(JEM[_PRTLp=Uc^lnBfbLSjRCSN]h]$.TMF]@Jet\[oD\oF;cN`o!M$eN8TD%Sdj%((qbL2a.2u29tZ,/e_WUO;t>jB_9tETeBrg4hFnk@fiq=>0mErF;38da%Ke1l=#KX*S_*p-8+=!BlXkQ]fbXL"\YBW8ck62T%pV'Q+F9I(3gUolRUuCcQ-2d9Y'2i$**J=?H9q^ejPJ;qTbbJ+B8U<Xp%GXGXRiL>2VOJEYXs&etGN`XZI!P=S,9s),pCAJn24l*<%EF0n7J*'H9Oc_kLedVH*F-&cX2k6B=T3IjZ9ffTUOA3DLQWf_Ci[L@CF]JrtHMrX@YKiuqnL/_+VI'45rE+0pe5ok\%t+G268(#e%H%EZNU^';kj'.@:T5S!VP`Y!VP^UW<4+(i<r'Cd@+HBT@RjA%S^UDe\hnb/^9,nY0TI'#1!9F*lp,"]9J'^>#2oXHB4=%XAe!YnS%1gXtD!>%G5R8>IY^Rs%uB&O7L._6T"q+A1gWKs4XA.@K.ipG,8#4+q9iZjYL-"j8'&<[7#<^?El!3u/Y0!UmlcDri2Ii.c/4U")%%_]L@0V]PpN%,PU@_B5`LU&47qr`EfOArRBPI!I1A&kANZ=Ie@53GYVokr+MUr'BaCAEdl=5ks,U!5oOLl];(5>4",Rk(AfO9CLUi%[2)Icr9Z8I(7-KJ.8Mj\APg6%NP!,WrZ>))s!LLBf]V'O!5`4^P5_+K<&WJ.c')1Mb]'c@e2+M8fJ[<L6j5hRQr9.91;BFCbWf]S%AKu-F43;uheET0s@YrQbY`Aer/c<FdfnV(p7Yh<+Y5jAip`g?Y&HIAFef!-HJ=)$Ta8r3FduB+`m$EL@irRRDhg4hm.G_:W$%Q.C%Nd)fG('(W3s66i=]E^\QrI8ht]KZE.gAa+`r-q*R2g@NBdWQ,KQOaNm!/(o(nW@Qr+os/6!&<.`%2/ZU]2B,hPh><nBoD@cKI/;R%+L\X@>60g+n\VgM;"@n.Y^N(fiq"T!@d+$6/-;:AOD$1EEp3^kI=;(t5`AH':cc5ZlFR=PJ96fSi<2gtB@Y%iDdA5\V2B?#PR7OZ%/a=nbUK!mgRl4;PVpA5q*2S6*'6c^@!7/s'=?-D+fUKlN+/\sI@W2C3]Y69Na?0sBY#nnADEuB^@rMLTWUo9Whi?LY914L61^gm<%Z2\/HZu%2KpWS5,`'-=p6)4(p/Ee*JB^NZ:ISb.3-t=$BnJ2;5Rm#tb,@b$W`MY,?)>m'S')dc@R(see/iK#H=KM=]rq?WJlWs=p%]>FKZ8GAJ`LQ'\T*^F&%^r(=6s.2sNHDVRq2Un`lfWtTp_u/&!8uV+k?C`%N2U#O]hKN]7^H9X=_e?n*".1.%S,C#Xd:#e]mL8#)%:/$m-J$W^jA3(b)-Ci.ef:E:bliBD>h>8^D"'F.pm:++qrhhl/jM96*nB_1-]4=33[aJDt"_V.X,QX(p6#/!<d2F<5."S@NJQET;%*+1?B#Xn>9@_AI/Gi;EFm+pR:VKQgU5tO,-BQN!4[*;#YbWmn:br62OT.8FBQ+66659S6>^,=kr(^g$BN76FLgrDn(=r+JpnW;j%%`_3j]IZmKiBF*nFB(6GiaJR)S8Bnbl;e$(&OGYpK1l6sK*iYIqOGX@tFF+@)BsuZ`FKN?UIOD^3I#st`*H+sg6MF,n7Dj&QV/[Vo%UD^`-U,Y_?p5+O]ZB;"U+"K]T`/g5(`3(q8C+QhN2Y=66Z2ddZBV4\L^N)dt'>qX5o&VfA%TN\VkfASA#-'g$^hh(:pY_fG3"3;W%BOLS3lp$MhE*nZsnpcc6]8@c@IJ4a,,AFcd+_HTT.1@q!7^>-gFpXu;(k!5P'Z9qp,QHpN,7A!lj:"Di/M7VLpG@S#;$X-(CtN%p%@,BoQg7/4oV3.q:+Urp;3qS![;'joB)#u^L^OZ,MQ2oRi@>f:\@h&EJhtTYl@gsK8`TIF**Pl)*li7#1pPpe7%K=k)(oI@I#QCm7%55VWsi;s"_[e^:k0O-riUB]@?@_iKP9UK&>Q\JVZT@@;lVpZ,Lpli'KT1VI%5tLQNqG\AB$%DtOV'3pWhne/jUF#]qZ-V4I]Z$c9%CWJ_PD@]riRjptiHX(cW*ZA!KbJ5gN$+[<Q,Csef1-N>EYs-)W0HBSq5/[l-<=RNgq@G\Ar"4l54"6n.qH=tM()W?bj7YjXQeZl0%H"@u0"[g0M9crogT3OJfk=*TKH-c>ZXj4nWofp'R.Gj\]/Yh(PdU31T&^/&kdU4!mN[-iJ%KNW^]ZR)]6X?iF^:%V8/2R6cDtK/d%5pQq)m]p$]ZT!O1</QVWPO#`=+VfCuBT-Y\9kO1jknEg`]$A8qRF*f\Sj:8tg__mWnH?#9*;2*C>$%&$NuFlRbrF%.-7f1eUkV0B%hN#2D/uW2.Asq%63%p3(*90sK).];Gn-/ZU),2SY2b=HG66_!ML4^]9o94UGN4/)l\N2PCjMd2uNTnSQ-*NAa^[cXjXk.N<A/<He%6c5eUL.EF%6CEae6bBDD?]9q[PT!#`G<np84<JG.1REkE]Q5TJ[12II5>:n?g[N*k4rC!iGi[9[[]k>EnTj,L8ZP80DYRYGGS?of%.lbRUO2h]'n)$E:Fr/>i3g(+aWW_`q-J8=r1MQoF4B;hNNt50MYRqo,pN_Mr3N^+@N=J)fM&:aSUS?V'6uo)'H3:Qle*+#:s'd[9%V(LUo'4a\9Lo>KoQ,3U(rne>^s5@<''J6dZKhYha$gW"j9*@li\GSrt%1Po&+SlLR?j0JM2MZ;7/qWD>A4CVVcbUA?852#%`<tKp%n9mK@FB3PF%O<jmCHR9CTcmX[-5V6RC`.7pqLF@%d85g[q@jVeB_Zm_5XX'djq/,*UEQH]S)BuqEfmGHe0RbX"@W[Mhe:7-a,>mt%4C!l#,eLr!4C!l#9!5R'4C!l#WoqML*j.t":QZ50*j.iIP8Ej@:`W-/[Qk#(rslX9p0cchl=Q\[3XgOuI+uPl5>Hi!X;3@nANoZ=%kqSt(1QQFo"0`*O4\gf??2[\@q(is`hIOXBFGp/bH5!JWUGd-'qT5V-V,7mGZdk2V3L^)0A*t#0fuQZ;@j?u%eF;0fUitFP7*!Xa%6]Y<CDV5_#G.BDK?=8L8]dD]j^#n"trI'T^(IEPnN[0uA>N+Sd]Sh4aJ^of`mk`1"!)(40<c$!'/9@e5*YM9%e>mYic+@Kfkb!L`%3I`#0U/\A`8$^&FZ)U+[6OMCbgbS=g'&OlB8;cU;/AXQWgSAPg*.:bT(/Jq%b9Rf,*]C(*rR]XBmYq:r/2Z"KR>>R4&Y:rdi@U6;%e[/H8:WD5?i4'c`0C3ZhIdJ]07tODfqiIkdZ%oTV1^cpZ1^D=ELL>LMo)%0g'X.?-2tA@X+Ifh(;5D4pb+i(bHLWE7QcZ,*i^iB&%VO[r[93DR-c7YXE@L%a8gN@D-nc6<Q*>Y,4OLr$Jgl3CY]=EUrV$!<-N&,(VKkTpJfnBqS6;@MNV4Y'^<[:nb,NCV96)LacU0qk!%Y&\XlK7%uXDo?@Mmc\B?!f1>A.-C=r,1Ml=:g&E[37Lj\+VlJ&,i+FJ74t0\1d[oNhqnk:N#jRQ[)ZkViHk@p>PG?Xo_/3L4mXGb%nbhJti_Sg0C%kLa4m]DPNhsb*[YGkq0D2Q]s"N?U()eFOQ.P&M^i^UB=dRr-XWClJLL!#r:"K0bnG#'7%=?aD"3+&1#j);G4mX/2%pU'3of0;pD]>_T!*%Ti.@?J%-F@CG?Wt/T=`)0NB:Z"#d0SAs@CNr_lnele<J*t0-9@sV4!Ws41]:^lCF)q$9(Uc\E?('[#XNFka%"\1I#nW43);cUp-n',7J-0?ksZ=r+>UCB3Vf-ft/h=kn^jKnU<3<$c@/<b$0m_K?p[#u])5aY<ag$q'/-Up_oe@sIN0esKN@9"7n%V5Y<"$5tW3HTAD10fBT@[^\bOEXp@J=:$#9=[O1^DYlKn,A[LWeNHD$G^9D6n[_f.iUCrRM1`@i5,9CjYfWe0RJHM9cT5QNN?W\h%]le'fk(_[gWXDhYk;0_=ltQs.n6f=Q^\C?I>3*sm_\M0P=_dhj%?V`13u&/Xn'D?/L\iCne?$j84@U8mk&J0HGV(Zkn<JZ_g"Qrg%0(t0)\'onr^[K&*@sRbpFOao#^XGP;[Nb7&D5_bVe%CnNY>i2:S+;^md_?DY9t0buK^Yn)0Jg!l<q?ccn.?lad?6DoU[d<]`tCQk%5$b&!9/E'D@:V$<XqW[]>;EP\p5ndsfgEps<pMZuBW2lUDX=*orXk1<P/MP#66^6Bhmr32Q6\rJ`"\Mh1UKh&4ZE8VfG,3pnRJTm%9h4Qmr(Wm@>UBqO3b1sR`]'5M0id5ERG\q3_/moG7TN]?G#(>AgTYtWDjfWi6FmDO9R`@rk]T;DW53AEKWcs]o./)"[U1KM,pl!j%RCK]0mFp0CYdoJd).U2"h:J1+AF?!SRV7gEHf).N8aFKEQEPh'-uU>u)dhMIR@Ctok$<)4N60jGo$lYDn#$hGa;E64A@;]opKQJ_%QjgYgb]k2sdU;(jpRQXPn]-4K0e]kV0\Le\7Z&KP0XJg_9s?-4G+>da`T>YE!fC#s-6_]+S9(N;F>&nN^^1u-iOHVmMM4CRE\8cX%Q#j_m[u,4<NpF3q%\IN+]36Y85sDM'!HcLShPaJPm[jMV46)W;oNS;[7&^TJ2lp%0;,KoeI!dPu>06/LU_6.+#4pV!-+UT"7NZp5%>U9gBQ3r"OHoAiaj&7tMS<>.,_J\*\G\S+?145fQDZnC.kbH1W3j0cti0f-pZKPc8.?4BFp.BD'<\?PP7Q.cV>6<`'!\]L@kO!<I%Y>ZKp\afjbY4K_;,,jRT2.1+7#6aE6K9_Os%Olg"VcKB*=@oWj$Y(`s!%'^d?t8q7kS@dT+Al_T_[OSg>Yf8<`VF?[VSCfG@biP#%d1R'Ho'UF-TO^"07Q-f)il]KR@:YR+bV`=Z?0t_1A5?eqD.I:3Onr/:?t:dq$#\"(HTX<>n4GJuk96.^dq2J&K14Mh!NoW6RsYT[%MB/2KqRPSO\pWc.X#V/^j>`mT_*-q!kBO<e[bdYCLa:"Q78=ulOsFZd7F'[ROX&g%MhqH73Kqhn[r[CEFcT13W]Vd^_g&4k(P!DG%\_J"#l55^Z'Bt.KIt!*nP3iQ&Jeq";Dq]cQ%G>G6i3G%kb(R.-X-q.@-Kc[m/Kp)I>fYAq[;M%Nb&pr0[gn)CjuS7&D""mKjX"e=%ECBR:\#r+-0c<^O>G(3edS#h0Ysec\#4lZroskBplEb3G3oGUcb6`hRH/[!>aJ=.#Xj\8,f[>Lh62s:&)R:=TZ&OI=[1"60k`s9m%&-!j,"!)>X+cI67bcdr)[bUSIm8Tli!/-WB@Kq*Kd+6clN\]9GW#3C_S@A9Z0Il$i5g%_kRh\<8ZfLti*P-lsX2H$Z>fM2oB<njk%(q2Yljk`d.ls]4QoQkCZ^R66g#+T979/Rq5F=*0="\c@7%mP^MQd/!`c0N%M')VR)]Vps`Nk.I\c;6?9AI@23+7$!IX%1h*Ramd;%^DShp-"lN^B;3'8hFq>bHC#'!kjKdeOi=6:6*r=4fZbtpijoLel?`ce9q`mCj)T1K#8!28.<R.5b5d`#KA?T"Kcns'hp'=J5&tbl%LL53di6K'j,C_\Zf49!,i64BSIHH`RF)q88b[;CLb]_8?QMCMl3Ur;2N.#(<o?Nbpi>_BndY$:o'd/-A-qi/[Ws6r(O6jdWo8)eK%QHa`Nqb*8mG^qA8*TqOtL@RQlh6A,8#gN@e.*i+]ZMu"n?b.:IcD5djFUskZ`bRR\j_>b'42m5ri+B7=NhL/@cStH.Y5Lb%MbmH?%?!10AI*S.JB6qdkP"LU2L*Ash>`ou+O*'']ji[+RKe:D*Hdh`MeEV.7/8WcW:^_M(o(hZZFEd;KPSpQ;gOS4lE4c5Wb-)g+18lP.%;W+RU@lkKrr`h%E`fbqI1]oMWW'+ss9ReH<O"<kG:DKG^],6Zc9pb,5Cq4&O^6*]noJ$7&>5Irs=h>qNG#-SZQ7gb"P@Tjao_EP5%[$LCP$R/\*jZc$XMBVP#?`Z2]F>8[NfGC%V>UG>:o4)-DqU;nC&`h!H3'4RWNgB:sGSYIK!%dJU1YVm"?%o/j40Z(RTZf$fX_Q<,%D46qA(rs[VIuEO#F0q!:J$U@VrH\9B%@<OImIP7;[7l'.!b0Yfc6^qHCNu275"pH:+6tl0q:<1s:X3n11B$H0',T2W)W(+q3'ZOT%jpVg`%)%"Ur\@Tq_5>j*:\QATUGl]Z6]1OWiB4@/0??6/=Ll)qG]+%5FJ_9'a/VATlV)fULY&SHV<Mo8Bmg?k9HMmA$aHu#C-Vb,%/!,Iej6ai[L$=Y:S$M;Iq=>):eMWTfSlM3X8iG<6`9^Klr_*KW_hLTE@iHN(?Mqd:?Zd]Q;2]lG-]d&n\iV:6o7=(gqXrlRh,S++%h>=?T3*0VOZfJq<k'&K.gAUn1^q_&ZCE]BP:;lG0fD>1"0@6375N?Ut8F"0$XSKHo5f;02^KC."Dh#iSnJC@VeF2Mbn*YMl[_rh7%WJ;TK*b4KQn^uEN?hgmYS8T!\12P(Adm_J@T6RSj)7B39_-K?NCn1l;V7-(QE6B9054Nds`dW&[rpu'"HfF+AGhL-na2RE6P"L!9%hgIWQQi1(U_1klJkZV\Q0YglY&&$Hs@=ZbX`9cZhIbC@=%l4InXMt0tp8S=@HWa:6Z+mb$p[Gofkk7Krj_sO4`O58?&"H>jg15,p%S@*K-59S^&+/0jI@_K\KHMt.[p,EU-OSZQF\U!5V(P.XLl'r4R+BN>C?c$Nep%D6aWR0qe+m1pUY55_.'qS[=>;fD*=]^j=f,e90%ROaQ&,9M^5Ge(IXE[`)H6Ud0sX.8s-4,VnPN.2AunPWD6_]m3-Juta?k-o(S^#nb5X1e>2WZoQ,MIS*A?$Ke^Ja.2<CE][rqs&7:%ec<@d53Lt6dV;taC2cB7?L%*qqOC>o2+QN40g:'fn,)q>/sS*+'OIh\lIuZgKV'=g45/H-MXU"HJf=/P[^bPN,"=`1fc,R[g.MfW%rW?a+j#mgbbG!r$jG`AT'h&ABotAGtf@R.nq^6fr^TQ=E7]_'@TrQ'*bPnRZ_*H*ODb":!cLP'Zm*Fe[)QZPY^[09frl)i"XF?)f%(UH?U?f(5=af3<L4U,#HrPA4`(^$kYr`\?Wp3<`LJ$&5A).5&i#Oc4X#3[:hkBaJLp%b6Si/OWTXc&`__uS?+fWB9:(5G1q-bUAT%ML;c-CKjOSXlLZ&K?<L3jM4r;mD<%aIJ[$)d-[YWqm1Z$@"</JamN>>rbM2I!.VXc'rTaWrdaQHGHL%W(a.shfh_%[%@sg5=Q-Ku%ceUUnL1#^q&MBDuT4_p"m"4*MXRKW>YsORAG:+K6MVZgn]q10Z>C+U3dGlSi-_5l!d#q]feLQX-@t9#KG3(OLH#7A+-ldUkakeq%%<LmB8$aR&t!M"9``PYgTs#lnbZ_,6\[-_=87[jFR%rZ@SQ4!r_NDI5<=J7<$r;)>eF(%p`WVa8=*.5u>IS%5QEd"+=oAAWQ5Z)KA%VD@\ea#MZB1i_M8H5gcFHK6].&-"8o]mLC4gJ!n-$-W_JA]"`HWcS?!qKN+1Vi:=VXQGi&[r1Z?fJeZUD9Gt:+1np<s*8m:)tqR%%,%_XOm_Cg$[a"Cn2KF'3D6M@gk5N["*WKI<rU1/.eb:#]!hcmhPo*q:R9PE3"L[-3P:775rQ>IH@Di))Im*_1`;[tU*`s0FoD[@n%9W;QQCP/OqL;&58fAtjp9fL&5O*B?5!Q)=N!0Y:frE]o:hBd-S3q%]-!r(9a8"&MnAiQk,!E/q1=DP*ml,/im!l+Mc/qGIToqVDO%2.jrWEIG@%!8I<,B$+F^_UEI0DCn$'N"Yno1:\MdhlR\WKkmmZZQ`t>Eq7+0_"LOsk($=SX^_jY<TfhB#P2+`)Oi^6HWhpUK#ue'%BIl]hOWa#F+!;>phae;[[Cks1O?3sW85Enoj?[9AqM>>XT:alH3P,KO"bGN5(^]a?eBG0tq<$n,::M$I3rW,UH]J%G)q$7u&rp#)%;I2M1C`<isC9L?38k/^1O9$MQaFmU#(bd'851diiGRE%]@iOoO*j)+d9LR)u97?CL0XHI%q=aW>j_e\m;RlGS5aVlT*de`4?(AVk%=p!]9@/*#1hfL3^5Go`u4H?ic+3L#*Tcl5*!^hn]DFC0A4Te(JbMFphH)T;=.5V1g_t8'o2@j(G0DiTSpBM'8RA\DnSq/'@E>C/`%6r\ho'Op3?#P?LBpG:Il[l9Geg_"V:p>0n>p&R8'2PlPULCBSP@0dsC0Y?Qti^9`?6V@0p7M$Y>'chlI7(qVJVF4M]GW!/dVr$7s%F>5Ro(PC_e(GS_H6A_,(FQ(B_pY%k?Qo$<pCKk!R;:NgpRV3j>=/1-@-Ac.G$qD6c&dX6+<a&Ef_U]g+On/#gNidNrLkCBL4@i+s%+e?\!/K\=4%'?&T;`"U`B45gW72`i'adM_%-lRlFaS3N:2Y:rgl.OO4[G1pYMR'Y]O4mmDj=GPh.ch+@6J:R3,BjrW+#s(!c4?]A%>j[H5f,mGLL!=L_>Xc,Q:)+.X/i11!c,%8K3;IflIBAR]pF8#d;.b]"<Bob[/i6!af,$WaNMca0H.D?m8o))u.qD`+Up9c@A2_qD%C4d?5e`rpOaaW\QE%Of7a!98>f<]__q!%k9K2X0Qce]/-_l3bKpBPJK@Tn=J0XgNXZNU2KB1$&&<UiHOL)q&;!o-$ET_&4$@oY8%%V7/(ugW$RKbOb[hHfUC>WTksU(G`spaj$FoHVf'):N*,?3:!UM<eSf4`Z(0"2oTTQ/hho1Hk3uUM860<.ae(fq0'!3iUC(gQf#dG%@e>eS&g2XTLAg(=iK`#aO5OPq[jbqh*SWnMR,b<s2Tj."d>'[.[bMeU_Rlc\Zm^B*GeC,A`r=q5>)#NWQ;V/2e4FI9V1L<]*9rdu%Uf>]eF)/FLPR:m5Qp)KZDg'N[i<k@jRr;f6bD`NY@1;V$G!sPr3F03s`_)89%Cj$273s8,l.$hU'.PK3A?rlFVKD<8G/WYHm(M&e%7I'bC.q<VS2If7Qil:ioV-MmP@QWQL)-40.E*)=R>B[TpNjq0[*<T5&O$i%),s$Qm<H>JFo.T<urh8q'(GAMROJDc&nHK'GRdOY%%Kfq<`F*\Q/c7bTujF9;PoZYM#eZmeWIiOHm:9?.WUY?l&Y-CE8j8:r@'\A8REln,#/W(M1_cmh+1EM%g0>:emi\8:g2eL4&&O+um%>JpcirOAS60<-U]Y&Z2l_]4VJK3/gjn_\;94tMT(B^p5P.-C+ajL35_M@71R[4"XQWu>KL5bbF(h[e2j'Y4X9RX"Es=4!BHH/oQL%h:fd\CJi[eK)r\p[iL$c`sqYc`7U5uWUIfd=$X=1/K'W9Z'F>4_m=&NaSK:EpC@)oQ5Ijq2Q4jPLW#SK/j=RlR`/<Jn,<SQ@hi?e%%4*h(.l$TU<hnW4h0^r');\I)cP`c07X`##iJ_-X(\M^<FTs>?)7O8%SFQRRd>BRhSmX"R'k80Ijb_HmUiG;^a?>=B_\4Ca:In\I%=>X+2`9jf1Ej8NUl$AI@g8Zo-A4hndcGjbt$rm2okAk;i(@p"ZmpgG?h0TN[hMam$*oE)Ym4l7I7Nq7SECXp7hDlc;)WQsb$M3W(%nKo/-(UQV.XhEOb5VZ('c$t1^"LRR7)8(URbNQ(<V%9!j0e.a74B.9^b/2'$>Q5a,WH-#c1/Nu*eqNNsF>V&%;mVeFEI?"-d'kX^%#I:6hNn.Q,T:31KNh\D=<Sb7Qbme[Y1066)Ta0!;oU`8DR;t$UB7><0)E_tfra%r#?B=pYjQGu3fD#^Do?[5Ye*V$'j5JIT'lisp%KrePSp-D5;`I([f:V;!U+m)o>nbpSGMC[W]2%:G'<9*FbiuVF:%nrdWV2hq"I!$E9&,4$6`Nbi[pAM7a7lOL'28P3U=h3>hCi9&X%QUQcL)*O$+%]LbN8fh\]%Zfa!7S?@k\8Y6%.MqO$9oP+=khh(5flgC\O+XPjiYFI1#pQ\-]@^&[Q_2P;hB^C$IZ#l@eB/SuGP'_`%:?gR&UTebjH_Z&eK+q@h<E?Z+]oFS)FiiKrHYf@lb.[/$Q"?4t*r,ScQ"uXbL:?'PYk"18Tj-^n)iaR;pK#hukGN[?g$&G2i>jm8%eotr;@)tlIL]mCn0i]Bb%`1^4NdAFhbBmj]a4Tb.b1cNS/SD8PCt[RnHViC9Fu6MdKD?[$bP;LuEblXXMj#f<jj_Jo$[p*^<5j&h%fs:>`QcbW'WI44nPq?/;kB#%cD##sg0skbbbk\j#=]GN*?2M_],/Yl1TQ!-*"*3Jca5+CF,"?a`-tXhgZb<a6Q^IDf>J=CSs.FK-%l92#K,(NcRa^p7X\uQ\,-(2S%W!>$Hmn)<<+k"s[WG@BmAV_o5oef\Z_#!`S2+9.JF8A?fbb]476XS7!q6D.2$lB*L?gm#'1dpcb%g]2E1G4j[dI.L7n=2+]\e2&o5LbckOs5_Q1"njc@\k9%K#n$$5Lhr&+-uat^&Ub@I$5,d8rgRQlT9iV\jlXb"*5c3NF<.DdHR:4S%IqJs&i6aB9pe>9amiVG@\D?%*2iu]V3o52Rj1?<lPssmL^2sn70Ab5>@a06;V:Jom/U3Df\Gge2jcWiC$ju?8KB3$R6O*egPS;mO%I^c+TpALR#_XlOG@`&ESU<,n6Sg+<(JgcIAjY,WlaTc@8?0UR)(fbTcCOdn.oa:rqp)C3UN\?\3I>5X:UeC'rPB8p-9e0b&3DjQ-%Q^%n+<=/?/DW"JS9(<g2H39CdUNNZ>]`d+e!;??<^3/O_rFHf&bPWmQ"b+8l](7f1qDZ-^qc]=eCXYoe;/En`^Tm=`CAIbM`^3K*%TS\SA/KG`n<r8UPrhl'()!&+GrC-DUgR00rAGD)JE.*:ZfGa5UUAFiYRrgp[:eQ5;;dJs&rco#4rq<cT_sbnL=;A0gDEeslH!!'k%bUBeF;@Li.XdLq@nh@0CePu61)]enINj96a:+AAQN-TT4[':3<Vdg,=4P81%jFH,Nn!Gm&3\CE.R0C6K%qNNuRmop$9[#krcBd*'%T10;pTUJ$-j$iXuUQGj9]<1KI'D@tV>I0XHGf,BEFkUY=?*:0FffEt.X2E\1ibVK,DLfp*fN@-Lr0XDS\Sj*t#.\[R3LL'C!+YkG%JftT(3-DlO!F5nh7$uqPl#,)4_PJ%Vldq-DIBGVsVk2kO<q8`?VpcQ&=?YdaFbiW@\SLFkDqG4R,'s3nM2BfL6>n5&ZS5?o=)@,b%WPql!qSqDehh=G[MZag(NbNVOQ<`qnD(2RC2L<j)Ul3@T/\-.M!)i^#gRI3`j7,a`:2$H;#1Gqm1/+GlZu+'PL/VbmEm$85'\][/%GO7L?UV4ETcMJ%NXHc*&<b89Q!!j\<e!Y[&s1!4$#67LBX-htTKftK`Um[51=4&@n3.'B)I9>m\*<[[(c<jL!mM/UTgI+TAe[>0j%c22+3i>jPf-1NNIlWH.\^\tG[pWWA?rOC%cCt:rLnFOG.]>VQu0f%q.)DK,l1FOFg_I,m'Eq9tI4iP#j\[cp2bNRA$-%t#0\lN![%gF/UQ<h(55gsb[PW(h12Q!^`hRhVS2g<s'IPeN;Igq!HnVdZfRIf<3UhIqu<d3jVr)$Y)A%=Ns.i(.*h(t;EQUJD4o1(7@$EGc]m%\i2_G(%Ti,DStDcA!7GSW'r`l!1M^bN]N6pja:kYH*fTpD_D%"<t2dhk0ZXoQ-lPIjm*M]#]!d_pWeo5E?S/\m%VDj\hS&V%+)8o%@NW,Jd4X9<-Wk/+8Zb.*KU0F,']Z/OFI_uq^);4e^GdCFDFPZep%H`2P;a^n42&>6qm[Mh>5$93;p@M+orBEqC\H64Q8i/UH.90R%hZ)Gkr82iWnuV.h6r'H4I!A.U]R@0nb\ZSGVBk%V<<,4!Nbr6NJ<$c_$>cis7bP)Lp3D+WSf?n^(CGEXm</=l3ngc,Mjbb//u='m%Ad#KR#enIDl:R12m-5nI=,Q;he(-R#6Zo648uue7nCg[U/&f2bBq(Xdr@5eR!H[7fl>fh-i.j*s<ZI[eA6VcEm:P;nnbV78M,bE,%qomnn,A1I#06PfoY@V"e$Z[Rp`Ac95gSf-><b4r]'!-7<CmRJWFYX30%T>ffQ-2+u5IP]74CE:Db'F<IdG9d5(N\VX)ff\3m[e]*%2Idrg5.[n1aAOArQK6QUQ$m,@`),d#a*ld&oVW`pBO?-a&m4*2X"^PpG4d>ir*jPa1`%H5)BZW1Z5f?Y1qRu%71%fte1.^CXDcJ,%Pc:?#;a,$)kK8o9DjA1\?e86`^PGa"e0Z3Hk7AlZW;WV=;b!0PgJqdrW6S"pN7u\R)7=K=o+uJML>ughjG;/4/uZHf.m%ce8]U0l%A=tMEpZ0ot\k_4'%kW@uC@0mD2`'=$>&U(6m=S!Mm`p==H/6ll&b]=`V2iL)qN<hPhTj[BYO@\.b[A^P=-4B%S8nDOAd3VTFFC*H%g/XQW7c7O2*XKut\oq\iY6QB:C6R9V^7=2s2K?(lTuoPW9'>Kf!%%bVjNc:3Tkh'e.iZ&_-D'9Ef[2`]Qct3H^9Xn_F_<$.,4Xf=%JEq<c.eI!Q\o!+DbH8&Bh$T/9mn5PM7]TqAqAkY=f9:*,apj0\K4sm(`0(/Kl]n5fXtCS'D8jguRh/5/Rqo2P1a/.nLokZ866)hC%F_Q7V!b)]SiaHcglB211Gn?)EZ,4'JlsThaM_Ei=2ms51@`eU.a?=Pc-H$NM2;eDS9o((tU5lPs]a:rS5]lg07r1LC.I3?1\1d%1%<T#oFmRDCJ?Un[UGCQNs%,0Mr?!OBXl+>Z"M"etR2\<2m;o<23f"7JV-H)&JEV/r!en0D"X.-kbc]?YdAFWDFc`Fu_?W,Nab-V's%qslQ(U=&&QCb=b:B*,j#cYsHWq/!STgq7"^B6]:(*3QK@4QBStT:]O6"^$(#cZh8:H8Q&[k9FA4[oQp!0;36&6=@q*m>KCRbdW!e%^e/=C%q"Xo6hI!cZ/9AW_^Wor6+:bk)j@Y5,%Y2$jk3b=k,Qqo>08Ws-/#C_Rqc(T]VC6:]]mBAS];QG\b[u.VE]ltCXN.5UHMn!%&!MEYqBQJ0meo4VG2\tp.5TZ^MEP&pV$GIiEqOlJQUORYp2NmPrn)b1nb)F8I.L)"f+1j#47OI7&@jF,I.1_+eV!Znf=cLpn]gZr%CJqif:9*jFr-%>9A]X/5_>4A:?Fmf@I!WR9(];GK)k%%M'/5CZ#*eOjI0u@fj(5dsDX79*l+nbui2-/gn10dPA$7$[bI;.AnRgcX%89T*aeX&jgeX6du]7/<hjrl7]8E'/3-JbufnOm!Ff:SGg+lSP4Gcu_@D3"=41gS0:;'18"K<]T>:SnC[)2%bW%JJHH/e%D\=/V2"%'3T^6j)=AGWn#F6*H-Hts(uhE$^VM'lVX)3iX;+;O8h>44aXqm]3b[#s7b1c?9PuO;Tlk#<S8><Cjns5m0a>]kBgJ@[bm]>\>+uU%l>V1M4h)Ct4gR*>8m9lVJIr.&r*s#"oO2-toiV<nYA*\78dBY'fc,6KCX`R.SL<;\'"iLRB9;NZp@53u1LF3bnK,6sP97YeG-LE*%JX&XA#]n\7iNVo.:.le*c.CQd#uc7^<?WWjN\.C#VJkq,IQ4jN!j^1pMtORRIWj:cebmJaQS:=,W8UAdj)`aYR:dnbo^0/:G^PA.%G#+kXj8:40@jred@)4A>BC2hbJ:_94n-YW,iDWjel/VTMs+3hHoo^*Ab'L"mB@lY0Sk@llM4Mq#5B8:MklcBMY`aH`q!%"5]KGZ3%6)m+2Fi\=GYA/J_*$:qN[rRJrp'%JIl-.<2q(J:%&_UYPZSEhFag]U:Q:]O`=q[\p4BQV]EQV`:Q9p#4@31(WU%N.?;qo#):S<t\%^;[]'a"-B.oCb?d,q"4riaAmLq?/U^]c(ZerKAlV^<3pC^WrJ$Ebu5*6o7d1:]Ju)"oiHn:[X7Si1JT-oic+pg6%9Lhi*':Ec'=R%:DXcD$e@6ZbFJ0q?%]CU&7;;$QAN=imm'Wq4;S[S"R2Y)q%f8-n5D(JbB*hoG14kNQ^8)]Q`Uj%-K_oW72==1=f/Bbg,j$-`@NhE%[h%([*A,pu\PZ0Yai_unotqI)%?Y@DK09[VD<LGt:<ALY$g2Di^;DkKO`'%<DQmJiQK72;oa6]7ggFVlQYE>%ULqn=;XWfi&\Wd(%:<"XDhQDo6gq5FM.k*mNZGo?sO#e]mpB3TcR:2V8PY!#jQSko8bHG^2fYm@LSQ\T.8s_E/D!=t[Cf6('DpU>-2;G4Ya)qhPG*K:O%+(<:#AN=n/?meb3TH!:4>Dhid:?Od@rlo3_Y`/Bjlbrs44@#Nfj1(_)IXKo8l0J+WX8Y]8U.hYeWoND)>Q;"+]BUID,Ki-'iIt;3%'_(uq^Yu45T+=VYC)7RqTI95"9Fpi3*ts?:NX3iA-F_LQXpq(rb*QP)X"/43D_C"VXX9*pET(,hk'KsC9rI<%*PSTG7Nc-*eGB(l%BUJNi+5s8)VdqgW?CD<;e/Yb<lIkaL<TK9`_sg4VON+c-)'2?h"CjliifV/&NGZ<5O5-;Y*JR&sLU9&c7`-Ia+BlM+DN4D0,7d2q%*uo&U03l^GM8?S<jH7C=8EM!WO!G4gC61puLGX2jc1&fW]KL]687?dS&4__sh*r-?e5tBAq6t'Y6X@JPpV6,24a?$UWlEqUXnCb;%J'\l"l2Q&rf(+JV4AN&U-fk)31lNgCo;Hb2Mci@WiPY)bTd(LgKM"2m6=nVQ62du7jSq<5OO'uUbc8)8l$_q*#s7s##Lr+"4*#([%3sW3K.3lj@mUEn!X<<%8hg5*kj9aLT"5Q(:Gce;a4X$`o>g.TOgOpa<kC;+t;QL['I,03tl3($Em+W2Q#(1cD"]O%Em1I7g)c:"8%$[mBE?c:EASKSN]%$0ZY;chYm7NY<0ihb4)A^nQG-$uDr.#p3Q\eIbRmJN^hVUkH1@(4=V3jel$QYUEskL2T%[^;coK`[L4KaeT(%h?clB\-=I.]S#'u\XM/sZjTLFeihYl`P,-UdrYD"]B.<r##jC`p3Db%TO[$u.->aBs(UA^M=#qA#0&liF`q<3e0X4%J?6(3q1F_\%lg-mQe0X3Z>C/9r%d4F`)a!Zr07OLjTZk.)_>9G1rP8^KVCi=.(AJ)cWCtAi<Q?.p0Qi4"[@.E!/h,,XZK)S5eA_6"(ehW@et]u$%kX]C^1nPMumr!&W&#+RARhXR4?TW%<6L>Q(m+u1k9kQ9OmA\r-f!f;Yf(T%)jj&aN]<t_=M769i@<-)F)Yj$]H2hEB@-WmkO3S=l%qI&TOV^&6G50@9uP,G(3Z75Z3i\g^T^k@KD7%h4T7c<Tg4);7%Vk^MW?Kg^"XL]kn"CHhNR(fs4ddMgj$I-q2X=,MT&56A=)<TZq%GqaB_e'V@X7NG0.i^lms*H<cU8Qftk?_FQk@-SR.P_,mHo\Ij>\&HY/d0fBf"]1UoABSF@S*M2t_[8$RG'/Moon$6kkd>t`V5cJd%^U@R@6O=1o___4i*@ERKE"T4_jlfEphLPB')\>B9De(35Oo`sB4;bI4Z,F*DmG$i!Lt7+OlW9qmLf>CAUaF$C!O4N=[gDTBA7oMi%FL:1WRCU7h#RC;Tk$d-82jh0e5fB5KJ-iKQWdc6(LU!8-7VtIC)%_3al=`nJ,m0n8+uhWnb_5chd66!.em'md1Eioo$#pPF^UMF?%=P>s;=jRAi?tsRG>V&.s]X(p/R(?fnXHB9iQO,BmH[&b$m'=_$/4O;>//]#hX),S)=>D"&Bmak5i_h+`Im*_q@[BM8_i3H*=>D#)%G[rWS^764\KK+V-\BQJg^'E0^bnop@meiu4g.UZ$qeg'\@S,g$2.Js()%a\*6mFK2Q4/S^DY490La<.4Q(QL?-:IWofsu..!n;E'%+%)$3E?TZ.:b2U;Q57Ui`3m'-pHT6Mg(1N4LCBGbT9[cR\8#KRf;#s9[i^XWK\2Qb].Xh,]Jl)Tbn^"%^6kD&/j>/+Df*9[E<IW,%).35O0H\9)K?9O>9SeU"W._>;nf9lA'Lu_$/.F:LDVOL9UDRtWG17kWbBt!W1EkWS1ju&(&cJqOYDSOq#:j=Me6-G3K_YJ_6XY)$%9Bb1+U5'&;DkOBBEIHis:A"POK2jFq"pW#sGf(i/\6f"&kFM(fR`j7kDnjs<<gQdR).g6o35sI,\YssJ9>;dSCkfiY6<[^HbLZ'T%CV>,J(".]Q3-GFDo\"`7,\fOSk!,IXn)F=p;_9!o-*/`6i>k>n/+S@0Z@nLfgbK!_m&,N%((@VMdUWY7rQFoC)AVAOXqFd]M`p-A%\oJm3Y@Mc]DE][nA77"0_R?\%<Nao2^[=Vh034F_'jU[60jZfGD&.X:Y(D0aXtW$!V^:8QO1*tn3S=>k3P$kd3[FT)6RAh@`DH$.%-;.HTi=.$B#.>EK7%7UL:5?@")D,AT;tbrt,QD_35arp;d.qR;iRnl<qh4^b]!=!W?T@(Q%9h#%#X1/(&ltOo2cmkr=$G9aQE]YW%`].',.nhK1LF'%G4/Y#tD]djsMLi"sGQj;XU'orP3q0S=q`Pf>ZHQ$:^URcH=Ino3Whc6OFL2,!VnF[m,sS!Fr8G_]K2Hu$3utl:%&lr$.q&An9DN0u#i9eWjfr2TeK2ZSOYNl^_8!eI+)^"jH%'])@N>78X@#KNFMt%s0Hp:jfjOE4sUHQ_F?CB<BR54Q&8Sbut&lq[r%DQneZAf_\28I]oMCYt`?-*.TW8m%eb[tX@n.0&,[5l#=3#?\o"I_b4YhQ:;Y#QaMPYAO'6GIoL-Qn)Uq@fmaCVfHQe*R!/tko43-%eu$tmFEc\Fd`7UZ^6ci3=M9$\,-;KQp=a0d.m8da*,_d0Q"JdQnYSo\NO<m8/%:gV93>nnfUnFq.E02L?-cp>j5Go!:0T^nTq&MD%VcJ78i>;$-^akUHc'3sqY4\?1P9m:eJ`rDtTb:CJ?eJrr.t)!'IGm*EEXAeYP7Q5l!\bVR_)`A&b:s#7nG<_PMkJYX?9uo)<OmBs%CR9BRGAeSaae#?C5C^>A-LTc@A5_'+Q9+Z'8U*&>Ph3=,/K63KV6<S:SToc5XIM+2GS]`C5"\rA.heOFZ)J@:>"53sDc8I_ebR)]%TO-6^F5*N2gb7dOUMjr-1rG.!dML;ef6+.Y&ltj-kCuT2l$7Plfi/8./K0k[RZGh])R"UNmYK?cm2bR!]+a-7b95aYpN2o[Y$bV\%N>Db5bPUn'G<2B%4o9CX6RAi3#3oZr@nW3$G%3tCcd/_.L5J0PSu"@-Fj9>\+*j2XpU,PfJ]F'f=7@(ZC7>@+]l/j7Nbltb$hj5Z%a,eD5UW%.9Rf@]?D/Vmo;h$mLP@7c"pl/#%^V7@Q[]9HVKPR!\qbI04@1r>"m[X5g-aj,)3*8.a-cB>e:W:mE)AHKY+#kq?7$k5/%HXO\m^4PH.1[MsJXc5F1_8[HX!9,*%\-IBPr)Z.Mq7,Q.4V5?RCOI1:q3E`6bFn[;#OIe$p=ac(9uH/jpPd@@!Cstmhsfj7d/SbN%3<oM2\4U8GJNbg0#7n:V[4AkQC,`oQJ%fuej(FJVc[G9rRQQs-XtpGMnF%t(kCG>%12U@Cr50`_-gauhecPg's/!IbkCh\8_Rp=g%kEg7Zo>aK;hNmZ-A1Q%$aCm.Z9[Wn'pi+\<r;u-VIA>[3X2\q?7s+#i+Q'BZIfFM2n(jNhbF2`W$FbMW9$^6*jODkP^[1Z?E?+k0%+7!;(g[!q:S3BcO\pABND`@[;+f5J!RtAD8KK]'*?H_G>:Vs_)3EGROGHi4)^=]WMoltPH_^rSnrUk-dpAT@P\\DJ"DEB"7+Zt"I%fRqdclA\gnjkG.^Nn^shrK[XgL%hdK5&>U=[ia6Y^;h\Jre#879a6jF_m]Tm;nH&T?R'JnSV4b"rabp#4%V$kl$NCUB')oGS)jM#%p@Ql*@eOX+k.U/kpVq>8_7H([o.,amG@j*(87&,d.71/#c@,WcC.Me&0tdKs37[2]%jsK3qW4);q_i1YF8@]A2cfG_IRR1=5gpX(%J5^RC*)YRm$%8D=M.p%`nZ+A1^MQ(Q-STl-,sI\,XZ?5BqOiaK%.AlLcXX$OT.g5&))U22rd37!N:CrfLRn#,Wb)EuQH$_MU?(Af%T$hi;[)Gl`qlp`MmP"MPFgJ=1o%L88rX:`!@LrrUF#,>1Rm4m;Ns30o\.AV]T'^F.rOV\DGh5%E3=O]$`[2I5mXeM(rVE/J<gFNl%7Nn#/1&q%Cg&%BPIX_:kq>60)em`EDD,5t?n*g8/rqZQle+`lb^A6+>mr.[0TANb\0u*Em@rF"r2W(/+oBuR:=X2+#/@gU?K\b4Z%Qg):V]UL"#SZfYT4hc!Mq&t'h>h0=$s*4An>"3^?j'smCm;\ACO2benp62c'h-[M`cPNMeN%somQe=e`UZoNOhu?s]]esl7o3<4R%8k,6.mF.UfXmrOVlgGq!cN!aN[.*A>]jgTpk/sU@'p5uWVnPkffm'oK[^cRApp&sFbbj;L#t8c*M+JcgCATrk"dX6i2Z)k6f%B?&%kD*Q2F2p4J$"*Gs5Ds#mC[0m2h#,+VZ)Q&^b@>VN+8q2"06!b!5C-/k<c]j_dJMK6Xu3Ak*1V30r\cn'p73"Vqu5I9m5emTP!Jo_%J'PYZ(<s8\Y=WNWrq08a%+A6(&3"7pf4XanN9b>M:X=0RV[l_.4SuDOcL#k>cMHb\jQ(o>YV==tK<<`59CBVGr!JVu)#%=mDR0SO%I_T33%lt:ci'4u_0P(Z&m$DosB:+qRRfE*,2BBT:JUduEV!iE\q69H56FJ^\cgi).Rf>7i:TK6i1]%$YVq&\u3R9S?r1:?hb/7!/%#RSL_o'gXPlDW&O1]6jk$k(t9G9bh`WE\a=Hg8;sRl-Kh-LR,ho_3dnOBnc3ik0Lu?Su/*I..^YU5J`W[i:sF]0Fl<Y'ke;jGEQ)%l.</'p&:LC4oFYKn5JGXf3A6':HBcc*S[@ZjDipF$sS4":78kWDa#sTKK#1AU,DA8g=<27Co*skrKhr?-Qa$#^"B[ZlTlKWKYj@(%F$?aHNf062O!Tu":p=er]13rQ-Nq+Vr)ujG<H%?W(!3="gjcD]a5Y()phi2YR`@GJDHiSgIr5.t5@a\%o032Q2!3"%HoC64DnBYO%+3&dnD2k_OXW5>U+F'0E?-[+#C?"j[":n/44E<gX%2'WVW)5k6S'ED$VO$Yj^_q&T6UnUHG&&m@npGK^+7,'5rqk^V5$1*/q@<;d%iU5@j^OQ2m[O'2'68NrR@RL!nhUn2"G7MC;8.VCpSo5Y()hd61D9FM.JHKdM)fj,IZm3dsmi/H1!rnh)LB>^i)rB\/6d(L6mS5dW%^$YX2\7+9uf"\fQ^4$([e_$/A-0D5Z$G>c^Oe+>Jo:[jXGL">d+7IE8\V,$(2#!QCTABFZN@m,]h"Ok^SYfJe\LE7&>(I.8W&Ck_%km0;JQ&b8O;Ms;;6XuTE,Yh[,c\9*H>$"1OMu*u29%PZ=:1$&1br_iJB3Z,5^K>?p`3R%jREUj6UW2ph:%W?$q^+0"3Q%[$4iGdk%'0V!d@.3R;Fu[:8jb#M@>;38$kBK?<IiZ<Rra@7g+TDhQH[f70kY&J4U(7io[[%u%+`oTnmK%dC!C463KSKEJ!n#emDa5eE]e@bP%%l`CKp<.5uCu/[k?=oh&[P7O+Lq(IAm-&?Y_<Vh2O"ZL+L!Sc@f$E5lmn!C#km*D"[iYPYN&'7@#GN50Ai_I](DKZY1(kR%IV*<a%gLIU5N8]C*-I208o4[[\i'&BEZ'=JHZ9ED4Y>;oc=7)Ja%U]Grg[LtA?@M[1T$>dGb0_*?**hR3UR91FI#[:W*<&E:@NC3_VZ"ok%#PX<%gskp%.'IR7*=7aTWY7mS"[OE$g3EG][3bpeI6AZI"AC.ZM=?rI6%44BM=?[l!+s,?!/a@)"El/6+rmAkbn35^SV`kmJ6ulW%s/78qI3lQu^nNjD[/1BSrgDY!7/4=lii'V?Ykm*km,);@K!G+&d6qd*'B/G4IB`=)[aO'H[SlPpoZbpMn&#P7"$HJDiW8]=kf#p%%psI+uER=c9s,.R1C)Lr=p+a@:?ffSTY9B8&rnMS<6'q,@pSKDL!,oVuLpO@8LZlRFT$`k0n`"]+mY<IpWPood/R:aArF7esoC,JB%76-7urAG^gr2cIl+5g^E!$f>V+l<71oPI:Z@RI55r;08D^o-e(N=B[fIi2UC&,:/?\E&GFN*T28MnY1+5B"+6?@8LKU>:/L:.'oP%ptP8.(MpP-p8d#i6+]((CllPRO-M'bioK"U\B^$,jUL5D=MNV_`M^m<8CnhR'`2(E7;=C6qsQ"4iZ@E4)*\Af3Y_JjqrVj)r6)kS%])4s^^]()R`bn$<oRm`pE\\?\_%ZY*rP+[rifZ<LlG7Vu*6e5!&LC2drYfZES:!Qq-h;eHlf?rP\5).Br51"[-mXtRT<U]uo,67W%F#6:.`obiZ`9,eR_aaNo;o?tJB>)2\Q5fB-ZfBD%a&YE:a.\KQh@=Uhfl:]#U]6U;b`5%0*USjG`Fd/aNK1.250T$S)]`/]QlUr?%3nbF)Mp78L)]c%>oYkF_ToG)p="Z3h%W-=KhgSA-j3U7cZ^+8.NdVfdfBH<W#JEiO"Kh2e"0%mjMf&Q4jA_>%;gIL,s3,q,%hWk9%3PBV!LQ8+U56^(1M/A1QZJL)e^#nT"3XAEQ9?#)Bjk492h'I!JA?;OJ%a`OXgkkMbk/$B6^V+d:rWaO4HLH(fG^#&8hq@!/4Z`#V%paNt08aZK'^)#k*&jH#m`i_8t3d^>!2C!^>pl;e-X"$9)YT@olPI^Fd1Q32EPi@\mrO+TOh-+s07GqLlX+Im&\9enfp1N`og->VD%gfeNRj$i$uXmb`R-"Le=*0;Q:c[Yu1#0EA-pE)VLmi;B%qk#H[_u+EUs,6p%MAnnE2e8)e58$@G-`otrp4esGdJ;W;Il"k5o6g0$%l1sLl^*!CQmi)W?*T$*%lttT]\7++*J[UIq-=Jg[)e]\AVXWa>%F"<9/%Vtis*+71f'h2^Dj\?fr9J>QC8Z>&$ZuRN:b'TVs,0!;%.K#=(16(f7.?ZO>ImdE\/,J9;LG[2)U&Q)2Yn-m4JphS8kD"e1gq.Ru._>-[J,""6cI94`;1:lg-u2=e,]8!F`J&,@Bu.WlWg7;"%-S;0*>NU2j!!eF*PfL@L"RAu1C("FB@<2sZ-uH"Ql/n^Ao=0U-0X<g)klZ#(N%Z/W7<E#\n"B2')@3MGFo:Y*hY26_s3(?;an\.c%s4dJkh^!;)]VB*W!PQF2s0S"imAu*Or2$3[(,FI!bM"/+.0DX?N:I$V=!eOOh((eBrHmjLVR:YYIcI'h+$P2Sr;GZnj7?&#/U:hI%Qa?Dar:BI3kMoq=6sm:0oZM[78oIBuh)KdGRVh)/8P<VDF@f,DM1P:sq^8q10-[tRGac+:/<qBpF4$#Ef`X]^%s$D#mZl`'-$Uu9%FtR<>T/1F/Judm/K#^3dPq3M0QLJNf+uk.4[a_u']Z((MPBKoi)%-NO,C"Yt_3;6s7Tg]D4>#8UP),4X*os^$h(->-95r.tZ_G\=%-%M`6am2bc]9M<\.,"tc'LF3->uJpGi1L[-Q8#P\^o5?4!##])l<Xe&mamfbE#_B1/5b2RFX`p5Tt&8".Y>D:ME?nu>Y#DDA=eIm%XTYX#oqaWqO[YM$..4m^'MnRu3,gL;,lC35g?)+"5c1n"*pR\m#'!)N\L+EH=p_dcf9b&2$07gSCBrFeF^0^QH/8`,acP3d%-X7u%`tjSpZ;h`a^:*["nBGQ#$-;M<]$sb<W%ESL7P\$G[65@']7:DD;'jXkJZSbAV7.'kRL&Ys#O>8metG&O2208\OQ$c2'UKFr[mVMc%E@X??IXNXTN&i\K((o>2Fm1LCco[LXYUBtFmD+8/0mmnB&r39b"KD:kV)R[[EJ`NfX%Vp)F\G8o4DP&4MNH[)%-X7ukEZic8D6[t%\dqI&)U"G[2*IBH&iYfV,Zq2SKB30<9JWTaPuWC:qs`A+!Gnr+Um]$3PNQomg(!D2'M_%a@$fi/!P:oLZAA%33/`q$pQN[+(,l_a%@=K:]DLqKf00q+/!q_A[0LdMAN[)BV1Ce./6t=`Y$DYlg7f>nH=#g"_,9jYpX:4(\N3p\.7/'4h/MDjPP)+a'*&R8_"j*>YF`3*.%=#KqgLei(i+R=Q&TP'n*dj!u5)$eh_/!naKAn/coWp)H1Hp=M[D<FeI"c6uHN5i(XNp17Y/16*uc_dYtoXpY:\"8U<7].A?VM7Yh%"h\?]_(uRaNJVe]"K?`8<55Ht2ai%`;\\Yf']-JW<n!W`b\n'X=ogLof,L?+1Z\8YOc]W$44ffRW\%f!YVV%(>u=cu$)HDeOo.i6%h@/*1Pg&k)ml*tb-!8R?Z^?AX*+\Z:mZeo;Di!sc2>r8cn)jgD8tj#L*:saj#s.)X$+m%aPVC^s.AAa`m:M0VkG(X."bl6U.:=:C%P'U2<e@?`c?d7Z$+["#*WHq"\cA_>t;tUElGuh&FHc3o0Il3Gi7BSA?UjmYbjoRM7gTemn9Wu()+mEV3+PZ+:12:%HE3ju@`9(Vq%T*Q8PR9bdFoK6R7)98+';:XI67r2r/?Hq7Ei>FHu.8^#k(B^pm\#pDMcPX_[ipqt!+R@kqjf`Fq%1s]FKI=(s<'tRAr(H,+H]9_n%7==8jOEriSq5]m01M"NT`E?p(^u8N4V702Bh]KRZ-.r-e^T-NW6[Y=9$!=G^d-`!u8.>-'HIn$@XD-qgMC.3liGh></-U)"9gBI?%><W/B4FQZJXD-qgMC.5BFD0f9p;]kbbsu?SkjFa33ij<s$0cEMffj,+L><NY=V^<L.>asf;meH`)Pdr`%QE.^B\50CoG3.I(o?=s%<D:rjY[W]+BK4LXS"a?c"CP8uD!+]]AlU]g9>dbq)PQ,/ZY`1\URr?Aj<^4^;pgW-Z>RK7%PgnX2#B%!h&AD4Y%mf-*Cb?UAbKFF%N`4?RDr@W])VMpDc*f&J0O1-3V.%msg[tW/nE-I3X,`($G*Ze)J-0GC1lb-m,badfYR\\fbQrhV3kTM[k^-[5>>fD.r&B_Jef&1@%f30%]b@7"m_3(jB,i=?hnXgaTL><.BF1\,un)?ml(cE*T0\K^co,K)BSVD./pJ?Y%]m]K@)#U:rBM2($W"A>Q1/<Tr$pUeFfGrQ&%@$\/5R@%qPhn9YumT6sRHMbh%CMO_hS-I/r"Y^O!(js%+A1OGCQ/J9;DJrU!1l0hh/@Jdio.?aHQV/I'N-2<,s3,M1qhiFunW\u3%\D4T-.ofcTa4Ru%F!^To(>IS<)qC!+bHc)lE&)!e$9pZXZB\;]8oSmq*G%W[Q.I]m1!+3u`t'[[UU?\Za.TZUR0ec@=:?:Toq0"'%V2/SC9qpK=j!&7HFMm`Qm;QSZ0Cfch!QgISG:!st.0530A6'ckD]b$_(a_NKL_:C"j8)ebeG!.:RI#XJR5$JgQU;U:NHN=u7jp,h%7)_S5O;cH^,#\NA4iYS.qc7.WQdg:mZuSoV_?M6m\3($7A%>$3'EP1k=Gu\MWBJ8BlMFUjf9Xp2m`$FYq$:C2P.H_D@k$,X$&mB=%MVAK*5GOO"LoAh0$G4$*:,Chb8P!O3"sij&;9*Y`3boo@p7ZUHOL>3_H]4*;pT;;%8*X\]kjIIb3$K6Z[0oFbfinG'9*ZrSbV3_?%#[9?krm<7m$#%V7/>.[Y\ST<s1(iU:M4i/QYn"\"ZlMZIe?Ld3D\Y`iYM"-[W=AlYBh&334]_<hkpMYIP,8eppB;qO76$]n!ZKgL%AOk/UbkJcY7#$\m$5!p(@<IF^:C+9O9UrR"TgCLrN"NWtZCS%t#`)Z<;;Z.^C/B7t.76upX=gLLM-kG%JPTRmJ9*]+',m6+KU84!%W)]5RH<obd,0Z`)6T.YH>tXi)\#e:-:,.)#I-sU1joJ/bL]mlB";\d'A7@O(m9B\^Y1K#o:.l%pbuN@VeF"]!fi&-iq*a<jC-/Z;%6/WT".Z9CuPot4a:19un!#Z1k&A5^[5n'(g6@4ad>E>=0N8tf?>D5r3L4"-I@-5^Y8F$R2p`[;N.81;*8rS\/a3GOA-L(D.@FVcc%0](r)XtLbblkeJ8*Ak5R'0j^=;_dYMQ+\.,LE9ojNEhUpO0c<dJ>OYcDqec<P#W1a)R$[Od,nut:_[AaOsYi;buJK;%V(^(>"lo0%Ru0RLIccUnIYO')!6WNqjme1SN)-`o1#7b*0(cL7R5YiXBd^jlE)9V69K'uaE0'N\<\:1a]]MOFS"FsnZ%n0m0]cJ`Y1cI5"^8IW%p`s/&.ZF%;.f?OHR5Yh2kU$V.;f&i%6F;qY&p-SST46>Kb+gg1He@hp)i?[u;adsIc('RR'r-^rB8#e8<ir36]]MNjS"Fsn,^0nG%r@8*.4iGV_`[=osR.>LHOhCLX2\S@5-U]>2//$u_aA-ThBTcARkoR%=i5FbjhGA<aSPUKYG(`^3Gc@Z9>boEc#ih,M>"mOmc,I[[%5P'URj4ko:,GOd-*/.YB@sjG>Ms2.`\Y-IpBAQHeQCX+n0I=;&Cd]/^V[PX3bYGHQ/KA4_Ru5:%HJXWM_'rZ5J6aSAERn/_KGOt:%jL`;%Y/5GHk+^e:@.MPRhT^lJ`$B'?+q8gl_tYd`<mrp4@oU3pR5[KR5=lEHUp/,oW\#q+R)dJXj--QJ9\4NKOo,Puh@.O),frXZ%;_VpGR&.W/I$.Kfko-`[P$c&LRj#>7&<h#eUnnWrI-WLFaf<=%NRqD\=n=FfLu`G?9T.*#2D./>i]P4.=gaXfGg2A`q3a0\NFo%d%E]Yfb'0aF6e("p7=k1-H=M5kiq*_Eo=)=)7*7k)oOUH$3GK:o'BD(RGLu&Wr?'.jeSOW*tEX?[<"Z@[o,/n>7LNOH2CB2um-J,^6%UV9eH#nloST>iqu3$SgFdTBo88hTmT$"L%,IB0S:ZdR^ebHZlXBduQU;Y[S6V&lC3;;Wkic`HbjYXmPd8Z[N/-Lc_eBs:D=Yr2?K%<S3pHB5c,M3/L@s*FEHN"-XJ9C^FUPnpRRC5I8cG64[R&P]]*^.,'CJ*DYWQnF2Bf*=bOG$O'*@2.Cl5@FY*&f6Ta<@?Pi:2(emP%j#EDY")2&j]*]M5>4j%R$Y5]pT>@4g7<pu"M8W=sQQe`8;K.RbWXjG!-ZRXrD=Up2M[[c`.=jK7]-kHCLU"d#lk;[$<]9DQ?[\RB%k]4_q7%jhJl<K2t2ldR1kaK.+(@3^dCYHVW=A=CY=+[ON206l55^pk]/:9en@kY.u_(YP49n66D*$aP__,JR?XATd0N'L-Bhn9Z8%^'%4FiN"jtJob`nJm[pIS"cfZ,\0I8,W!a"!Ppq?BM7/3_<Xb`9TqIh0bqP0,l$IER;#O*UI9hu4;/@0'lcJn!]b+GpIarO'"jCl%@t].\93f,ZH5Dp'AL8%s?]dmCj!I,n":lHqJKb7"3t.)+@$`!ZC=%+,"BkKb95[G/=Qo5k7W/O_,l$K;R>K!*ENm)[&M$TF\=M`m%XITGT*#.V2;kU$NlWslqpZkKA(hak"-%\4_-G_>GdU^:I"!]\"*#WT6(_@ZtO<cHB[K<5Lf9b9[67e6FE]^KP\M"JgAAlU:nKo\O%E]YrtGChd<;-'E.'hI/a0>TAq<19*Ym_G7o^H@mH&Z5W"&MJ8/JibY/Ga?-UAQkgF'hI/a/]"\GWUYTdH982T\M"Jo9SA"s_i^g;%o#<#Z'$nQAb7b)'(aqX,:aV'_\lXKbqt26o?BFI+Y`.?QX%D_C1e])&rg7kB@+;Ve-[5`d5GB#VUh^_/HXC,`a,(,!%uBVgRagam%]d2=Iaen5@OP><e^#<31H'+=^>6Rq!lV$_(C$0c0i!uh[nB9?T7N=D@i/fASD[-ILLP$13d[+WO"]G*\9CNp7X$UhGW$\c&="P:u%i)CBRlk'f`JH<%7:lLPo/^^s5V!cj#f\UemaW234q^6XFLN;X9UYoC89`-Tleq4">Mn!&[:gm,R$BTBP6'@J[>R`&1DWaH%2G'!9%VkG]N],b2a=7pIj8pH_+2A007IU$<%2mYm!TV_e[N.ZFKqNeZSpG,:qS+0jqZKX=-2o=^q<5g]7/%/8SA>%Td<D+foe@d$b?e+e<%+hjP3/&Nirq$l.]16.oFN(oKs=+\/16^5?K\Mlm!5:%pj(YCGBcPX_fcI.SB+R@kqjf`Fqbn-N07&CU0YHkQka]-,B[Rj(a.YH6a%+lZkZoG\sfR?J'*W`2N%VkV(`J[A'PpI_[SU\;j-h[K$h:2K6(:eO\A&i,Pl8U3m=Yj%^.A^bRPpbX@J>brS%`d&=>3"0<GXB\TR%LlG:29'4t=fkF'#nWUg%"%$%5n\[WcEL'X)#,ur:PeX6_2a_sUV`[rWdj/e.1'#W;8@fl8Y/4<(L.HeOPAc3F1nt-)>,$H!;p9,V%"Q1.&g"0A5:^Nrc%?^XiVV_gPBhn#ac16%Dk,!!^5k]JhQ;e&-B/s$NrFUkhk>[[XT,6m"'rBRsa<jO8/&B5^IoXs9+<[LC,NH-G%q+>h%%<f-HC0("F_YQ79/>%lmB\bn4ral3gi&(5nW[WCqm+hflL7)U)X*u-39^&,g8%.\T?=`oX$4C<9;)#5l6'H[t3WEF7]b7./%=6K%DpN@e0CCioHXu7jcN%tcB9-@FUFftrJaD-'Kn`VhU8SPSd:(3u9eIoq=7boT25I0#"/i;dt?,S3&<X\8FQ$fmdAKY1oFftrJ%aD-'KYb8b<19i3C[;"Xuo%@aaUkQ)AQ/E`eD/TZB'R!dVC@eO/7%Aq2-'0^;\lXK5A@9)k379!+6"#)JR>fm7<eSq5+Bo\*Y67A)%g;]$;V<IE&aVqR%B7l!H`7(s3CHFZ@]j3Ti+fY7]^on[>J2GlL1[k^eq1g9*4P8U8k*O#bdgk\LKi."`gha\&.?_2[72Ta@8Z(4Y%HUl`Q16C)+\lXKY>HO2+8*ij1[hFt4=gdkFphkEa5+Nm?0jMC2M?kp)$n??)='+]]AF3(/"P""?at@_]TQ4Q+'rm-Jd;e&Hj;irL%/5h.D(a`+@c`BL5kun*bcYL?QfK2c\;2*](+c*hL)PldgC/-OO."'=1b\7J`YET'U4[q:$>q;T694mhLM3<D5":[i_5.pjQd)rX\%"_96kFq!+a+LB+EVS6gLFD]-i8p&TY3LLaA(n!&Oo#KL;U51'BF/gp#4V#P,R&;BUXamQ-R=R`H63^sIBJ;2Kmb893(ORoVYaa)u%f>UBBPoW7,oc5QUlUtcir>,XX+G0kCo&Uqk.$3\$#=dc*&uK%C,8O]U;r=ta)BG590?9lg,[GfX&>O=Xkp0,>8e]*5-PuUX1[,#e%;6X;!SmY:Fa@-d(=Lcsm*JUQ'*>ODA)q'/80^=#0^&fLfXpL?rjL.n0O.[T@In,i!U'j@-d+Mitc:Q^o;*>D'>(KQ.CJ/=<A9/]o%jTt7XR[!6\jkio>=Bf#9),T$qSC1QsN^Xj![2Yj3f9OX8Lp4HM-aSG?;RmlVInQ+p+D6]pOWDAR>XU7h;gs^P<ai`.[3`+2[?Un`%[ST+2Vu?Db40g9Ii/.W6iA")>.:L=V/BILd_Plq2V)+EjG#?JDcjm*Jkrtl^2.][uhapd4Bnp\#a7+kA6pT9PN;?jb8nVj"Mt;JG%(90sh5(gg3?#g)RXU;uUO)[4uJZMT-!DP'ul?dC4>ib97:Vn.>YaUgE1JZ`T!Q:KJPQsL<PsA)[bilku*Z2J3A%_DU-+8VO=m_=)%"P+iBT2FU&3"iDVMA!H?f\rJ'"ZMH7[&jJ1qt28F1V*bnkEaa="Rd^5g_2%fGZ_\VXTJZW.htJ1gY/&q+EbFg[5/J`C8;6oBJi4+%6;LEDN"s7U(hU-FNVU:g)"haeVuI*9hFoJSRo$?(;%D!1Rb7W5+J38rEk4bW/oL)L-JqYL>h:g[TV&UO3%<,.JUF%hl`"'4;_`>p%1AQYKjq=/;N6`MmfXp;65X%uq]*c.O_I(RK)iC%V9oK\uaRcJRK`\f?a>2s@<^>0>WCXQh-f#3)rG7j0WlWn>PQupl_XnPM5BUZd%-&h[Y7-uLlGs`a3G!]`78u!As'=a%E6YoPO.g[?`fMiu&UQ]RDr6S0bgSn(JZrNE24-bS7JecJm)QUEA_aZ$0:oGP_-4\OO]T!YP%d\PH@N(q]BXajO"VIBt'Sp*P!DJk?=7H2CuB<s2L+?%,pFd0p]0".n08N.@2jsEVm%ngEu$D59/*5j1+Z&J6Ubseoq3pDACfPi_m%fGpltV,V/M3/C;UFf^*3hpK\D\tNdp2]EBudS.&KX9-4n0G9I>.k+n$MgJM[o-V>ME&rlIb35fD[mfPS0"97`;VbUt$'>Q$G0p_D%X%)*D\pi9kjV4Q%FAM?m<S(gaap+AE,Iso>Vob0j@C1$=#3J1f8=;,,42dRGJmQF?J,+[7UYV^i_*m=W(M)g2,a1&eC1Sg(=k13R%+MP"NJ^p*"g"!+bh*`>V<O8bY1Qglf3l\-q.$J&b+ruCDo\kl(9ni%;Kt3dV(Sd'u&.g'AWcMa;Lpb%hLeX*F=q:5+_Z%=`HTMq<%M2b!!-"aY#K=C%V[N+2.$Msoum-W&Me(;\_Bo.,2*A(uZ%Ub4b]rJ<;?XV=:P=EmT\0tgbXNBd[nS#q-d:+,N!N4*#,]bKfIB,'e%H\DjpmDraglls_q$4Ir^--sf9oE]e^^0_U5Wd!,u<#S6JC0,e"S[W0f4da904-"%l8kaR.Z#g/G@=]jJJ;rWJnlQPH5ZK'<lk!85%R/0Y2naO5m0])U4GM!(mb;%RT'"G"g"#7Y<B$V*Zo%o!>%`Y4`jX(3oFftqIq\?9B[pOp75dnN`Ig*#!JSb^OPuu*6q#Gsd#0IoL%021]`U#&cdl[4CZmHmaoZeRs(A4;+3dSObCn-S@?q&\iU%#Z*<EM431qGq%SpBh_j><J,=RADBgZRd`uU'Wu8<>8q\\qI9t_j%n*%dqa/5.j4-1E)f&/arjL]O3Y&<*Ttk9RK_9YYVX-Q-WF:DpO0(rf([e;.e5$B,o0GRMqZV'Ydb\[RhWIk2q,'ADUg>`C'DLsb?UJD%F$:pZm+5a$C-WJn8Jl6"W_ApmDXoo+9c.YO.pO=04G5sk36b>q44*.7Q"bPVm2TX%4k=$YE1BVaaCqMj'h3VTn2p"hGUn_L`lbT7%Tm6[ZHP&r;0X`Ce[gN!W$gfNpa.Pc^3=(a`TlCLu&C-b>Q7uJVorZ+1`'WM@@X&;O!fAa\SQPYVM)8>4a4Qhcf*Z25WuSAf_QYIs%+"@,MBW2OQ'_F^;W1H[$?gbfaJIeW3MW#@L<u;9$Z8Td."Eb!-,$4f$H<+J(p"E:]1Z)c+#fuA:RWQ:!LRfiW_Js%b>^2u(Ls\3e%qB]0QE':6Ul?Zb#S40`SV'2Bm<g1gqHa%k>@'SN]-7P^rLDZR:@8[`W!DP'uf(IbF3R6B)S;)-/=A:h`m^c/X8R`5N[&W0Nll`$D%L9X*Jpm0C9$DXaKMpKXZQ@]U+"H=*DR",kSCALdh9&h*_b%ai7*snCDYmno>LHQ3s)C2^)1Y8F9j!]k2#eNP&kbKs9`?h5a?1rrZ%p*6fmO`%;T)7gSmlRXMZCQE$P,.b#o('27Y!jI5Llbo%Eob`[J2B85YXO$qnXDA"@.q0-d=4u6uKNch1XL/obBSAc+aN,K$a/68b%"DmSUfT@T+3/(4!E9p9Z%.dt]I],'?VH=X)Rb!i@`4Z8B`:O@'GtZaNC^FIXk4K's1#&!(K9hWt1oA1oOm#6-N7//pWM>837Oo-q%brC?mI"rU;E+.WQB^]bKrX!B-8)UMofTCS,coN!:rAdP\8_kp;43E8F,FlSflqF$t%aurHPclJC@oag'L"i:69mUN2(R_7<ku$$[%pC:@RT^-3eASP3n_VbkRhbr-+(UL1'b)MhQrS]H4Cr(+"W1JS:X9HG]QC1LqCfD[O<:#0Sl8qpCXd$X(>u)_'U7nfN/XD(Y2i])o%_pH`Zm$ft4-;D(lN"QGh45Rp7JK69<DDS&*i`D;QPE2E=V=2Z4lM$b1G!A</a6<ng0a`X'RC$6*Uj8KG<f>edAtM/D`l9"q3)5'!%`/]f`Z14A4b.MdOB90?a^,KhAAcY,lB*#+J[rX\Zc#.^b7XFgH&Km7lNN6!bHH``1Q>2iY<5\/29`uor,5(RSPZgt';5S8BH"s44%^)dqY?Wn:qA?gUV&kV?%1!QgPjBf+0r8YT@4hJfLZY_s@DWd$W1R,<>]n;V"hE(]EB>98e'c>=JA'?Qdc/.(C92W2RdkkR%q8A@6%i^._TiMVP7IMBnrB;%J@4n5Z-#c5EG5Fnmkf9#<N:cJ(ZI./blKc=4-cJpTIS@Ph$"IS/oKmf05(-Y7fSCohRfshH%/Ud)\APVEg%,6M@'V'"'R+O07"JFbcub)P`5m)5G@RbpYM_I/H5>/qTo!A&:a,J64F08!*Pde@?*20l#P$(SB#:17?g/1Duc#``[q`72d7@S::@%R)_$(E!H/d&r?qV7&^e/)P`6@erijE8\J+`VD`[-91LSN@!TnD1Enc\%&o'=o&4q/a*L#]dgJcgj-u:LX,2h7&u,r7pU:80)S>rB%-u8'oZ^1Gf-(49.`n%[4C)@_M`DF;LbcmeU;OMb;.u[clQLbruRFiQ8E,au@<6=)^-[*tc"t,YCoY#mCb+<nd>r-:iL[g?p9T!\+%AEbi+oR:?q2IZb8^.[i_KK#a:<e`Q'I`iAH>5I)A9,e<E17pWn(mZ"YaGm0Q,kT-uluj+)MO7gAPfTt/R73^pUNiM7"lF7>kku1O%g5WmP)c8]'iY8bCa+D@[S;pl2G%/!i>.AVSL,P3`L%L<i1,d1cc51>"P&`)[pj2"(&u!g<HLmG9n^GOT0&L-pXiK@!8H\)YlB`(o%FNI#6`\dgL_qZt]6lusqUfHM4)k):D],-\Kb$+Yu6-J'O_`7@%(r?F+d`!pMqZV,\M=u4*pU7t1p]^Im.hd0==eX9SjC.2u_HlOa%PdU.s=\EhmUHBG43f:d&>_Jq!:8nY5>WluepBqn'nSZ<UH@P7e%sL0che?M:"_+58Ab^\c0cA,;qVFM2pa+u=)0,eb.`.8\jD7Ml%dUhpu(Zm6(n`YugL7.KANK:p`2GtX<N^IHHNeP[+rdeiWSZ/TN$4:jXJk[8H,qL5]lNYpch,"Z(4BAt%`aM?"a^IQq%fuj?hb+A2%.+>k\V+*S,(43o%q[lrr(g^LF3A2#jaZLUXoQB,[7P-k@Cq_H*RGetm1OCFUWiu!^'mGp'kS8HJOkkZ`$#Aou@',.]&rasLqjg!>%@QOV2[HaUG$2E$W]jhf3#uP(O80T9m)O]"Z(,9dSbUZ!ijXn/c+_[9JFVn<Eest\RB^(5#UJtciJ&_^A'nrKD_eA4$<^6\Nd`L%T%P'%`lMG,9s',m'lkBdFc$^8FEQ!>\f'.-9PG:,qa3B/G0R?rC:]l>U!pPk)p7`jG6ji@dg"J:F\JN[GDr<R,I)rfM@c`e!%?Q^n2%Hi_7;D[eQ1`tsi.4$A62G]X3e/AH?T/)X$S-fQ1IDMNM%[rf=$QC6jMZ1R%Oa.T7fR\@H[B6Jc;p0>g];fU$_-o:E'emWM1#8S?.%/b,ZYdu8bh['h1^XlJ'FM.0,i%m?6<9D:1PN+pk#S&?_a3+a4>Td6DG/4oDi;O#=[Trb*Z*OKq:MR#eV\HIQ!#t;(&SHP]a.Sed/%Q:"cun@?DBV1;sK:J8SeX\gJo53Fo8IDT1b&Qigm3`u>AEi2*0=>r_aSh6jo(%WCI(J\aiQu8;u@q!GTf<>ZG/Y"dLf]>;je<5.L%QMR+<'`p65UL5l/,0_l<F!hA(YLi&\Mdr>\!ki"2od#Bd!P/9qjX8gqJPaqGpPqnH\;8B_i_>cI8Ma%o\p1=4qs5uI3MS./"N1.<%0J#6Yi]k(pA'mShQ(K_'XJPA+Zn..iJh5`+LkMV#.$tI-)'K6c6?m&bZ?@[PE@Z[H[3d:@jmJ>:LQF7m+_Ta,$#Aou@'/Z\!W#9R%$pPeHWR@O=;'pNX/_l`UG]oIJK2!\CB8-A)P\"4$U^r6SXJPA+[#?T+JtpV@?60dTH-r"6FeS3R#tTn1s#A6$+,RBN834\!B-@Fi%ceJ."jXjbVhGV*=]N?l=H%B;hVR=;E'-m.]MOh:Z'`ReM:5nc40lH`m(.RDNJD:oBa&k,q(C4S(IIEgTqa-gQ5aWZo6!/2Y[AQX&%3bDEWE0u(f8m2oc(O+Zm22##?13V-`:tF(h%U'2inmm!sUYC&^YbM^$Nku.hM:pK?@U`$uP2:agJsErD:TPI:.(^!E.7p1gdM(3c%O2+rZ/VMe9d*eo1KZ.PIcn(D=Q/G_Z71"IR3R!melk_-C`=sWWeX92ab$(g.5jXFgQ=i`Dk=QA.KB!H^22=3CDK08+/'N9t/%J-m%_QZsSgIJ$HhI4PR?R&"T4lNO!#eW#E!bO[;_Y?BG@i/P(7KoE<Z?H-_Dc.gXNYlch@>9QQhMWp:XMG&d?ur*-7%qGN4^kJk#conP%S98sjp?aOb.[t#WkN*lBN<kP[m[Lf&94dcs3.8H59K9WH-%e0?@BKJ6H0P%R\J4$Ch9E1Ei2d8;ijhctNoLgKND`gMFdS9pgmns2%'kpHZ,;S@9e@t0uDsBF-:o>+dEM(1H:/NBt\PJqF@E]_d8N8$Ph/PI!$*T*OGS=ZW.#Z_T5`n*:3.udu>5Jn6CWCiSh%Qt=';dJ$%F?$_^D0Xr-2k.g?j"P:4I:.F0d*";h$`UL/!H8,]&6HqHV&;>Q+r)gF%Q"`Nrt@A0`$"<49ir*O^#?mO']1]ba7(LbUu&2LH(PqV%-]K`f*<J?X\k)*C$lmltSjd(rV6T:-!;"-^*NJMZBps?&-$H_U1oB;iU"#6OZ^/IgC[J6lpTu4T%2+3tOP9k":&Nt>\Ee0jO_%J&%@la-:;3<rS'/jJi=\IX6BIV^;So_YWM^>4qi[oLpO#/e&<4$\b0QToiAV%O+["B8oLqdMU;G69qZukR@m0/OSHU6D%oasQ<!QR#(%"lB\6$[YGu7@SSNV3gb=gq')ACa8m]f1VG&4HQWrAC`$-,+o<rRFS31Yf<0Ji(_T4C/#qWf&eB?XL/MLg&45S9\Wp<VbTCjgHuu]%MMC)G6`-Dqg-Kc[3NcI'8.qqVlj7Ip7nEF:B^BOk\\A_#/7CJ(WH2!)ji^qT-<:k#=CB>#C+oqRcK^#3ouoQ.]52SjfKA,ph$C[$%B=XEu3E69"(gHj36Z<g5T`X2CNcJW>nsFb7p9m'RedQe#`o^KuU"?c\B[G3$%U,;[Odk1*CO=b[a^NmqPd&>D,G5g+92:In`p@Z"%l'<aJ(@EBuI^d*rXSib0:YZa]-u8'oZ^-?tVY61<<&fV$-*\>1:G'_^)CY:("n$%V?S1>l7Is4U_^Oj]bM5NL\jq"*i)/@ZoaY1U%B-eA6V<Al9J,uNu$\i^^J0>9;&A0=D6Ct8^Yeb9>Bo-SYT00d]V'jdDMaa_L8t>fXcj'+Z=uI,iJk<U[<-V>IioQo/F?tj(QncBJ%Il.H,Qa('LFI_82,X%jP1]hI[%ONDn@P1X?o>E?Fe#)U=aI!dc:Cd@t"3f(8Fj(_(j#//:/+5ZbQMp[H'@o2fpCZ-CBSeAnjkSE5%9LlY"8N9-O?3"e?e(C3\%O85:[SF+p3E(pO`K%&\cs&pVb$+Yu5tbdc0Ymm"O%#b4K&^T;%*a_`.L6/m).96EfMi_+>'XS\1e>N<%"?EV@PdU.s=\G[V#f@gNk@B5PF-#XO?gk_r3#R[U`GgmcHkUj>)9%'RkPfp^[<Am\:KVBs!c*e1BFLk;m&ero8U;><*ER<8J/5+A%coR,E8!u4r?kf>8J7E4W.hk'&$"Y]:n"?Mh%4i-AAePB%Q>B6)Ye[OfcHqie1W<gNA`d$[Y=po:FM28cKXLLuYh"q::bCe^T(#ir%:T1@A:IG6G9od6J7QQqSeSjc='8?2Jlj7Ip7prIDh1B[]3QdcF(`&fa8>Z[YX!>\r&3F5>;:8?]c!'8Ln5T:NF/N#L=a7j#T!6dp%"P2:V8U*ubK9O8PJ&ls)?g%CQGbFq!4[rJ?e6$;/9hE@]L>tk/14T*>PP^P^l$Kb&mQ+LO1qH_i[=Ju<bVjJ$Ra2@JL)6gfUFLQ5%S>*Q:%EW+`I_^5E`)1DT?mogTH^@k]C3/*`l&6Pi&S,$g_NDAZausg$o@/ZI%cd,2hGj9>m_tkc=BY/@]_J<NXL0.$>74:p8?MF$%S[O2?V2^3G$.?C*3,9ZEF@I5`--pZU\Imt45\E6B_Fc)1/6Pd4$#AouO<r)/PkN)t"#l1-6]`Ql$P$r/QUH*T$W\*$Nkd,dO,oQk%%Pt3?@4%ZWf_Q:OKniHU4^kJk#ctEOgWG]t$Kdc8/;1tchi*g813)[%bT"S\B8XU:@Fj5UbD\WJfPDo,"=1[Qd#<HL[Wg*HSdO\F%j#/;o8bk/Bk+b2f7B`E=e&GlcMp0<j(gpgVfMq-`J<J9IRlt2^r<TJ^[PSU1H5sI'#`lf&nY^t2S/5,hDoS(8p$nD0*HS97'NVt'%kGYXsTc\:tIJ>2&[2X\+G3?SJZ%_[Bm2j/U%7TOmF/+!AkiSAH@IjITP&"UY.!,p(>S&l\0c4I*aj9+-G#)4U56>b_]ZHP=coK4S%.g*?2KG[O':%Xg)7YaBa#%naF&L4\e<?tMBIp7/OXNs9LZg/f%=\IX6BPH-L[Oe43)LF#IHc9-^1Y`=4]!gtZA)(DN<<oXg)h$Qm%?<IgJ_B,r$bc0DU7a9biLe]Pm(e/3Bf.ShZiGa)1R<@Zi/0/?()R4EIcQhVANM0R5dqAX2818E@HA=);214T(+,(bgQ7CP?QuKhH%$3a^@a4>=O@><+(<k1SA61T!%RnXdRPrP=a_HQgK=DPK_6F#:%"!1C*Crc?S)KcfaqS`9*)-_g4SF+`GdP4m"Sc<<R_+d^-l`B*5%(KQ>IQ8/lk8Gqa(-99W9DSZIq2908L3,7(r@#TGSQh-Tjc$W;\3b0XSl$EXemA4p%]H#%tPVc_8-A)30RuFI]i%`sEDDr>_1hk:_%(n3=RR<ueTqu+`BS$ALrToe."fOK28Jd<A)222FW_pO-;n5FkUjOE"9`*O\+*#lmb98:8"lj7Ip8!)M95-a8dlC64;VA>Ak^U`ZX%F.RsZiH.&d;\YC'mX)9@aHULHZ/\2+Ds:-Mde=5T3ld1'og.2_`SAo(S3<8=MHL&+HVEY(7)@=(eBh6aHdU>JKBis=r7n+rXL0.$%[73I7Gk[DoS]@t2GON@&KtAFJLFt%Zk2mj@mm\,?Ji=&)-l#e?7],UaZU]:6*tH1l\o5Fkh9Ib7)oM/O6diENd6!&GM.'A1IoZ:1%O[adpX:BkCd4M*oZ.Q8p3!JQdPYfrZpWcAh7$+[4^&tL.iLR3S`9pGNdlNT3?#Y`(ful'>LH1*!4P"!+[PsY[N1q>6IlB\s9A_gE%ku^k8]6rG=V;NlAER!S\qPdZ]C<uGj`[(U0=2?e7dE/$nQqL$G8:2t)A?D6m$#Aou@'.]+WP(E)gQJe*ihZ6i8hAZ(2WBG\Zf,+O%ZL5u'JS1K1)0JCpV%qDlf%Q2#07#;re/^H=Oa/K$7ckP`H%0dlGXe"RO9(.4=hmU?O(dXMIT:,94Ak;8"sZH;9A_gER5n,%G+!7d%-7J$/=LJm+Mk**7j'!&O@SVG/_BjM\\I2$g/u<StP"'s7FC"!4q[lqG+7G6p-c`)IL1*rQ2i:=EKjtgN(X07BiA"sk0c,eaTDdl\%@t1F5E`R$Sf$a:f8g,d"'?P+hZh%*?/Fb[!OYr?TRhZ8o#/.q05!-uXIo:WJ3=!2j\s$C0Ur,sUnkWA'56>V[R]X-Md&FXie!%am%*Y^6q$0V2YI%gX(o8HYDQnop)lceV31hJ+T(>QfY:tF(h/pfRNA^6iXqE!gZa-_Vaait!72kVX5c8T>C0MKX.!XX_k9VmZ>_l1A$%!W"1F[3't-Fr)s&]0l8#`XWYbG\_,3+<p!X`n'[J`=Zk82N-5.rJfW5Ad*,;:u3rT>p[.?:,5If2#h-1o+pcf0=7">B;*eW*#4XR%`[!OfI)Nl>.Pia$in]fVjWk#%:hiS8PEJmC=AKTI`N`;o@0r-DnP1W1NV11\:p@WmV!]qGF,d8a;tt@p@uh8N;Oh1J5%1Sl#ctGg%^"1,hEIGr<M(oikftDbm[i*pi;6^+:V_;0(l,_c?,X0q[.,!)_*ZO/M:S2$J[Dk.?*AN7,4=;]:.-63Ha>s"jg\](29,5[<m1TKp%fQCGd<PU>E92%"VU:qfD%2ugR"?@cS+cOCcj,h.2X.77dRl/>+VF@H)rcj1^6sM:6jXM*'(^MbdKXZ+LnCH`>-*t<$BF9a$;n9e"%@7jcCgY?/qA[6C2[li)KL9f5QU;u`KM,.g50N\*2.gN<#*q70e!7ofYFkPS!.$]J'TQ)CPl!2c!_mgX:B4,qNiHYU?G^$oTTdWBO%9mQ"@O0Y(cGL/*hS11AS2',C]K?#^+O'YT,cPT8aG[O,^]Wl,c2?<fH^9!]UI]1D<dod4o9i"l,56>UPChlC2[$J[f*SQZ=/'2@B%B$#rIn:d-!,0*5*Aj/h$O$"_Zb>dK(^/X14&a)>k+&H2!4Xu:@/p2]-gj.7U&R>o\#=OnsaLSH"mK1^Ch=;5*L:B=E`"=RIA#R""%.br)2>Pf"7CQd\MA`8#5/<Z=iX*B=9R<k;`<[o*Dd?n>hOZQ+UM\pSAEssjaOJ10eH3Z#03cH*l+tR;;1;BZlSBPN\*l(q#Ri5R3%[?Qa=`?'TOEpOC*KuSK5KXLLuPRJ6e$n\s4-mAk,0U\3$MYt/!:<X4hBOcdb'k0F.C-Gh[CsB5E_oe6.'21b(ZA-(L209b9Ee_X\%p\Lq2L<*1:JtXE%GkC!"lHFDe1La*QiQ+2UPI0HoY(]<qLb,+-f!g[]<JtrWoOj!?:hM"Hn2sRbAUkqP%Ai&.@2RV(9oL!p*%eH7%lDBT\KuRI!KXZ+LnCC&b\#)eeSk'&QmM#pqkWi9QY:mAC8`Plad@Ie7]%FU'),=XQ'ka47K0<YFr<TJ^hY`hQ`J)pd#tl`2'ur.P%`UIU-`of[U/7_/(`!@6*j.EsP6.nV1$50NZb$+Yu6-Ip!?n`)kL.0lH`+:E?*X$(K.uH$a!p>SPK6ELrNUcd%oG?km-Btq1]g^%V%RCbP!gshRJc!hmX#roBP>OYd7=X:f,*m\[S$<%cLpSeCt-)%E:miAcW@R*5>o7V+k')df[j,lFt$HIq6eOgXlNklLVLnE?[1;55N%=0k\)CHmD%S,Bt%.j:+ka!<)u-+b)/3u"9n2:>q*m\I5r-$1#[Db,qK#A:pIKLKr'OX48.)J^dlX+!>@[KO/0LL)#M,FU<:b]m@G%]k1a"1@i6!Dpl3d:s6fE<"omqfL1&&>5Jn6CLO%ZlaHnJ[;#kR8XL1ma-J_m[i)g!bI"KN014oFa"'(,@PT_-AS<ffb=B=-bf3s'%O[a_+S4-1Ie3aqWJlc>t?i<NKf\\c-0eC@Uk;^$p$#`/Jhm:C<Mp9DRnh^"bQ.L4p)$%=c]G.\[+Z)ro)u;@OCa9GcIHg6V9G)6D%fgDQUh?MFO"f$=Xr6f;;+O%KM?QBT>#q\$`:KcV_7FUdDgk9C/d]-'E3[[jm,UUdk=(!a54!T$1n:Q?.d_#XHV[P:5$MH)jV7#Vs%,XUkdS[KAi%SP5d"$9BhZ:F\:(--6:=nu*Ik&-utopJh?a/6'6E`*rAQC7>HkBT`YOr>:F8_9:`jA]@=m5:SUKan+A805%NGM6LC%k!7>mgdo:gP1&eZjKq@^U/la*I\cQ2:@5$OAle4GKZOM\+^c?oFp$bYF(GBr[uOmfGn^j0C?"&Jejf*Za[T]hq'E@5/S*BF2@Kf]%"@$IJdh\F5CZ?dYLZr!-I_dFbBRV(5IhWFuP-)OO!f4,2?m)"h;4-!21MV]8l;W&KLuDPEVlKQT#dM-gg1"/n6pW_oog!$%B9CXY%S!@pRBC87S>+^8[=F(LYXI:\Uh?1T'k`u[*!3b2c]fAJsapVrkpG?I&WP5Sm.MT:Bh^lX,4CWg/[)F_GRDD@u^AR?l/99HRZgt6r%bl()oopKY+6:RO`29.1"%$SKbA)&C`9,SccR78r1)pfh-`l=<uXV/)FrCA!7^N\C@=DSBZCo#^.;R,,caD$RWb.$ptpEPsTGM9'"%E?ssX&]e#n;<Wq&?p+_hN+AM?!sWXfO*);*_P`eMSM&^lXhq%*("T;H>o?2FVs%;&I[rN[(AJ0-.q*6gY%n457on<TO:6Rf#q2^f%1,36/VSOc+N7LCFX0=god,"q:cj.'rTccTJTYq$Bob^ntmotMEObI+<5R%nr#Ut@ZiZY8+@'YHj7JXYtf]X+9PP:-@:.!p8,Xo.6%O.k7Olcke&+\T_=*ij2Ccrsq&c"PI2^N@^"9@dG8-rR`/#LQD%C"oknKYB;nr%0#gSqB'4da%kB\)jhfcRR._*PjWmAX>naVo%kC%l"'gQZJJ-AW?o_e.1[1W@BKJ6XL59=AQkS?nnQI16^T&ZNZ1';d&N\VhN!6_i`\<_=T/!N];SU%cI#$+$5L3qL[hjFfY#i6%9Huf%G@]KGi%uY>GF_A+%Ji#P7eC8Ki*Gs*IK\5jhC05[E(Z2/P+n2*^qXO++E$RGr]N?Erd2A`TIPFm$8i\!Soa9'afl8md-D.I_=2YP%Ki-`C;<ipC[>>>ZgO8?oT#EI_bpCr^Xoh?*6t5=3Bou?m_PE!?<mhgMfLR'g^N\C@(cm-1IXWR.*63N3n:hC@Q#GbsmRJb1%s='S%];9^c-s`uH8&f(+VeSud'TW=4,i3W9=,89E5:\J?[o5$<<=3s8U(XhN@S.M`S1c_.3VN6BW\E&6;_d-o0(bk>[!kl>!Do764GJmi%Q@Jd#<FNU[Vdd:h?0DFqBPC?-`0LO1='%"&Z7K*k($>@9.`T*KL%a(SfqPcq'!)]UO[LO9YbEU@GO1PaC:qK&Jn7C!aN-eaV!j"[%l<#2IG",T.rV?'pRI=@6Z+dtBEXe3X(kX.4YJEUE'`2+nnuT'$`MAH#;:2nddK,C.hO;#N_.H.6":l'+8GF?Z(Lm/^,j:^)%%OO3%__<&795f#Vh^XT]?4/K<G$BhY7sW+rboh=f2/(h#=Q&EPhjB?j5\DX<OMn_^Z)8=FN2F=-'m>#iN1%#XONmt<6>(SSb)2TG6*i'C%3b'@a=Jc+i4[q9)^/`hYV/p'44rKmt)Ml\*f=f^`MP*j'11M;-"r$'n,)hZ6Ffg1s/Wm(N]$:p.KflpNOY8A6S&i[lnju]c[E=Zr%H:gcfO:FW3V$Z!mF]cC.bk8WO'ZP[6<+m'h:L]C8V"*OMD`qB(M&q6T-aJ@AQ*G^2K%KmYU6V,7H>UbDa0%N.OkF/#aaABI>9Z`b%g3Jg7FESKK[*mX!<'\q_N;?jb8nZ!UF!=4h/.#8b8md$s8<gsK'N;i9W9Q'3Be5E[l8;Mt.ZF41>=o\qP_^aTYaUgEX\j7=)C+"q%ZjeGN0huF^NMQu]>(Nrmf9OeJR;.0)4f(;BPL@-E>#/k+SR2clFC#7EJotgu+sF&*0_CW,RFYVjh^XT]?<^$sX'q<IP]g/'8meA-%Q78A4<.O[:,-!\_;]5dLU!6cj[0!(of9X^M&%s2KB.W\X#+bY<#<cWPbC(k'JBeYbFN.S.\ZYX$IB,'e44;lk1lHErK9h(qDJV=P%*+Tn]O&'oRO3ZX\OtK07_[3]&YB"?1YWPo4d>]gl<(.TT'C6$@m71Qd0c,8,f^d$?lO^s+C#!h+6t'$&AOc1*7*^o+%.gg@W81F?%$e@GfLGri6c#]?STZHo\oRsXG,I#b1%%>,X*aMmr[WE?eQ#f7mNYuJ<()os60!^.=I_M1.7G4X%_O/\l'M.L=Kh=9+6<Qt=S$g`r%_haT!L)h[N><<7Gnsra?j%ArUe\Uu,'Yu%&ar.'\@d+tOg(UIUg-^i7;h\l(b>#Q,_,/_2pC:A9:@QoC9OqU9HE<?Z$-/$a4/\,_%_K#7_o9cEV#2g2A("0j&N,$`.%#ZP1[nA,bl$EXeXZNU:HtE$Q@B<"TNkl<R9]>^HHLVpmLseJC0d2dg1U-<UZ[+Uo<A33uDo+_I%Xo/O,21@]C:#^OPI0kf?c"Rr4!kA'f-:]2=Rg5>8j`]6D/s[:/`6EXe=KEsFXJPA+[+#h^?,kgTIQ7nUqH5r?(1#8p]a@TrilHW6%jr8:WnV,cdI2L"Q&%Z-Nm[V@aTf9=I-u8'o#;%b+CRD$Dd$CoCoL6X,FsT?P,!(m&53=R_0)?Z#2Fir_Y(h7Xna;>]`Dl/gd1b*b%O2+qgJtn0:Bd9i"-7Ons'Ge*eO^YetASc1b*htZFrY#'E7S\ool<VDn`0e5Gd@d?'?#&W,&L(SYf4.!=NMcf3[ALBmLFo[+X&,XM%@:ibh$d.W2[7-F(`m:<eBkbtfV<o;11c.bif,"b2/\VgOXhEA"k)1[fU(SKp&etk"0$G2cCURqp9POWuO!@2Q_k+*`IY9Q%"_NYE%gU'1'3s<H!8rR7X-eQ(5Z!CXdWA65`@8#BF-HlHeHR5K27,$S"KST*'-`j]t+UPKM,&-)iA`"-/[Dro$d[40*k&/3e0/DR"0%A,:%*$'*n^$=F"YpF!o[%V5tLOZQVXL0.$[DnM$Sh[6pj-ZQ5%JVZTb-'>sIFmgN,n/i&9M62uGY7<A:9Ba\#ZKd5]JGVSQG.Rid_B)L%1/TeX@U(!R)4D:2J""`EZ'aJmOc]W_+Es"4'&tl?LJRLd/9eNuW&9RM=rUe.iAW[XUoin(Y_5pIl9ZtW1iX8]BVpub-%]QS(7:)u%r$#pId@>Vn08?cu"jK!c@Dk5"6=KI5-nAR7(AmA,338Zgic6:.9FQb+OTEceoAO(k2=j,nVD0"rK0]6$-%!L4q[lqGo9l9sJ5%_-%;qs&XU(-A,QI85uqi-Wt"pMo7TNSe'nCTL1b\rWr&-=MJRZ6a-Yh"uWorWpbD*BOF_-*RWBFD(;"a[S:'M2Oh\QHBJKqKt$AqRBd%$1*?o,Br(8,7[9nCWU$(Jo$9gQKg7FpQ+@`KIJB1VrP#@PjKr:R2Y=hH`*RKmWNOnh'&Rl=k[Nl;ENd$[nEhXNpUo)\/_,CNI_9"%j,g7pc9_;CXUdjD;gZ2N\rELVhDX9'J&5Cd&QDo2;tf"eU_0TXkq&\u:!L`mW:#bEAj;3`/>3kLpWtb'j2V(NA`XgJb$+Yu5tfGB%A)k:ne3I.&bC&LbGK3sY^^r;VP6Tbl;3jpdpmVrBKiOo>Qj`'uAM&?!TVZb"cA+kD/10?2CrFD3k!USZ2T)E[S\)P_R$tr](Zo6b%:bGX#k=,P?=\IX6BPE_l*rtqmA'DTYS_Z'E%%M#tq.Ma"=tj)6D*\;m3CuG-D&,+G*Wi=3mn2uk7`D0:2NNn4=p[Q!+Y[`.p1(sU%<)/GD;4\X3`45cQ_M,Y?.u/sEDGXOC<D!4D[ItiLf&e2Jm@ML1;C=USHnnN8U!^Ih'b$Y37Md;poD_bFe[=%L*:7*PrkmRuS;TX^%pC+U<8-4MT#q!2@b=$=YQ=M6e0DYA24S@NCcRLI]CWBgb4f>lgH[<97\uN?a+dGH`j>")Xe_I3!.ik&+qI.Q#J_E'dC=TWWZET!0%"g!%c/im.^MaXioG/\[ML*7,W<Cp8"e]m=A;5CNQ<DWD+Bs%25;Y<jdeKK3A-"TBXL8X;;=13KRNAc,jHnS5LM)qBPWBJd,U%@GB%S_FY?hlNppfEBMXgZabNeK'-=(gfR]R\8hB&3>O+`Zu$j]iY]F3)bpk+@AQLLr1l@m2Q1MhijT-RXKD]bHB*B-_I/A\6s.p^AG:`%J2&@(!&D\5F?>e.Ofm]H/^kU$FOi:s<Be[VB_[5pY[mE!^p*)3OX*qT;^8,J3o.Im[0G_sWk=&&G.kecZr+O`4'i0A.D9k1&)t8K%3QRfA'#,Kl[)T:n.Y17cYDO5.^jB9>SuPN96LF=mpK_]MSr\c$IJCWmXguo(\G,biSLu8(NDNnr=+Da'HR_<)?^98n%'qSY>tu[.%#W3e,RI=fEl?'9Pcp2<IkA"3*2=!4Mnlq&+@s*),K&3DQ9Qeh/WXj5gekf;+,R&)RcGI9Y's@]5UA=D`YU:/lq[PZX20HJU4?;Lh%[AoVqF-4H_.'c+aY)+e82l1f7<QnP]br1*+b?rpfIRXsenQQN;TX<8Xjco@*CSnI!QIeaNi*4do$atF>&1F\=IU:^`:UEd0b4G`;%!Hh"Q*@[,jGtQ4:abSpoEbXbr"J2^+QAt$^=gG_++C@-s*=l9(>_%p3kpB])11LeTSMcCK34TjI/!oN8q8uOe<soqg=T4DF.O1%[%H1ldY%Q*:b^i%&aNq9>_hGoo4Qf48rD&iE&VaWUX,i=@s4TcI9+lLOZ@16ELPV-Q-`%RgB['&5<*7>[B,(@ct)UL``XTKkF<g+O,%i[Y>C@F]4oi609m.At+M$@0Ye7hjEHKN5Zs3V5E$geHTdj1>Z5"DZtYf6QT,O@_sX;WKbUYe4/-^mfJ-<oiXWgIi-9dS%+:G4Ngc%<@47i(/GIU"DZs.W$1P=Hs5Yf5gsp)Y[g01WD;Q"#[^DB!M^Gn`5G9b>,D?9RX'3?gDT@Cq(I<Q3!ALV>r%<PQE9ZYlYDeEn<G#>%n4*ZI.0ihki[I0XT;H?KQ;(64-`W=.K@A,=4%8fV.]C@NnbsK#ZL5K7oMhkiXV4?L_45W[l=)1aWSAsD&kY^j(skN^XfkVoik3Qn%_+<4J-V:PC'TqlHM6*1YeO4NiH9mFn/5a6EqOsY^:D]t[c779H[*jXk_s*9=;\V&(q@8eS:k^$.P6Gdq(W@_5`T$B4.VlJZeTW%\%*aYn@J^R^TPf'lGm&sBnZ9Nf7U+n!EV5>soJ#25.lbZ_V'+EtX<P&Vd7jFk=Ng*,:NREIG[RnH\mU?UEG+#EW,)i%OWX>d4UI8!S%2?QeWB`jctMpM(F[U0*DEQHO:0P09375f?"$C4t#eC2+4s'jQ=POCD%^jI2l/=R]NYBjGi=,DD)QUn4u,./GrBc$0tKO'V?/bi^n%&f#8.f977EkO\\ZHh'GE41L,f-t8$r7Z-3-@`cGOQX,k`6lfjKgmD-\QU*"d;CIUKmIJp_RJ9,F4cZ(-0#!]qecT5[dfh$ng/uqn%;2Y2\7dJ<i(4DAKk:*:0])pNj'Hn1nU5d2\IApnA.`h&67hpS)ou]_O9\[-]XtuW":1m9G?.PF8>&u?)bsYeP2iLErfA)AD.N^o_%9C@AUVVe<>dbq?$pLd1[*.DmBk7FRH1fgM_@9!E?@DgVGFWJSl@R_/Y;6@^b%gtO8nr')tn@?d/&I('g>3kKuEIP5G960ae_&e2N%QhtmQ]UCgu=cm)*M!2oO,4A1>fds&c2Qjbsqn[!K\^RiC6uoHQ2s\i#rarLhe_7BK(8gn,!p2frM9%gZOR-H?ND.U*<bD)5!k!$(%e>-&a>ZclLG<'X%dX1o5kfS%5!QrH5AG`,)Cp>=I](1RVI$7li'9])P;Hp>h<=Z==Qg<m,YrFMH.'c0cp5KT3?n3mI2e*OT2i.__%8M?Zh.8`I>,:o`Ls!:J\LHs*e!2]1a)Qb%'=%;L)nO+4YDEUqXM%%k$'=;IN(B/-W^TkL_pa&`ULHs,AGa&-LL@&)LC^%1jM\Kc'%.g/1^9*puhUF,.u,T`:8gH:^KKG06<J^R^,as<[-r!E)AN_#1Qc[AO20hV`%U5KKbs&-XWg,(1SB1^'1YYV'U0G0<L8o$T@S@.D^%(c!lB,TZ0O;X/Hnd;[Seq9g_d8dQ=b:(eKM<)<5!+ejdsMED-'cC5#!N?A=o>/D9FAdM*bW!jnN3NbYZL@MloZ>0k)!0DPuQHTU8%*rN.m07hh:"DW-MO!4>"!u.gJmb^K:)gS4>>`9LJ`=mc`i,b)s$$fQb1)f9,WO,6fJ#"n4'7>7L2)k::C9EeL#P$GX_ARn&PPU5S%+hDaZ&JNi-X<.%TG$V&+6_GbJ$&)s`Wb:=A,n@,:g+j+cp0qdZfQl\8=YEVJS5rf7k2Ap(C^)o";iV&SCV<PV;5j%B5F>qt%9rsA%<c#*VM24WqAL\8E&^5&rWeSdlhBf6AQ)%J;\,?r<NC0AY<HnFoM\Voq=B^>n_3Ys..4VIT:p(X>2`Hj6V20u*=1-U&$)`)>*-=5W%)X5a*=K7*E">$\/)7Zt4qrF4<T%56;ElHZ6ViCr9kY\6W=3Br^Rd=jp?NRWTk\F:uq`E<q)kA4MX\g\./]6upC^il=LB].B'bh.p%.T6^BZ.:9B[TK+[r">rf6ejVhI3lTL3S$?`O,b_9;=Q7a7'NZ66SY=:8CfE%$k5-W&$G8i-sHs91Gi!El]ncuV@i/(L6_"0jHCn1%A!+lbQQs_aC;R6c[#XNJ%1$trQr5Gm%7Lde%L+t2)X-AuQpiU>=_eI.((EIcb#@[3+0aj<r5dfKZB7j4dW-&J`U+0oH3^"D\Q-Q3%WgY$2k'4[V#kgNgaW^@l'nj)O`T@HBHjOm8Ps2r]b[FYH+$ca1VNJ#Qm""gd@!+>F^e;Meeb]]^D8GutdE5^:R(?7PW+"'d+4*8e%XkQkR1H>di;iBBf@,Z,H#fN]S4pJGroRQbY<;!=2Q-`A[WQD2I^-Ve8BYCt*_U$,4'0$E^h)a-(\%8Q!?&&eGNLm3&YnjnI.%9uO%X/Mc##&C97J[51>#0Q)cb9g*MN_*3NbsF$HPA9a6)Vh&(o1^FYRKp*n9l2M:@l/J#hqSj>Php_[gbf))BrRJMjet46;)):_kZ).;%=.>>1^Jr`MjE;[,o5<R\=_%L0QU"j4`oPOJcooll<P)ujN"dqsR>!/p,dCs4\4OJ10Q9l"l;6A5f0%LR8a0n_E<p6N[+5Ur<uXKX%fT1QJ[6b[(Et_cChE.G8Ym66%ma9Rhde%uS*uaq*MLSjsZE[a<Fa&V.;8]phNi/a]GJLM2B1Ht9?0:&jYS8UN?u[+'Ls]KRmd=Ai%O!^Mh)-R8;eP*r2cu"P\X9=s(X&Yl_Ki`Zic$*9U7R[s;2_2-?T;!:d/5j@45\[>:b%O$SFk<lpj:sf%ihI=b2jHF]nOdJ4j,i;:%;AYJJ^NIM_j[A@7Br%eE$)r)``N^,;fh&k^W)Y$b'GO_X0\qZ3'Y9,1-*(;Tp:A5qn%T"jib$b)md\ECH_t'o1[ga*+2UTDH^dK[%W,Y?_<c=EG^-l1Y,%S.-4k>\a?QsW6K:5Z$k!c#HB8_?sN)X'\q@Tr&!l+-bk!mMDI1)FUXJ4DR`C$uA^gW*pPLVh/!=b:EHD+;,%"iiDZQ9/-NcDF$q(Ygp3F)Oq;75=a?`R`L\j2OU-CE4";lajN3!k!"Re1=n*)H_ccV]Dh84Xb)#L`tQI$YQ__0uO,gA%#3ke0Q:(%5<\dKe_)Ri"DZs.W$*G*5ddXn&?m$`EL$%MDVesojJ/,PHLR9;mM<"6X36gg8jXqrTLKf&09drB8(')%a!_(&3HT/MF>aLq55Fc\%<QsRj/pknmC0-,'`d8Et[u6"-^BA<3OCJ.K-9Ka+WhDM=edIicJ`(@ZatYT7GH_[ZLHuA*;jGl#,"4--&6p>>)CV`\6E+%k&@!l<%KO`*ODX&QE)"qo'($FP!3klSbiY\IV::KJXXng/3h3C,=[.[.c2@b;l%o.27C?Sd,.bS5=2`t%s*3sQ5k,W\#70,R?ismK(a9XX9%!u`SiFh*ZmW,8Ha2UjeG=:*OZW0^]%;69r1+j1[k_WC/9T=A/"/!e"bf*K2U7sg5hJ^R`b<Ukc[L6iu+Xa3llNF9jC=pcK#d=lsZ%qkead*Yn;F8WIa(U/5DSkr`m+g"-#cBV;``$ftdHL6@Yh<u\Bdf3<'%-q7"anF??D3LXubbqQTqD0h8<lOC&S2(kNhrG)o`%@#Fi%U"!9H>IV;qZ0JS0i+\N^j:3#Oo$KfZ[d[kAD4nV`Nd)6N0QZncL*)B*Ruc[pJ]o3P!(*fobq]TJ]qAfZ8oU'g1d-n#(7W_\Nlj"S%!=mCgc4pf+oT6[kL<8gp]#l`R782PEJbaX'a?^%'RbC)^R&uX;+nE;+&hk:VLrq\W/eo:r-cg96]i$?K\T3!Q^>m*04MGN5L;mjc%FGe1H=HVe).9+_T?TYVd^*BGp5pjZ:<[onQ.jG.Ne@c49A2+enE85;T(^%f)oLN\tcc5*^?j@"(U+Z+Jg5BJ1luU1m3T]6#WAAYP%U!A0.["D-)XHdPL3$;enJ3<5/":WF$2)@^]:Jp(jJfL-(.AO1t/#Pn4UG:e,?^1neIIND@%*,pg]eJOe>0t:"%IO,t+U?&if!8+`%[7D,^6f`O5-")F\GMiV%gA3otN_AT$;-D5)e+NKLe1g_uZ7(E"'8B)!35g'"h$G,K65$Ie6OjG5De5V/XSoSHE^ZLC>QP,M+Aj#S%``mV2?IRV5TiX]p4]bC>`cm4k/(*=c'%g3N'hhkUU`3AA=?@&P5jTPF+9uc#IB6E(j/.No+nE;+&hk0qW1@oHdX-J8+NGf#b,DE)%`p%es2!Ud>+Ct>6o7LJGbQ1:(6?fD6.GY<`Aj?j[3;6_p.LTfe:6*Ee\=I#0c9fL?+<]D/4@P9gpWBGIkK<&:p^U<T>@pj0<ud^"%0nob2PM"=*<^F2f`X'Z%2caZsW)0(2j^a00n$iLZ!^Q4EO[e[4itOL+hC5A.N[pmjdF"<h%\7WeAE,8q+kTd"D[B!cPQo/>O5[l?%(K7jAXjNZZmsX/(!'f_X":204E>Q-Tl?Zg/`5$@!]ho^6YB%/lPDV$``+lqSJBk&8KD!pJOi6Df>q]H"@=Ue5p_AL[>(EquW?L8h%X18FJB;:-dJHXcgUBFu(`SE6el`d\**gQ08+to&@CstP80f4SJdj`(3>a/Hm]M"\DP)ppDC,@CS$(D;M6hGZ:.gq*4(A5rj62:-7%EJj7_baic()iQIs1qH$b:.Z_D*JFoSs&,]Z&/e86!4o^-FYsmoaBL#hlpc\5Z7@:ijE\cl@%D-SJ^`PPEd4/u,2]q47V+_A:=nN9%9r.WfcebSRHgNjAKfm_QcRr+9Y_JCm4(?0;@65Ob6A5O^D;jQ34R[+L=QRuEJWgcq&'koB2';(J;-D5)e+NK8:6-r'fkTMfN9_e=%eXEHL[Q#)N*L`8r_W(8OO=jM#$]I+k"6=1:-",mST[S]Ol;BFk+/d2"nP2*0p"MH3O,eEpgiAXM[AhWn0UQHd?Q4=]XmmG7qr$7&%5Rt(ZnsahQ8C!Ka+nE;+&hpk5*B7mU4W0h=aDhO"1+MV#EOm25T;A3;;PY7<0;Z[4.'jeSr/SD%kcM;*OAV-kK0k@h6u=d-T@:Zs%&:W2M$'<Y*$[`jff'ulO*1,"oV6MWlS#^NL'(`pt)Tog&0cu"<h;"tZ&!B<mP.5*c?)aJ#W5ue8,P"0$<7*KsNl^gP9>HVsEm&ZX%'/EaocP,BLKO,O]p"VN4O71c@B_-^,VpHBZ_*MAM%7*n':^U5$&EquEJKmp`'YDre(?S=uY&mEf\uJ%dSTL+e$,_EhA`UC\e$1ST%CO6Hd70`U1AH<)H>K08!#F7A)a@BbMDa;(Y(n]+?:Prr6AJq:e4-%an0ICR^$i<?sqK-V'_uSCgjt]bD7jTr](oUkO:tG=Up>lMT%?Re;1ScGPC1dr'\3sTD*DX.1>/.YHol"t?IhY*]j1B,rRfHQ?k=gFm\1^lgZ(9;cq6URMi/5e]%TAl?4i;:#scgSjEGlOt\Ms'Jd%T.@5ZMJ!B''^_I^KMR90ZT5)EA7sPC^]s&oPh=aEhSQqmQ`C8fg]ZJs+2(I1Nh/%2D$?_-U?&[kpJe2R7S7O2;@ZI50P@XE.)Xsn%W(,GcRHa?c&q,WrCPHpDc^WgiM`\$3$GW_jQ*E=`/C#b$[ACI[i@W:.IaR6C5;tOMoi*/.T?UG$WOQ9!UL<V!!k!"Re9oA'VmdmZ%jgIoE6<l(u_582!bB>c)MEQI35?DFUpK,h(dpqDV2*3"jc99(Lqg`[NBjIV2(?TJKfQ-tZ(N?Ni]NO`VcYEp?`<.#,XnC5`EhD%9%m!=7n+oK2i]2d1IUpI2Uo4RsleIU9b`r1raKs!p8FQ08)(j6uTjNHFb?=rmHk&#S_[4Zj,GB2L`f?gb`b1Lu99hemuQ1i[d(GM2b%g]MTDa,maB:c1h_m[P!=k8fn>jmu],8]j#,h?\V&,3$8.?9+:1`].7bms,(uo@#QYk\EI-4+sD,$m$3MFpte*lc+',#4-R*2Pt?[%Dt&+q6cILZs"Gep749_50M6a&ko7Wa$a[;92u()I3'VKDpG!gjOdC]/)>=3a\\!]4g\Vrf??2Q3+8Ea@E//J`AXm=PiSQVl>F;k4%^VT@ba8,A$^Z"b<P`j!@:</GW"Wh-PPLECpp_HnH9TT"_j>`bqoDAE_rqAhkTdiaiate+K+DH+NKA3S?cY@ZR\l8eFiQRoeXrO_<%p/5n^)d>T\\Gc`;V/shri?]:FJ;-:f;$oL]66]YE!,?UeH2sHL!-?R3gB=mP'0:=H=EZdClsNLNS)SnU7f,`fqt&,Se-!.H5Fntt%OWqF02MmbL+Y9.<3p9Jo*=s\NIj.7sB26MQ[12g6,e9RlJt81'Nf6E/b7iU/,^.>bc7QB:%ZjQ#'nPl.pJa-9rBq8'2>8A1@WOi\%-44Vlen7mdI;m@f2L0#ue9#U;o=4_g),&oP'DQih5tK/23u&:;L.lq.mOkAb&)_j9$dpmWM#KRp^BoYW03Hd'1I^+3'"YK_SDaDq%Uo'FuGF^H=#2VkSi6LQ+`TjT$:!fBEggHa<LdC6:/=*VPk[LGPQPkW*AddOF":LA.;i08Ur$LXP?dO2tftm)9XA<(V/Y.)t,V7]J%A+p!c(Xb>)>mA8bDdhMr=!Pma&LF_F:PmX`pZGBflptE)f>^X[nm.soEQC]5qks`WA!rRC=;:2.L>7SEM4X`>'[YU?,iCY[*@1sa%0.b+IQFj:IJ)#oHB)78+![A)=c3;c+OsMl8OotAFW^oa`]ubhFNH,g\+f"q=N=$^;Kb1lDZG%>_[e)%?$0s@hfr-&<egEaFS8o%G%SZ%X%Uf0Y1p"9XD'F]j";%EB-h0':'h)uf',l!`',c49&Nf.!:7:8'LaATp)r5+qAj&@/E1Qds*!(3:OUs4jgmQ6rl#U1Ce=!6Zi%?)DMPH)jV-0pb`7EG5Q'35-VS=!L*hURDf36?2tRVp=u1r,HgOFAfH^WJ5T0?V0(n=W37Ol2PF9R'481?@<'PoD9Vi:HuLAp[I-+%VtbQ1h,e,63rf'd"OmY^J?N:orq\VRp%I/7T,p8oRo:TFqX-IiT;RTch`Ug]pXRmQm!%@"rTX80_Ht"Wf=SeI]_h$lT9u_(qD?b$%Rt#fpZM?Lmhu<-D5D?97c`hcprmRe>Djg*=kPs^bQGqDQlcZ?4^ZjYSiSED[+9(lo_f($OH1gGU&)Y.tl\C6;IXLbGo)6UaJ%rO@%GkV\8I.Ph_bMDn7hL%EhoUEIRs*Xir5gC]Krp&#Urqsg[rrZm^s(_~>%AI9_PrivateDataEnd