#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage[compact]{titlesec}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 0.5in
\topmargin 0.5in
\rightmargin 0.5in
\bottommargin 0.5in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes true
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\author -1108911377 "Kagami" 
\end_header

\begin_body

\begin_layout Section*
Methods
\end_layout

\begin_layout Paragraph*
Machine learning
\end_layout

\begin_layout Standard
The boundaries between neurons in subvolumes of the e2198 and e2006 datasets
 were manually traced.
 Using this as ground truth, a convolutional network (CN) was trained to
 detect boundaries between neurons using the MALIS method 
\begin_inset CommandInset citation
LatexCommand citep
key "TuragaMALIS09"

\end_inset

.
 The CN had the same architecture as one used previously 
\begin_inset CommandInset citation
LatexCommand citep
key "Helmstaedter:2013zr"

\end_inset

, and produced as output an affinity graph connecting nearest neighbor voxels
 
\begin_inset CommandInset citation
LatexCommand citep
key "Turaga:2010ij"

\end_inset

.
 Any subvolume of e2198 could be oversegmented by applying a modified watershed
 algorithm to the appropriate subgraph.
 The regions of the oversegmentation will be called supervoxels.
\end_layout

\begin_layout Paragraph*
Reconstruction by workers
\end_layout

\begin_layout Standard
A team of part-time workers, numbering about half a dozen at any given time,
 also reconstructed neurons using a more sophisticated version of the EyeWire
 interface.
 Workers were hired based on an interview and a short test of software use
 passed by 3/4 of the applicants.
 They were trained for 40 to 50 hours before generating reconstructions
 used for research.
 Their skills typically improved for months or even years after the initial
 training period, and were superior to those of professional neuroscientists
 without reconstruction experience.
  
\end_layout

\begin_layout Standard
As with EyeWire, the task of reconstructing an entire neuron was divided
 into subtasks, each of which involved reconstructing the neuron within
 a subvolume starting from a supervoxel 
\begin_inset Quotes eld
\end_inset

seed.
\begin_inset Quotes erd
\end_inset

 However, the subvolumes were roughly 100 times larger than EyeWire cubes,
 and only two workers were assigned to each subvolume.
 In the first stage of error correction, disagreements were detected by
 computer, and resolved by one of the two workers, or a third worker.
 The third occasionally detected and corrected errors that were not disagreement
s between the first two.
 Most disagreements were the result of careless errors, and were easily
 resolved.
 More rarely, there were disagreements caused by fundamental ambiguities
 in the image.
 These locations were noted for later examination with more contextual informati
on, as described below.
\end_layout

\begin_layout Standard
In the second stage of error correction, 3D reconstructions of entire neurons
 were assembled from multiple subvolumes and inspected by one of the authors
 (J.S.K.).
 Suspicious branches or terminations, as well as overlaps between reconstruction
s of different neurons were detected.
 The original image was reexamined at these locations to check for errors.
 The process was repeated until no further errors could be detected.
 The F-score (Figure 2b) between the reconstructions before and after the
 second stage was 0.99 for SACs and 0.98 for BCs.
 Some errors may still remain, but it is likely that correcting them would
 have similarly little effect.
 
\end_layout

\begin_layout Paragraph
Reconstruction by EyeWirers
\end_layout

\begin_layout Standard
Even before the learning in normal gameplay illustrated by Figure 2d, all
 EyeWirers are required to go through a training session immediately after
 registering for the site.
 This consists of a sequence of tutorial cubes, each of which was previously
 colored by an expert (Supplementary Figure 6).
 Each cube teaches through instructions and per-click feedback about accuracy
 based on comparing the EyeWirer's selections with those of the expert.
 After submitting a tutorial cube, the EyeWirer is given a chance to view
 mistakes.
\end_layout

\begin_layout Standard
Accuracy is monitored on a weekly basis by computing the precision and recall
 of each EyeWirer with respect to the truth, defined as neuron reconstructions
 based on EyeWire consensus followed by GrimReaper corrections.
 Less accurate EyeWirers are given less weight in the vote, which appears
 to improve the overall accuracy of the system.
\end_layout

\begin_layout Standard
Players' daily, weekly, and monthly scores are publicly displayed on a leaderboa
rd (Supplementary Figure 7, right), motivating players to excel through
 competition.
 Players communicate with each other through online 
\begin_inset Quotes eld
\end_inset

chat
\begin_inset Quotes erd
\end_inset

 (Supplementary Figure 7, left) and discussion forums.
\end_layout

\begin_layout Standard
A 
\begin_inset Quotes eld
\end_inset

beta test
\begin_inset Quotes erd
\end_inset

 version of EyeWire was deployed in February 2012, and attracted a small
 group of users, who helped guide software development.
 After the official launch in December 2012, EyeWire was successful at reconstru
cting ganglion cells, but did not work well for reconstructing the more
 difficult SACs.
 In March 2013, EyeWirers were invited to the 
\begin_inset Quotes eld
\end_inset

Starburst Challenge,
\begin_inset Quotes erd
\end_inset

 a sequence of tutorial cubes drawn from SACs.
 Those who passed with sufficient accuracy were an elite group allowed to
 reconstruct SACs (Supplementary Information).
\end_layout

\begin_layout Standard
Some SACs were reconstructed twice, once by workers and once by EyeWire.
 
\end_layout

\begin_layout Paragraph*
Reconstruction of Off SACs
\end_layout

\begin_layout Standard
Off SACs were reconstructed by (1) forward tracing from the soma to dendritic
 tips and (2) backward tracing from varicosities on candidate SAC dendrites
 to the soma.
 In the forward method, a candidate SAC soma was identified as a supervoxel
 with a characteristic pattern of dendritic stubs bearing spiny protrusions.
 By the time reconstruction progressed to approximately half of the average
 SAC radius, an Off SAC could be conclusively recognized by its starburst
 shape and narrow stratification at the appropriate IPL depth.
 More than 90% of candidates turned out to be SACs.
 
\end_layout

\begin_layout Standard
In the backward method, we located a thin dendrite with varicosities at
 the appropriate IPL depth.
 This was reconstructed back to the soma, and then the rest of the dendrites
 were reconstructed from the soma to the tips.
 The cell could be discarded at any point during this process, if its dendrites
 escaped from the appropriate IPL depth or failed to exhibit the proper
 morphological characteristics.
 Less than 25% of initial candidates ended up confirmed as SACs.
 
\end_layout

\begin_layout Standard
In total, 79 Off SACs were reconstructed, 39 by forward tracing and 52 by
 backward tracing.
 After candidates were identified by one of the authors (J.S.K.), reconstructions
 were performed by lab workers (59 cells) or by EyeWirers (29 cells).
 Overlapping numbers (12 for forward/backward, 9 for workers/EyeWirers)
 mean the combination of the two.
\end_layout

\begin_layout Paragraph*
Reconstruction of Off BCs
\end_layout

\begin_layout Standard
Because only part of the inner nuclear layer (INL) was encompassed in e2198,
 the somata of Off bipolar cells (BCs) were generally outside the dataset.
 Therefore we searched the INL for candidate BC axons traveling between
 the somata, and traced them into the INL.
 Those that arborized in the Off region of the INL were further reconstructed.
 Cells that violated known BC structures were identified as amacrine cells
 and discarded 
\begin_inset CommandInset citation
LatexCommand citep
key "Helmstaedter:2013zr"

\end_inset

.
\end_layout

\begin_layout Standard
BC axons were difficult to reconstruct due to poor staining, and their highly
 irregular shapes.
 They could not be accurately reconstructed (either by online volunteers
 or lab experts) within the 
\begin_inset Formula $256^{3}$
\end_inset

 cubes of EyeWire, which were too small to provide sufficient spatial context.
 Therefore BCs were reconstructed only by lab workers using the large subvolumes
 mentioned above.
 
\end_layout

\begin_layout Paragraph
Coordinate system
\end_layout

\begin_layout Standard
For more precise quantification of structural properties, a new coordinate
 system was defined by applying a nonlinear transformation to reconstructed
 neurons so as to flatten the IPL and make it perpendicular to one of the
 coordinate axes.
 The nonlinear transformation was found by the following steps.
 First a global planar approximation to the Off SAC surface was computed.
 Then the centroid of all the SACs was projected onto this global plane
 to define the origin of the coordinate system.
 The projection was along the coordinate axis of the e2198 volume closest
 in direction to the light axis.
 
\end_layout

\begin_layout Standard
To correct for curvature, an azimuthal equidistant projection of the Off
 SAC surface onto the global plane was made about the origin 
\begin_inset Note Note
status open

\begin_layout Plain Layout
citation
\change_inserted -1108911377 1381540378
; how about: Snyder, John Parr.
 Map projections--A working manual.
 No.
 1395.
 USGPO, 1987, p191-202.
 
\change_unchanged

\end_layout

\end_inset

.
 Then local planar approximations to the SAC surface were computed in the
 neighborhoods of every node in a triangular lattice.
 At each point in a triangle, the SAC surface was approximated by computing
 the mean of the planar approximations (as quaternions with yaw constrained
 to be zero) for the triangle's vertices, weighted by distance of the point
 from the vertices.
\end_layout

\begin_layout Standard
The Off SACs were defined as 32% IPL depth.
 We also reconstructed a few On SACs, and defined them as 62%.
 These choices placed the edge of the INL at 0%.
 Structural properties of all cells were computed based on the locations
 of their surface voxels after transformation into the new coordinates.
 All dimensions are uncorrected for tissue shrinkage, which was previously
 estimated at 14% by comparison of two-photon and serial EM images 
\begin_inset CommandInset citation
LatexCommand citep
key "helmstaedter:2013connectomic"

\end_inset

.
\end_layout

\begin_layout Paragraph
Classification of Off bipolar cells
\end_layout

\begin_layout Standard
BC stratification profiles were computed by dividing surface voxels into
 100 bins spanning 0 to 100% IPL depth.
 Classification into cell types was done by using methods similar to those
 described previously 
\begin_inset CommandInset citation
LatexCommand citep
key "Helmstaedter:2013zr"

\end_inset

.
 The BCs were split into shallow (BC1/2) and deep (BC1/2) clusters using
 the 75th percentile depth of the stratification profile.
 The BC1/2 cluster was further subdivided by stratification width, defined
 as the difference between 75th and 25th percentile depths.
 The wider cluster was identified as BC2 and the narrower cluster as BC1,
 based on a molecular classification showing that BC2 has more cells per
 square millimeter than BC1 
\begin_inset CommandInset citation
LatexCommand citep
key "wassle2009cone"

\end_inset

.
 This correspondence between structural and molecular classifications is
 the opposite of a previous report 
\begin_inset CommandInset citation
LatexCommand citep
key "Helmstaedter:2013zr"

\end_inset

.
 The discrepancy may be due to methodological differences, such as computing
 stratification profiles based on surface voxels versus skeletons.
 The BC3/4 cluster was subdivided into BC4 and BC3 by the 10th percentile
 depth, because the molecularly defined BC4 stratifies closer to the INL
 
\begin_inset CommandInset citation
LatexCommand citep
key "wassle2009cone"

\end_inset

.
 Finally, BC3 was subdivided into BC3a and BC3b based on axonal arbor volume,
 with BC3a having the larger axonal volume.
 Supplementary Figure xxx shows that each of the above subdivision steps
 was based on a feature with a roughly bimodal histogram.
 
\end_layout

\begin_layout Standard
The result still contained a small number of classification errors, as adjacent
 BCs of the same type overlapped enough to violate the mosaic property.
 Corrections were made by an automatic algorithm that greedily swapped cells
 from one cluster to another such that the total overlap between convex
 hulls of cells of a given type was minimized.
 Two swaps were vetoed by an expert (J.S.K) on the basis of morphological
 features.
 In all, six cells were swapped within BC1/2 and 13 within BC3/4.
 In the final classification, 41, 56, 29, 35, and 34 BCs were identified
 as types 1, 2, 3a, 3b, and 4, respectively (Supplementary Figure 2a-e,
 Supplementary Table 1).
 A few cells that violated the mosaic of all types and had irregular stratificat
ion profiles were discarded as possible reconstruction errors or amacrine
 cells.
 
\end_layout

\begin_layout Paragraph*
Contact analysis
\end_layout

\begin_layout Standard
Edges of the affinity graph connecting BC with SAC voxels were defined as
 BC-SAC contact edges.
 For each pair, the sum of the edges yielded an estimate of contact area.
 The Euclidean distance separating each BC-SAC pair was computed after projectin
g their centers onto the SAC plane.
 Centers of SAC somata were manually annotated, and centers of BC arbors
 were computed as the centroids of their surface voxels.
 The pairs were binned by distance of the BC from the SAC soma.
 For every pair in a bin, the fraction of SAC surface area devoted to BC-SAC
 contact within the convex hull of the BC was computed as the ratio of BC-SAC
 contact edges to SAC surface edges within the convex hull.
 The latter was estimated by the number of SAC surface voxels multiplied
 by a geometric conversion factor of 1.4 SAC surface edges per surface voxel.
 (This factor was estimated by dividing the total number of SAC surface
 edges by the total number of SAC surface voxels in the volume.) BC-SAC pairs
 with fewer than 10,000 SAC surface voxels inside the hull were excluded
 from the computation to reduce the effect of fluctuations.
 The ratios for BCs of the same type were averaged for each distance bin
\change_inserted -1108911377 1381540304
 and multiplied by a mosaic overlap factor
\change_unchanged
 to yield the values in Figure 4d.

\change_inserted -1108911377 1381540691
 The mosaic overlap factor represents the extent to which neighboring convex
 hulls overlap one another, which varies by cell type.
 This factor was computed by dividing the sum of the hull areas for each
 cell by the area of the union of hulls for each cell type.
\end_layout

\begin_layout Standard

\change_inserted -1108911377 1381540994
In instances where edges in the affinity graph are converted to area in
 
\begin_inset Formula $\text{μ}m^{2}$
\end_inset

, the conversion factor of 291.5
\begin_inset Formula $\text{μ}m^{2}$
\end_inset

 per edge is used.
 This factor estimates the real surface area of the cell given the different
 possible orientations of edges and effects from pixelization.
\change_unchanged

\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
We should probably stop averaging the ratio over pairs.
 Better to sum contact and sum surface area, and then take the ratio at
 the end.
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Co-stratification analysis
\end_layout

\begin_layout Standard
All SAC surface voxels were binned by distance from the soma center in the
 SAC plane.
 Within each bin, the stratification profile was computed as for the BCs.
 The quartiles (median and 
\begin_inset Formula $25$
\end_inset

th and 
\begin_inset Formula $75$
\end_inset

th percentiles) are graphed in Figure 5a.
 The prediction of contact from co-stratification is based on the following
 formalism.
 
\end_layout

\begin_layout Standard
We define the arbor density 
\begin_inset Formula $\rho_{a}(\vec{r})$
\end_inset

 as the surface area per unit volume at location 
\begin_inset Formula $\vec{r}$
\end_inset

 of a type 
\begin_inset Formula $a$
\end_inset

 cell with soma centered at the origin.
 Its integral 
\begin_inset Formula $\int d^{3}r\,\rho_{a}(\vec{r})$
\end_inset

 is the total surface area of the arbor.
 We assume that the contact density received by one cell of type 
\begin_inset Formula $a$
\end_inset

 from all cells of type 
\begin_inset Formula $b$
\end_inset

 is equal to 
\begin_inset Formula 
\begin{equation}
c_{ab}(\vec{r})=\rho_{a}(\vec{r})\sum_{i}\rho_{b}(\vec{r}-\vec{r}_{bi})\label{eq:ContactDensity}
\end{equation}

\end_inset

The sum over the 
\begin_inset Formula $b$
\end_inset

 mosaic can be approximated by a function that is independent of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

,
\begin_inset Formula 
\begin{equation}
\sum_{i}\rho_{b}(\vec{r}-\vec{r}_{bi})\approx\sigma_{b}s_{b}(z)\label{eq:MosaicSum}
\end{equation}

\end_inset

where 
\begin_inset Formula $\sigma_{b}$
\end_inset

 is the number of type 
\begin_inset Formula $b$
\end_inset

 neurons per retinal area and
\begin_inset Formula 
\begin{equation}
s_{b}(z)=\int dxdy\,\rho_{b}(x,y,z)\label{eq:StratificationArborDensity}
\end{equation}

\end_inset

is the stratification profile of a cell of type 
\begin_inset Formula $b$
\end_inset

.
 The SAC arbor density is assumed radially symmetric, 
\begin_inset Formula $\rho_{SAC}(\vec{r})=\rho_{SAC}\left(\sqrt{x^{2}+y^{2}},z\right)$
\end_inset

, where 
\begin_inset Formula $\phi$
\end_inset

 can be regarded (up to normalization) as the SAC stratification profile
 as a function of distance 
\begin_inset Formula $r=\sqrt{x^{2}+y^{2}}$
\end_inset

 from the SAC soma.
 Integrating the contact density (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ContactDensity"

\end_inset

) and normalizing yields the fraction 
\begin_inset Formula $\phi_{b}(r)$
\end_inset

 of SAC area contacted by cell type 
\begin_inset Formula $b$
\end_inset

 as a function of 
\begin_inset Formula $r$
\end_inset

, 
\begin_inset Formula 
\begin{equation}
\phi_{b}(r)=\sigma_{b}\frac{\int dz\:\rho_{SAC}(r,z)s_{b}(z)}{\int dz\:\rho_{SAC}(r,z)}\label{eq:FractionalContactArea}
\end{equation}

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Can you confirm this is exactly what you calculated in Figure 5b?
\change_inserted -1108911377 1381540339
 yes, my derivation is slightly different, but the result is identical
\change_unchanged

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
Mathematical model of the BC-SAC circuit
\end_layout

\begin_layout Standard
The output 
\begin_inset Formula $O(t)$
\end_inset

 of a SAC dendrite is modeled as 
\begin_inset Formula 
\begin{equation}
O(t)=g\left(\sum_{i=1}^{n}c_{i}f_{i}\left(\int dxdt'w_{i}(x,t-t')I(x,t')\right)\right)\label{eq:Cascade}
\end{equation}

\end_inset

The dendrite and the visual stimulus 
\begin_inset Formula $I(x,t)$
\end_inset

 are restricted for simplicity to a single spatial dimension 
\begin_inset Formula $x$
\end_inset

.
 The 
\begin_inset Formula $i$
\end_inset

th BC filters the visual stimulus with 
\begin_inset Formula $w_{i}(x,t)$
\end_inset

, and the result is passed through the nonlinear function 
\begin_inset Formula $f_{i}$
\end_inset

.
 The contributions from the BCs are weighted by the 
\begin_inset Formula $c_{i}<0$
\end_inset

, summed, and passed through a nonlinear function 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout Standard
Suppose that 
\begin_inset Formula $f_{i}(z)=\left[z+b_{i}\right]^{+}$
\end_inset

 with 
\begin_inset Formula $b_{i}>0$
\end_inset

 corresponding to spontaneous output in the absence of visual stimulation.
 Then the BC output nonlinearity can be neglected for visual stimuli with
 sufficiently small amplitude.
 Also suppose that 
\begin_inset Formula $g(z)=\left[z-a\right]^{+}$
\end_inset

, where 
\begin_inset Formula $a>0$
\end_inset

 corresponds to a threshold for SAC response, or some source of spontaneous
 inhibitory input.
 Then Eq.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Cascade"

\end_inset

) simplifies to 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
O(t)=\left[\int dxdt'\sum_{i=1}^{n}c_{i}w_{i}(x,t-t')I(x,t')+\sum_{i}b_{i}c_{i}-a\right]^{+}\label{eq:LN-model-with-offset}
\end{equation}

\end_inset

Now assume that each spatiotemporal filter is separable, 
\begin_inset Formula $w_{i}(x,t)\approx u_{i}(x)v_{i}(t)$
\end_inset

, and that each temporal filter is either sustained or transient, 
\begin_inset Formula $v_{s}(t)$
\end_inset

 or 
\begin_inset Formula $v_{t}(t)$
\end_inset

.
 Then 
\begin_inset Formula 
\[
\sum_{i}c_{i}w_{i}(x,t)\approx U_{s}(x)v_{s}(t)+U_{t}(x)v_{t}(t)
\]

\end_inset

where 
\begin_inset Formula $U_{s}(x)=\sum_{i\in S}c_{i}u_{i}(x)$
\end_inset

 and 
\begin_inset Formula $U_{t}(x)=\sum_{i\in T}c_{i}u_{i}(x)$
\end_inset

 are the weighted sums of spatial filters over the sustained and transient
 sets of BCs.
 Finally, Eq.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:LN-model-with-offset"

\end_inset

) reduces to Eq.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:LN-model"

\end_inset

) if 
\begin_inset Formula $a=\sum_{i}b_{i}c_{i}$
\end_inset

.
 
\end_layout

\begin_layout Standard
If the visual stimulus is a sinusoidal traveling wave, 
\begin_inset Formula $I(x,t)=\cos(kx-\omega t)$
\end_inset

, then the integral in Eq.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:LN-model"

\end_inset

) yields a sine wave given by the real part of 
\begin_inset Formula 
\begin{eqnarray*}
\left[\tilde{u}_{s}(k)\tilde{v}_{s}(\omega)+\tilde{u}_{t}(k)\tilde{v}_{t}(\omega)\right]e^{-i\omega t} & = & \tilde{u}_{s}(k)\tilde{v}_{s}(\omega)\left[1-i\omega\tau e^{ik\Delta x}\right]e^{-i\omega t}
\end{eqnarray*}

\end_inset

where 
\begin_inset Formula $\tilde{u}_{s}(k)=\int dx\, e^{ikx}u_{s}(x)$
\end_inset

 and other Fourier transforms are defined similarly.
 The amplitude of the sine wave defines the peak and time-averaged response
 of Eq.
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:LN-model"

\end_inset

): 
\begin_inset Formula 
\begin{eqnarray*}
A(k,\omega) & = & \left|\tilde{u}_{s}(k)\right|\left|\tilde{v}_{s}(\omega)\right|\left|1-i\omega\tau e^{ik\Delta x}\right|\\
 & = & \left|\tilde{u}_{s}(k)\right|\left|\tilde{v}_{s}(\omega)\right|\sqrt{1+2\omega\tau\sin k\Delta x+\left(\omega\tau\right)^{2}}
\end{eqnarray*}

\end_inset

The term linear in 
\begin_inset Formula $\omega$
\end_inset

 is the DS component of the response.
 Assuming 
\begin_inset Formula $\omega>0$
\end_inset

 and 
\begin_inset Formula $\Delta x>0$
\end_inset

 without loss of generality, the preferred direction (PD) is rightward for
 spatial frequencies satisfying 
\begin_inset Formula $\left|k\Delta x\right|<\pi$
\end_inset

.
 Outside this range, spatial aliasing can cause the PD to reverse.
 The direction selectivity index (DSI) is 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
DSI & = & \frac{PD-ND}{PD}=1-\sqrt{\frac{1-2\omega\tau\left|\sin k\Delta x\right|+\left(\omega\tau\right)^{2}}{1+2\omega\tau\left|\sin k\Delta x\right|+\left(\omega\tau\right)^{2}}}
\end{eqnarray*}

\end_inset

which can be rewritten as Eq.
\begin_inset space \space{}
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:DSI"

\end_inset

) in the main text.
 This is a periodic function of 
\begin_inset Formula $k$
\end_inset

, because the DSI is a ratio of responses.
 The responses themselves will typically vanish for large 
\begin_inset Formula $k$
\end_inset

, due to the spatial filtering, but the DSI is independent of the filter
 functions.
 According to the second line, 
\begin_inset Formula $0\leq DSI\leq1$
\end_inset

.
 The third line is maximized for any fixed 
\begin_inset Formula $\omega$
\end_inset

 when 
\begin_inset Formula $k\Delta x=\pi/2$
\end_inset

.
 This means that an optimal wavelength for the stimulus is 
\begin_inset Formula $\lambda=4\Delta x$
\end_inset

.
 Then
\begin_inset Formula 
\[
DSI=1-\frac{1-\omega\tau}{1+\omega\tau}
\]

\end_inset

which in turn is maximized when 
\begin_inset Formula $\omega\tau=1$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "EyeWire"
options "unsrtnat"

\end_inset


\end_layout

\end_body
\end_document
